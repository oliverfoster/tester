/*
 RequireJS 2.1.8 Copyright (c) 2010-2012, The Dojo Foundation All Rights Reserved.
 Available via the MIT or new BSD license.
 see: http://github.com/jrburke/requirejs for details
*/
var requirejs,require,define;
(function(Z){function H(b){return"[object Function]"===L.call(b)}function I(b){return"[object Array]"===L.call(b)}function y(b,c){if(b){var d;for(d=0;d<b.length&&(!b[d]||!c(b[d],d,b));d+=1);}}function M(b,c){if(b){var d;for(d=b.length-1;-1<d&&(!b[d]||!c(b[d],d,b));d-=1);}}function s(b,c){return ga.call(b,c)}function l(b,c){return s(b,c)&&b[c]}function F(b,c){for(var d in b)if(s(b,d)&&c(b[d],d))break}function Q(b,c,d,h){c&&F(c,function(c,j){if(d||!s(b,j))h&&"string"!==typeof c?(b[j]||(b[j]={}),Q(b[j],
c,d,h)):b[j]=c});return b}function u(b,c){return function(){return c.apply(b,arguments)}}function aa(b){throw b;}function ba(b){if(!b)return b;var c=Z;y(b.split("."),function(b){c=c[b]});return c}function A(b,c,d,h){c=Error(c+"\nhttp://requirejs.org/docs/errors.html#"+b);c.requireType=b;c.requireModules=h;d&&(c.originalError=d);return c}function ha(b){function c(a,f,b){var e,m,c,g,d,h,j,i=f&&f.split("/");e=i;var n=k.map,p=n&&n["*"];if(a&&"."===a.charAt(0))if(f){e=l(k.pkgs,f)?i=[f]:i.slice(0,i.length-
1);f=a=e.concat(a.split("/"));for(e=0;f[e];e+=1)if(m=f[e],"."===m)f.splice(e,1),e-=1;else if(".."===m)if(1===e&&(".."===f[2]||".."===f[0]))break;else 0<e&&(f.splice(e-1,2),e-=2);e=l(k.pkgs,f=a[0]);a=a.join("/");e&&a===f+"/"+e.main&&(a=f)}else 0===a.indexOf("./")&&(a=a.substring(2));if(b&&n&&(i||p)){f=a.split("/");for(e=f.length;0<e;e-=1){c=f.slice(0,e).join("/");if(i)for(m=i.length;0<m;m-=1)if(b=l(n,i.slice(0,m).join("/")))if(b=l(b,c)){g=b;d=e;break}if(g)break;!h&&(p&&l(p,c))&&(h=l(p,c),j=e)}!g&&
h&&(g=h,d=j);g&&(f.splice(0,d,g),a=f.join("/"))}return a}function d(a){z&&y(document.getElementsByTagName("script"),function(f){if(f.getAttribute("data-requiremodule")===a&&f.getAttribute("data-requirecontext")===i.contextName)return f.parentNode.removeChild(f),!0})}function h(a){var f=l(k.paths,a);if(f&&I(f)&&1<f.length)return d(a),f.shift(),i.require.undef(a),i.require([a]),!0}function $(a){var f,b=a?a.indexOf("!"):-1;-1<b&&(f=a.substring(0,b),a=a.substring(b+1,a.length));return[f,a]}function n(a,
f,b,e){var m,B,g=null,d=f?f.name:null,h=a,j=!0,k="";a||(j=!1,a="_@r"+(L+=1));a=$(a);g=a[0];a=a[1];g&&(g=c(g,d,e),B=l(r,g));a&&(g?k=B&&B.normalize?B.normalize(a,function(a){return c(a,d,e)}):c(a,d,e):(k=c(a,d,e),a=$(k),g=a[0],k=a[1],b=!0,m=i.nameToUrl(k)));b=g&&!B&&!b?"_unnormalized"+(M+=1):"";return{prefix:g,name:k,parentMap:f,unnormalized:!!b,url:m,originalName:h,isDefine:j,id:(g?g+"!"+k:k)+b}}function q(a){var f=a.id,b=l(p,f);b||(b=p[f]=new i.Module(a));return b}function t(a,f,b){var e=a.id,m=l(p,
e);if(s(r,e)&&(!m||m.defineEmitComplete))"defined"===f&&b(r[e]);else if(m=q(a),m.error&&"error"===f)b(m.error);else m.on(f,b)}function v(a,f){var b=a.requireModules,e=!1;if(f)f(a);else if(y(b,function(f){if(f=l(p,f))f.error=a,f.events.error&&(e=!0,f.emit("error",a))}),!e)j.onError(a)}function w(){R.length&&(ia.apply(G,[G.length-1,0].concat(R)),R=[])}function x(a){delete p[a];delete T[a]}function E(a,f,b){var e=a.map.id;a.error?a.emit("error",a.error):(f[e]=!0,y(a.depMaps,function(e,c){var g=e.id,
d=l(p,g);d&&(!a.depMatched[c]&&!b[g])&&(l(f,g)?(a.defineDep(c,r[g]),a.check()):E(d,f,b))}),b[e]=!0)}function C(){var a,f,b,e,m=(b=1E3*k.waitSeconds)&&i.startTime+b<(new Date).getTime(),c=[],g=[],j=!1,l=!0;if(!U){U=!0;F(T,function(b){a=b.map;f=a.id;if(b.enabled&&(a.isDefine||g.push(b),!b.error))if(!b.inited&&m)h(f)?j=e=!0:(c.push(f),d(f));else if(!b.inited&&(b.fetched&&a.isDefine)&&(j=!0,!a.prefix))return l=!1});if(m&&c.length)return b=A("timeout","Load timeout for modules: "+c,null,c),b.contextName=
i.contextName,v(b);l&&y(g,function(a){E(a,{},{})});if((!m||e)&&j)if((z||da)&&!V)V=setTimeout(function(){V=0;C()},50);U=!1}}function D(a){s(r,a[0])||q(n(a[0],null,!0)).init(a[1],a[2])}function J(a){var a=a.currentTarget||a.srcElement,b=i.onScriptLoad;a.detachEvent&&!W?a.detachEvent("onreadystatechange",b):a.removeEventListener("load",b,!1);b=i.onScriptError;(!a.detachEvent||W)&&a.removeEventListener("error",b,!1);return{node:a,id:a&&a.getAttribute("data-requiremodule")}}function K(){var a;for(w();G.length;){a=
G.shift();if(null===a[0])return v(A("mismatch","Mismatched anonymous define() module: "+a[a.length-1]));D(a)}}var U,X,i,N,V,k={waitSeconds:7,baseUrl:"./",paths:{},pkgs:{},shim:{},config:{}},p={},T={},Y={},G=[],r={},S={},L=1,M=1;N={require:function(a){return a.require?a.require:a.require=i.makeRequire(a.map)},exports:function(a){a.usingExports=!0;if(a.map.isDefine)return a.exports?a.exports:a.exports=r[a.map.id]={}},module:function(a){return a.module?a.module:a.module={id:a.map.id,uri:a.map.url,config:function(){var b=
l(k.pkgs,a.map.id);return(b?l(k.config,a.map.id+"/"+b.main):l(k.config,a.map.id))||{}},exports:r[a.map.id]}}};X=function(a){this.events=l(Y,a.id)||{};this.map=a;this.shim=l(k.shim,a.id);this.depExports=[];this.depMaps=[];this.depMatched=[];this.pluginMaps={};this.depCount=0};X.prototype={init:function(a,b,c,e){e=e||{};if(!this.inited){this.factory=b;if(c)this.on("error",c);else this.events.error&&(c=u(this,function(a){this.emit("error",a)}));this.depMaps=a&&a.slice(0);this.errback=c;this.inited=!0;
this.ignore=e.ignore;e.enabled||this.enabled?this.enable():this.check()}},defineDep:function(a,b){this.depMatched[a]||(this.depMatched[a]=!0,this.depCount-=1,this.depExports[a]=b)},fetch:function(){if(!this.fetched){this.fetched=!0;i.startTime=(new Date).getTime();var a=this.map;if(this.shim)i.makeRequire(this.map,{enableBuildCallback:!0})(this.shim.deps||[],u(this,function(){return a.prefix?this.callPlugin():this.load()}));else return a.prefix?this.callPlugin():this.load()}},load:function(){var a=
this.map.url;S[a]||(S[a]=!0,i.load(this.map.id,a))},check:function(){if(this.enabled&&!this.enabling){var a,b,c=this.map.id;b=this.depExports;var e=this.exports,m=this.factory;if(this.inited)if(this.error)this.emit("error",this.error);else{if(!this.defining){this.defining=!0;if(1>this.depCount&&!this.defined){if(H(m)){if(this.events.error&&this.map.isDefine||j.onError!==aa)try{e=i.execCb(c,m,b,e)}catch(d){a=d}else e=i.execCb(c,m,b,e);this.map.isDefine&&((b=this.module)&&void 0!==b.exports&&b.exports!==
this.exports?e=b.exports:void 0===e&&this.usingExports&&(e=this.exports));if(a)return a.requireMap=this.map,a.requireModules=this.map.isDefine?[this.map.id]:null,a.requireType=this.map.isDefine?"define":"require",v(this.error=a)}else e=m;this.exports=e;if(this.map.isDefine&&!this.ignore&&(r[c]=e,j.onResourceLoad))j.onResourceLoad(i,this.map,this.depMaps);x(c);this.defined=!0}this.defining=!1;this.defined&&!this.defineEmitted&&(this.defineEmitted=!0,this.emit("defined",this.exports),this.defineEmitComplete=
!0)}}else this.fetch()}},callPlugin:function(){var a=this.map,b=a.id,d=n(a.prefix);this.depMaps.push(d);t(d,"defined",u(this,function(e){var m,d;d=this.map.name;var g=this.map.parentMap?this.map.parentMap.name:null,h=i.makeRequire(a.parentMap,{enableBuildCallback:!0});if(this.map.unnormalized){if(e.normalize&&(d=e.normalize(d,function(a){return c(a,g,!0)})||""),e=n(a.prefix+"!"+d,this.map.parentMap),t(e,"defined",u(this,function(a){this.init([],function(){return a},null,{enabled:!0,ignore:!0})})),
d=l(p,e.id)){this.depMaps.push(e);if(this.events.error)d.on("error",u(this,function(a){this.emit("error",a)}));d.enable()}}else m=u(this,function(a){this.init([],function(){return a},null,{enabled:!0})}),m.error=u(this,function(a){this.inited=!0;this.error=a;a.requireModules=[b];F(p,function(a){0===a.map.id.indexOf(b+"_unnormalized")&&x(a.map.id)});v(a)}),m.fromText=u(this,function(e,c){var d=a.name,g=n(d),B=O;c&&(e=c);B&&(O=!1);q(g);s(k.config,b)&&(k.config[d]=k.config[b]);try{j.exec(e)}catch(ca){return v(A("fromtexteval",
"fromText eval for "+b+" failed: "+ca,ca,[b]))}B&&(O=!0);this.depMaps.push(g);i.completeLoad(d);h([d],m)}),e.load(a.name,h,m,k)}));i.enable(d,this);this.pluginMaps[d.id]=d},enable:function(){T[this.map.id]=this;this.enabling=this.enabled=!0;y(this.depMaps,u(this,function(a,b){var c,e;if("string"===typeof a){a=n(a,this.map.isDefine?this.map:this.map.parentMap,!1,!this.skipMap);this.depMaps[b]=a;if(c=l(N,a.id)){this.depExports[b]=c(this);return}this.depCount+=1;t(a,"defined",u(this,function(a){this.defineDep(b,
a);this.check()}));this.errback&&t(a,"error",u(this,this.errback))}c=a.id;e=p[c];!s(N,c)&&(e&&!e.enabled)&&i.enable(a,this)}));F(this.pluginMaps,u(this,function(a){var b=l(p,a.id);b&&!b.enabled&&i.enable(a,this)}));this.enabling=!1;this.check()},on:function(a,b){var c=this.events[a];c||(c=this.events[a]=[]);c.push(b)},emit:function(a,b){y(this.events[a],function(a){a(b)});"error"===a&&delete this.events[a]}};i={config:k,contextName:b,registry:p,defined:r,urlFetched:S,defQueue:G,Module:X,makeModuleMap:n,
nextTick:j.nextTick,onError:v,configure:function(a){a.baseUrl&&"/"!==a.baseUrl.charAt(a.baseUrl.length-1)&&(a.baseUrl+="/");var b=k.pkgs,c=k.shim,e={paths:!0,config:!0,map:!0};F(a,function(a,b){e[b]?"map"===b?(k.map||(k.map={}),Q(k[b],a,!0,!0)):Q(k[b],a,!0):k[b]=a});a.shim&&(F(a.shim,function(a,b){I(a)&&(a={deps:a});if((a.exports||a.init)&&!a.exportsFn)a.exportsFn=i.makeShimExports(a);c[b]=a}),k.shim=c);a.packages&&(y(a.packages,function(a){a="string"===typeof a?{name:a}:a;b[a.name]={name:a.name,
location:a.location||a.name,main:(a.main||"main").replace(ja,"").replace(ea,"")}}),k.pkgs=b);F(p,function(a,b){!a.inited&&!a.map.unnormalized&&(a.map=n(b))});if(a.deps||a.callback)i.require(a.deps||[],a.callback)},makeShimExports:function(a){return function(){var b;a.init&&(b=a.init.apply(Z,arguments));return b||a.exports&&ba(a.exports)}},makeRequire:function(a,f){function d(e,c,h){var g,k;f.enableBuildCallback&&(c&&H(c))&&(c.__requireJsBuild=!0);if("string"===typeof e){if(H(c))return v(A("requireargs",
"Invalid require call"),h);if(a&&s(N,e))return N[e](p[a.id]);if(j.get)return j.get(i,e,a,d);g=n(e,a,!1,!0);g=g.id;return!s(r,g)?v(A("notloaded",'Module name "'+g+'" has not been loaded yet for context: '+b+(a?"":". Use require([])"))):r[g]}K();i.nextTick(function(){K();k=q(n(null,a));k.skipMap=f.skipMap;k.init(e,c,h,{enabled:!0});C()});return d}f=f||{};Q(d,{isBrowser:z,toUrl:function(b){var d,f=b.lastIndexOf("."),g=b.split("/")[0];if(-1!==f&&(!("."===g||".."===g)||1<f))d=b.substring(f,b.length),b=
b.substring(0,f);return i.nameToUrl(c(b,a&&a.id,!0),d,!0)},defined:function(b){return s(r,n(b,a,!1,!0).id)},specified:function(b){b=n(b,a,!1,!0).id;return s(r,b)||s(p,b)}});a||(d.undef=function(b){w();var c=n(b,a,!0),f=l(p,b);delete r[b];delete S[c.url];delete Y[b];f&&(f.events.defined&&(Y[b]=f.events),x(b))});return d},enable:function(a){l(p,a.id)&&q(a).enable()},completeLoad:function(a){var b,c,e=l(k.shim,a)||{},d=e.exports;for(w();G.length;){c=G.shift();if(null===c[0]){c[0]=a;if(b)break;b=!0}else c[0]===
a&&(b=!0);D(c)}c=l(p,a);if(!b&&!s(r,a)&&c&&!c.inited){if(k.enforceDefine&&(!d||!ba(d)))return h(a)?void 0:v(A("nodefine","No define call for "+a,null,[a]));D([a,e.deps||[],e.exportsFn])}C()},nameToUrl:function(a,b,c){var e,d,h,g,i,n;if(j.jsExtRegExp.test(a))g=a+(b||"");else{e=k.paths;d=k.pkgs;g=a.split("/");for(i=g.length;0<i;i-=1)if(n=g.slice(0,i).join("/"),h=l(d,n),n=l(e,n)){I(n)&&(n=n[0]);g.splice(0,i,n);break}else if(h){a=a===h.name?h.location+"/"+h.main:h.location;g.splice(0,i,a);break}g=g.join("/");
g+=b||(/\?/.test(g)||c?"":".js");g=("/"===g.charAt(0)||g.match(/^[\w\+\.\-]+:/)?"":k.baseUrl)+g}return k.urlArgs?g+((-1===g.indexOf("?")?"?":"&")+k.urlArgs):g},load:function(a,b){j.load(i,a,b)},execCb:function(a,b,c,e){return b.apply(e,c)},onScriptLoad:function(a){if("load"===a.type||ka.test((a.currentTarget||a.srcElement).readyState))P=null,a=J(a),i.completeLoad(a.id)},onScriptError:function(a){var b=J(a);if(!h(b.id))return v(A("scripterror","Script error for: "+b.id,a,[b.id]))}};i.require=i.makeRequire();
return i}var j,w,x,C,J,D,P,K,q,fa,la=/(\/\*([\s\S]*?)\*\/|([^:]|^)\/\/(.*)$)/mg,ma=/[^.]\s*require\s*\(\s*["']([^'"\s]+)["']\s*\)/g,ea=/\.js$/,ja=/^\.\//;w=Object.prototype;var L=w.toString,ga=w.hasOwnProperty,ia=Array.prototype.splice,z=!!("undefined"!==typeof window&&navigator&&window.document),da=!z&&"undefined"!==typeof importScripts,ka=z&&"PLAYSTATION 3"===navigator.platform?/^complete$/:/^(complete|loaded)$/,W="undefined"!==typeof opera&&"[object Opera]"===opera.toString(),E={},t={},R=[],O=
!1;if("undefined"===typeof define){if("undefined"!==typeof requirejs){if(H(requirejs))return;t=requirejs;requirejs=void 0}"undefined"!==typeof require&&!H(require)&&(t=require,require=void 0);j=requirejs=function(b,c,d,h){var q,n="_";!I(b)&&"string"!==typeof b&&(q=b,I(c)?(b=c,c=d,d=h):b=[]);q&&q.context&&(n=q.context);(h=l(E,n))||(h=E[n]=j.s.newContext(n));q&&h.configure(q);return h.require(b,c,d)};j.config=function(b){return j(b)};j.nextTick="undefined"!==typeof setTimeout?function(b){setTimeout(b,
4)}:function(b){b()};require||(require=j);j.version="2.1.8";j.jsExtRegExp=/^\/|:|\?|\.js$/;j.isBrowser=z;w=j.s={contexts:E,newContext:ha};j({});y(["toUrl","undef","defined","specified"],function(b){j[b]=function(){var c=E._;return c.require[b].apply(c,arguments)}});if(z&&(x=w.head=document.getElementsByTagName("head")[0],C=document.getElementsByTagName("base")[0]))x=w.head=C.parentNode;j.onError=aa;j.createNode=function(b){var c=b.xhtml?document.createElementNS("http://www.w3.org/1999/xhtml","html:script"):
document.createElement("script");c.type=b.scriptType||"text/javascript";c.charset="utf-8";c.async=!0;return c};j.load=function(b,c,d){var h=b&&b.config||{};if(z)return h=j.createNode(h,c,d),h.setAttribute("data-requirecontext",b.contextName),h.setAttribute("data-requiremodule",c),h.attachEvent&&!(h.attachEvent.toString&&0>h.attachEvent.toString().indexOf("[native code"))&&!W?(O=!0,h.attachEvent("onreadystatechange",b.onScriptLoad)):(h.addEventListener("load",b.onScriptLoad,!1),h.addEventListener("error",
b.onScriptError,!1)),h.src=d,K=h,C?x.insertBefore(h,C):x.appendChild(h),K=null,h;if(da)try{importScripts(d),b.completeLoad(c)}catch(l){b.onError(A("importscripts","importScripts failed for "+c+" at "+d,l,[c]))}};z&&M(document.getElementsByTagName("script"),function(b){x||(x=b.parentNode);if(J=b.getAttribute("data-main"))return q=J,t.baseUrl||(D=q.split("/"),q=D.pop(),fa=D.length?D.join("/")+"/":"./",t.baseUrl=fa),q=q.replace(ea,""),j.jsExtRegExp.test(q)&&(q=J),t.deps=t.deps?t.deps.concat(q):[q],!0});
define=function(b,c,d){var h,j;"string"!==typeof b&&(d=c,c=b,b=null);I(c)||(d=c,c=null);!c&&H(d)&&(c=[],d.length&&(d.toString().replace(la,"").replace(ma,function(b,d){c.push(d)}),c=(1===d.length?["require"]:["require","exports","module"]).concat(c)));if(O){if(!(h=K))P&&"interactive"===P.readyState||M(document.getElementsByTagName("script"),function(b){if("interactive"===b.readyState)return P=b}),h=P;h&&(b||(b=h.getAttribute("data-requiremodule")),j=E[h.getAttribute("data-requirecontext")])}(j?j.defQueue:
R).push([b,c,d])};define.amd={jQuery:!0};j.exec=function(b){return eval(b)};j(t)}})(this);

var olddefine = define;
var define = function() {

	for (var i = 0; i < arguments.length; i++ ) {
		if (typeof arguments[i] === "function") {
			var func = arguments[i];
			arguments[i] = function() {
				var args = [].splice.call(arguments, 0);
				args.unshift(define);
				if (typeof(exports) == "undefined") args.unshift(undefined);
				else args.unshift(exports);
				args.unshift(require);
				return func.apply(this, args);
			};
		}
	}

	olddefine.apply(this, arguments);

};

(function (root, factory) {
    if (typeof define === 'function' && define.amd) {
        define('handlebars', [], factory);
    } else if (typeof exports === 'object') {
        module.exports = factory();
    } else {
        root.Handlebars = root.Handlebars || factory();
    }
}(this, function () {
    var __module3__ = function () {
        'use strict';
        var __exports__;
        function SafeString(string) {
            this.string = string;
        }
        SafeString.prototype.toString = function () {
            return '' + this.string;
        };
        __exports__ = SafeString;
        return __exports__;
    }();
    var __module2__ = function (__dependency1__) {
        'use strict';
        var __exports__ = {};
        var SafeString = __dependency1__;
        var escape = {
            '&': '&amp;',
            '<': '&lt;',
            '>': '&gt;',
            '"': '&quot;',
            '\'': '&#x27;',
            '`': '&#x60;'
        };
        var badChars = /[&<>"'`]/g;
        var possible = /[&<>"'`]/;
        function escapeChar(chr) {
            return escape[chr];
        }
        function extend(obj) {
            for (var i = 1; i < arguments.length; i++) {
                for (var key in arguments[i]) {
                    if (Object.prototype.hasOwnProperty.call(arguments[i], key)) {
                        obj[key] = arguments[i][key];
                    }
                }
            }
            return obj;
        }
        __exports__.extend = extend;
        var toString = Object.prototype.toString;
        __exports__.toString = toString;
        var isFunction = function (value) {
            return typeof value === 'function';
        };
        if (isFunction(/x/)) {
            isFunction = function (value) {
                return typeof value === 'function' && toString.call(value) === '[object Function]';
            };
        }
        var isFunction;
        __exports__.isFunction = isFunction;
        var isArray = Array.isArray || function (value) {
            return value && typeof value === 'object' ? toString.call(value) === '[object Array]' : false;
        };
        __exports__.isArray = isArray;
        function escapeExpression(string) {
            if (string instanceof SafeString) {
                return string.toString();
            } else if (string == null) {
                return '';
            } else if (!string) {
                return string + '';
            }
            string = '' + string;
            if (!possible.test(string)) {
                return string;
            }
            return string.replace(badChars, escapeChar);
        }
        __exports__.escapeExpression = escapeExpression;
        function isEmpty(value) {
            if (!value && value !== 0) {
                return true;
            } else if (isArray(value) && value.length === 0) {
                return true;
            } else {
                return false;
            }
        }
        __exports__.isEmpty = isEmpty;
        function appendContextPath(contextPath, id) {
            return (contextPath ? contextPath + '.' : '') + id;
        }
        __exports__.appendContextPath = appendContextPath;
        return __exports__;
    }(__module3__);
    var __module4__ = function () {
        'use strict';
        var __exports__;
        var errorProps = [
            'description',
            'fileName',
            'lineNumber',
            'message',
            'name',
            'number',
            'stack'
        ];
        function Exception(message, node) {
            var line;
            if (node && node.firstLine) {
                line = node.firstLine;
                message += ' - ' + line + ':' + node.firstColumn;
            }
            var tmp = Error.prototype.constructor.call(this, message);
            for (var idx = 0; idx < errorProps.length; idx++) {
                this[errorProps[idx]] = tmp[errorProps[idx]];
            }
            if (line) {
                this.lineNumber = line;
                this.column = node.firstColumn;
            }
        }
        Exception.prototype = new Error();
        __exports__ = Exception;
        return __exports__;
    }();
    var __module1__ = function (__dependency1__, __dependency2__) {
        'use strict';
        var __exports__ = {};
        var Utils = __dependency1__;
        var Exception = __dependency2__;
        var VERSION = '2.0.0';
        __exports__.VERSION = VERSION;
        var COMPILER_REVISION = 6;
        __exports__.COMPILER_REVISION = COMPILER_REVISION;
        var REVISION_CHANGES = {
            1: '<= 1.0.rc.2',
            2: '== 1.0.0-rc.3',
            3: '== 1.0.0-rc.4',
            4: '== 1.x.x',
            5: '== 2.0.0-alpha.x',
            6: '>= 2.0.0-beta.1'
        };
        __exports__.REVISION_CHANGES = REVISION_CHANGES;
        var isArray = Utils.isArray, isFunction = Utils.isFunction, toString = Utils.toString, objectType = '[object Object]';
        function HandlebarsEnvironment(helpers, partials) {
            this.helpers = helpers || {};
            this.partials = partials || {};
            registerDefaultHelpers(this);
        }
        __exports__.HandlebarsEnvironment = HandlebarsEnvironment;
        HandlebarsEnvironment.prototype = {
            constructor: HandlebarsEnvironment,
            logger: logger,
            log: log,
            registerHelper: function (name, fn) {
                if (toString.call(name) === objectType) {
                    if (fn) {
                        throw new Exception('Arg not supported with multiple helpers');
                    }
                    Utils.extend(this.helpers, name);
                } else {
                    this.helpers[name] = fn;
                }
            },
            unregisterHelper: function (name) {
                delete this.helpers[name];
            },
            registerPartial: function (name, partial) {
                if (toString.call(name) === objectType) {
                    Utils.extend(this.partials, name);
                } else {
                    this.partials[name] = partial;
                }
            },
            unregisterPartial: function (name) {
                delete this.partials[name];
            }
        };
        function registerDefaultHelpers(instance) {
            instance.registerHelper('helperMissing', function () {
                if (arguments.length === 1) {
                    return undefined;
                } else {
                    throw new Exception('Missing helper: \'' + arguments[arguments.length - 1].name + '\'');
                }
            });
            instance.registerHelper('blockHelperMissing', function (context, options) {
                var inverse = options.inverse, fn = options.fn;
                if (context === true) {
                    return fn(this);
                } else if (context === false || context == null) {
                    return inverse(this);
                } else if (isArray(context)) {
                    if (context.length > 0) {
                        if (options.ids) {
                            options.ids = [options.name];
                        }
                        return instance.helpers.each(context, options);
                    } else {
                        return inverse(this);
                    }
                } else {
                    if (options.data && options.ids) {
                        var data = createFrame(options.data);
                        data.contextPath = Utils.appendContextPath(options.data.contextPath, options.name);
                        options = { data: data };
                    }
                    return fn(context, options);
                }
            });
            instance.registerHelper('each', function (context, options) {
                if (!options) {
                    throw new Exception('Must pass iterator to #each');
                }
                var fn = options.fn, inverse = options.inverse;
                var i = 0, ret = '', data;
                var contextPath;
                if (options.data && options.ids) {
                    contextPath = Utils.appendContextPath(options.data.contextPath, options.ids[0]) + '.';
                }
                if (isFunction(context)) {
                    context = context.call(this);
                }
                if (options.data) {
                    data = createFrame(options.data);
                }
                if (context && typeof context === 'object') {
                    if (isArray(context)) {
                        for (var j = context.length; i < j; i++) {
                            if (data) {
                                data.index = i;
                                data.first = i === 0;
                                data.last = i === context.length - 1;
                                if (contextPath) {
                                    data.contextPath = contextPath + i;
                                }
                            }
                            ret = ret + fn(context[i], { data: data });
                        }
                    } else {
                        for (var key in context) {
                            if (context.hasOwnProperty(key)) {
                                if (data) {
                                    data.key = key;
                                    data.index = i;
                                    data.first = i === 0;
                                    if (contextPath) {
                                        data.contextPath = contextPath + key;
                                    }
                                }
                                ret = ret + fn(context[key], { data: data });
                                i++;
                            }
                        }
                    }
                }
                if (i === 0) {
                    ret = inverse(this);
                }
                return ret;
            });
            instance.registerHelper('if', function (conditional, options) {
                if (isFunction(conditional)) {
                    conditional = conditional.call(this);
                }
                if (!options.hash.includeZero && !conditional || Utils.isEmpty(conditional)) {
                    return options.inverse(this);
                } else {
                    return options.fn(this);
                }
            });
            instance.registerHelper('unless', function (conditional, options) {
                return instance.helpers['if'].call(this, conditional, {
                    fn: options.inverse,
                    inverse: options.fn,
                    hash: options.hash
                });
            });
            instance.registerHelper('with', function (context, options) {
                if (isFunction(context)) {
                    context = context.call(this);
                }
                var fn = options.fn;
                if (!Utils.isEmpty(context)) {
                    if (options.data && options.ids) {
                        var data = createFrame(options.data);
                        data.contextPath = Utils.appendContextPath(options.data.contextPath, options.ids[0]);
                        options = { data: data };
                    }
                    return fn(context, options);
                } else {
                    return options.inverse(this);
                }
            });
            instance.registerHelper('log', function (message, options) {
                var level = options.data && options.data.level != null ? parseInt(options.data.level, 10) : 1;
                instance.log(level, message);
            });
            instance.registerHelper('lookup', function (obj, field) {
                return obj && obj[field];
            });
        }
        var logger = {
            methodMap: {
                0: 'debug',
                1: 'info',
                2: 'warn',
                3: 'error'
            },
            DEBUG: 0,
            INFO: 1,
            WARN: 2,
            ERROR: 3,
            level: 3,
            log: function (level, message) {
                if (logger.level <= level) {
                    var method = logger.methodMap[level];
                    if (typeof console !== 'undefined' && console[method]) {
                        console[method].call(console, message);
                    }
                }
            }
        };
        __exports__.logger = logger;
        var log = logger.log;
        __exports__.log = log;
        var createFrame = function (object) {
            var frame = Utils.extend({}, object);
            frame._parent = object;
            return frame;
        };
        __exports__.createFrame = createFrame;
        return __exports__;
    }(__module2__, __module4__);
    var __module5__ = function (__dependency1__, __dependency2__, __dependency3__) {
        'use strict';
        var __exports__ = {};
        var Utils = __dependency1__;
        var Exception = __dependency2__;
        var COMPILER_REVISION = __dependency3__.COMPILER_REVISION;
        var REVISION_CHANGES = __dependency3__.REVISION_CHANGES;
        var createFrame = __dependency3__.createFrame;
        function checkRevision(compilerInfo) {
            var compilerRevision = compilerInfo && compilerInfo[0] || 1, currentRevision = COMPILER_REVISION;
            if (compilerRevision !== currentRevision) {
                if (compilerRevision < currentRevision) {
                    var runtimeVersions = REVISION_CHANGES[currentRevision], compilerVersions = REVISION_CHANGES[compilerRevision];
                    throw new Exception('Template was precompiled with an older version of Handlebars than the current runtime. ' + 'Please update your precompiler to a newer version (' + runtimeVersions + ') or downgrade your runtime to an older version (' + compilerVersions + ').');
                } else {
                    throw new Exception('Template was precompiled with a newer version of Handlebars than the current runtime. ' + 'Please update your runtime to a newer version (' + compilerInfo[1] + ').');
                }
            }
        }
        __exports__.checkRevision = checkRevision;
        function template(templateSpec, env) {
            if (!env) {
                throw new Exception('No environment passed to template');
            }
            if (!templateSpec || !templateSpec.main) {
                throw new Exception('Unknown template object: ' + typeof templateSpec);
            }
            env.VM.checkRevision(templateSpec.compiler);
            var invokePartialWrapper = function (partial, indent, name, context, hash, helpers, partials, data, depths) {
                if (hash) {
                    context = Utils.extend({}, context, hash);
                }
                var result = env.VM.invokePartial.call(this, partial, name, context, helpers, partials, data, depths);
                if (result == null && env.compile) {
                    var options = {
                        helpers: helpers,
                        partials: partials,
                        data: data,
                        depths: depths
                    };
                    partials[name] = env.compile(partial, {
                        data: data !== undefined,
                        compat: templateSpec.compat
                    }, env);
                    result = partials[name](context, options);
                }
                if (result != null) {
                    if (indent) {
                        var lines = result.split('\n');
                        for (var i = 0, l = lines.length; i < l; i++) {
                            if (!lines[i] && i + 1 === l) {
                                break;
                            }
                            lines[i] = indent + lines[i];
                        }
                        result = lines.join('\n');
                    }
                    return result;
                } else {
                    throw new Exception('The partial ' + name + ' could not be compiled when running in runtime-only mode');
                }
            };
            var container = {
                lookup: function (depths, name) {
                    var len = depths.length;
                    for (var i = 0; i < len; i++) {
                        if (depths[i] && depths[i][name] != null) {
                            return depths[i][name];
                        }
                    }
                },
                lambda: function (current, context) {
                    return typeof current === 'function' ? current.call(context) : current;
                },
                escapeExpression: Utils.escapeExpression,
                invokePartial: invokePartialWrapper,
                fn: function (i) {
                    return templateSpec[i];
                },
                programs: [],
                program: function (i, data, depths) {
                    var programWrapper = this.programs[i], fn = this.fn(i);
                    if (data || depths) {
                        programWrapper = program(this, i, fn, data, depths);
                    } else if (!programWrapper) {
                        programWrapper = this.programs[i] = program(this, i, fn);
                    }
                    return programWrapper;
                },
                data: function (data, depth) {
                    while (data && depth--) {
                        data = data._parent;
                    }
                    return data;
                },
                merge: function (param, common) {
                    var ret = param || common;
                    if (param && common && param !== common) {
                        ret = Utils.extend({}, common, param);
                    }
                    return ret;
                },
                noop: env.VM.noop,
                compilerInfo: templateSpec.compiler
            };
            var ret = function (context, options) {
                options = options || {};
                var data = options.data;
                ret._setup(options);
                if (!options.partial && templateSpec.useData) {
                    data = initData(context, data);
                }
                var depths;
                if (templateSpec.useDepths) {
                    depths = options.depths ? [context].concat(options.depths) : [context];
                }
                return templateSpec.main.call(container, context, container.helpers, container.partials, data, depths);
            };
            ret.isTop = true;
            ret._setup = function (options) {
                if (!options.partial) {
                    container.helpers = container.merge(options.helpers, env.helpers);
                    if (templateSpec.usePartial) {
                        container.partials = container.merge(options.partials, env.partials);
                    }
                } else {
                    container.helpers = options.helpers;
                    container.partials = options.partials;
                }
            };
            ret._child = function (i, data, depths) {
                if (templateSpec.useDepths && !depths) {
                    throw new Exception('must pass parent depths');
                }
                return program(container, i, templateSpec[i], data, depths);
            };
            return ret;
        }
        __exports__.template = template;
        function program(container, i, fn, data, depths) {
            var prog = function (context, options) {
                options = options || {};
                return fn.call(container, context, container.helpers, container.partials, options.data || data, depths && [context].concat(depths));
            };
            prog.program = i;
            prog.depth = depths ? depths.length : 0;
            return prog;
        }
        __exports__.program = program;
        function invokePartial(partial, name, context, helpers, partials, data, depths) {
            var options = {
                partial: true,
                helpers: helpers,
                partials: partials,
                data: data,
                depths: depths
            };
            if (partial === undefined) {
                throw new Exception('The partial ' + name + ' could not be found');
            } else if (partial instanceof Function) {
                return partial(context, options);
            }
        }
        __exports__.invokePartial = invokePartial;
        function noop() {
            return '';
        }
        __exports__.noop = noop;
        function initData(context, data) {
            if (!data || !('root' in data)) {
                data = data ? createFrame(data) : {};
                data.root = context;
            }
            return data;
        }
        return __exports__;
    }(__module2__, __module4__, __module1__);
    var __module0__ = function (__dependency1__, __dependency2__, __dependency3__, __dependency4__, __dependency5__) {
        'use strict';
        var __exports__;
        var base = __dependency1__;
        var SafeString = __dependency2__;
        var Exception = __dependency3__;
        var Utils = __dependency4__;
        var runtime = __dependency5__;
        var create = function () {
            var hb = new base.HandlebarsEnvironment();
            Utils.extend(hb, base);
            hb.SafeString = SafeString;
            hb.Exception = Exception;
            hb.Utils = Utils;
            hb.escapeExpression = Utils.escapeExpression;
            hb.VM = runtime;
            hb.template = function (spec) {
                return runtime.template(spec, hb);
            };
            return hb;
        };
        var Handlebars = create();
        Handlebars.create = create;
        Handlebars['default'] = Handlebars;
        __exports__ = Handlebars;
        return __exports__;
    }(__module1__, __module3__, __module4__, __module2__, __module5__);
    return __module0__;
}));

(function () {
    var n = this, t = n._, r = {}, e = Array.prototype, u = Object.prototype, i = Function.prototype, a = e.push, o = e.slice, c = e.concat, l = u.toString, f = u.hasOwnProperty, s = e.forEach, p = e.map, h = e.reduce, v = e.reduceRight, g = e.filter, d = e.every, m = e.some, y = e.indexOf, b = e.lastIndexOf, x = Array.isArray, w = Object.keys, _ = i.bind, j = function (n) {
            return n instanceof j ? n : this instanceof j ? (this._wrapped = n, void 0) : new j(n);
        };
    'undefined' != typeof exports ? ('undefined' != typeof module && (module.exports && (exports = module.exports = j)), exports._ = j) : n._ = j, j.VERSION = '1.5.2';
    var A = j.each = j.forEach = function (n, t, e) {
        if (null != n)
            if (s && n.forEach === s)
                n.forEach(t, e);
            else if (n.length === +n.length)
                for (var u = 0, i = n.length; i > u; u++) {
                    if (t.call(e, n[u], u, n) === r)
                        return;
                }
            else
                for (var a = j.keys(n), u = 0, i = a.length; i > u; u++)
                    if (t.call(e, n[a[u]], a[u], n) === r)
                        return;
    };
    j.map = j.collect = function (n, t, r) {
        var e = [];
        return null == n ? e : p && n.map === p ? n.map(t, r) : (A(n, function (n, u, i) {
            e.push(t.call(r, n, u, i));
        }), e);
    };
    var E = 'Reduce of empty array with no initial value';
    j.reduce = j.foldl = j.inject = function (n, t, r, e) {
        var u = arguments.length > 2;
        if (null == n && (n = []), h && n.reduce === h)
            return e && (t = j.bind(t, e)), u ? n.reduce(t, r) : n.reduce(t);
        if (A(n, function (n, i, a) {
                u ? r = t.call(e, r, n, i, a) : (r = n, u = !0);
            }), !u)
            throw new TypeError(E);
        return r;
    }, j.reduceRight = j.foldr = function (n, t, r, e) {
        var u = arguments.length > 2;
        if (null == n && (n = []), v && n.reduceRight === v)
            return e && (t = j.bind(t, e)), u ? n.reduceRight(t, r) : n.reduceRight(t);
        var i = n.length;
        if (i !== +i) {
            var a = j.keys(n);
            i = a.length;
        }
        if (A(n, function (o, c, l) {
                c = a ? a[--i] : --i, u ? r = t.call(e, r, n[c], c, l) : (r = n[c], u = !0);
            }), !u)
            throw new TypeError(E);
        return r;
    }, j.find = j.detect = function (n, t, r) {
        var e;
        return O(n, function (n, u, i) {
            return t.call(r, n, u, i) ? (e = n, !0) : void 0;
        }), e;
    }, j.filter = j.select = function (n, t, r) {
        var e = [];
        return null == n ? e : g && n.filter === g ? n.filter(t, r) : (A(n, function (n, u, i) {
            t.call(r, n, u, i) && e.push(n);
        }), e);
    }, j.reject = function (n, t, r) {
        return j.filter(n, function (n, e, u) {
            return !t.call(r, n, e, u);
        }, r);
    }, j.every = j.all = function (n, t, e) {
        t || (t = j.identity);
        var u = !0;
        return null == n ? u : d && n.every === d ? n.every(t, e) : (A(n, function (n, i, a) {
            return (u = u && t.call(e, n, i, a)) ? void 0 : r;
        }), !!u);
    };
    var O = j.some = j.any = function (n, t, e) {
        t || (t = j.identity);
        var u = !1;
        return null == n ? u : m && n.some === m ? n.some(t, e) : (A(n, function (n, i, a) {
            return u || (u = t.call(e, n, i, a)) ? r : void 0;
        }), !!u);
    };
    j.contains = j.include = function (n, t) {
        return null == n ? !1 : y && n.indexOf === y ? n.indexOf(t) != -1 : O(n, function (n) {
            return n === t;
        });
    }, j.invoke = function (n, t) {
        var r = o.call(arguments, 2), e = j.isFunction(t);
        return j.map(n, function (n) {
            return (e ? t : n[t]).apply(n, r);
        });
    }, j.pluck = function (n, t) {
        return j.map(n, function (n) {
            return n[t];
        });
    }, j.where = function (n, t, r) {
        return j.isEmpty(t) ? r ? void 0 : [] : j[r ? 'find' : 'filter'](n, function (n) {
            for (var r in t)
                if (t[r] !== n[r])
                    return !1;
            return !0;
        });
    }, j.findWhere = function (n, t) {
        return j.where(n, t, !0);
    }, j.max = function (n, t, r) {
        if (!t && (j.isArray(n) && (n[0] === +n[0] && n.length < 65535)))
            return Math.max.apply(Math, n);
        if (!t && j.isEmpty(n))
            return -1 / 0;
        var e = {
            computed: -1 / 0,
            value: -1 / 0
        };
        return A(n, function (n, u, i) {
            var a = t ? t.call(r, n, u, i) : n;
            a > e.computed && (e = {
                value: n,
                computed: a
            });
        }), e.value;
    }, j.min = function (n, t, r) {
        if (!t && (j.isArray(n) && (n[0] === +n[0] && n.length < 65535)))
            return Math.min.apply(Math, n);
        if (!t && j.isEmpty(n))
            return 1 / 0;
        var e = {
            computed: 1 / 0,
            value: 1 / 0
        };
        return A(n, function (n, u, i) {
            var a = t ? t.call(r, n, u, i) : n;
            a < e.computed && (e = {
                value: n,
                computed: a
            });
        }), e.value;
    }, j.shuffle = function (n) {
        var t, r = 0, e = [];
        return A(n, function (n) {
            t = j.random(r++), e[r - 1] = e[t], e[t] = n;
        }), e;
    }, j.sample = function (n, t, r) {
        return arguments.length < 2 || r ? n[j.random(n.length - 1)] : j.shuffle(n).slice(0, Math.max(0, t));
    };
    var k = function (n) {
        return j.isFunction(n) ? n : function (t) {
            return t[n];
        };
    };
    j.sortBy = function (n, t, r) {
        var e = k(t);
        return j.pluck(j.map(n, function (n, t, u) {
            return {
                value: n,
                index: t,
                criteria: e.call(r, n, t, u)
            };
        }).sort(function (n, t) {
            var r = n.criteria, e = t.criteria;
            if (r !== e) {
                if (r > e || r === void 0)
                    return 1;
                if (e > r || e === void 0)
                    return -1;
            }
            return n.index - t.index;
        }), 'value');
    };
    var F = function (n) {
        return function (t, r, e) {
            var u = {}, i = null == r ? j.identity : k(r);
            return A(t, function (r, a) {
                var o = i.call(e, r, a, t);
                n(u, o, r);
            }), u;
        };
    };
    j.groupBy = F(function (n, t, r) {
        (j.has(n, t) ? n[t] : n[t] = []).push(r);
    }), j.indexBy = F(function (n, t, r) {
        n[t] = r;
    }), j.countBy = F(function (n, t) {
        j.has(n, t) ? n[t]++ : n[t] = 1;
    }), j.sortedIndex = function (n, t, r, e) {
        r = null == r ? j.identity : k(r);
        for (var u = r.call(e, t), i = 0, a = n.length; a > i;) {
            var o = i + a >>> 1;
            r.call(e, n[o]) < u ? i = o + 1 : a = o;
        }
        return i;
    }, j.toArray = function (n) {
        return n ? j.isArray(n) ? o.call(n) : n.length === +n.length ? j.map(n, j.identity) : j.values(n) : [];
    }, j.size = function (n) {
        return null == n ? 0 : n.length === +n.length ? n.length : j.keys(n).length;
    }, j.first = j.head = j.take = function (n, t, r) {
        return null == n ? void 0 : null == t || r ? n[0] : o.call(n, 0, t);
    }, j.initial = function (n, t, r) {
        return o.call(n, 0, n.length - (null == t || r ? 1 : t));
    }, j.last = function (n, t, r) {
        return null == n ? void 0 : null == t || r ? n[n.length - 1] : o.call(n, Math.max(n.length - t, 0));
    }, j.rest = j.tail = j.drop = function (n, t, r) {
        return o.call(n, null == t || r ? 1 : t);
    }, j.compact = function (n) {
        return j.filter(n, j.identity);
    };
    var M = function (n, t, r) {
        return t && j.every(n, j.isArray) ? c.apply(r, n) : (A(n, function (n) {
            j.isArray(n) || j.isArguments(n) ? t ? a.apply(r, n) : M(n, t, r) : r.push(n);
        }), r);
    };
    j.flatten = function (n, t) {
        return M(n, t, []);
    }, j.without = function (n) {
        return j.difference(n, o.call(arguments, 1));
    }, j.uniq = j.unique = function (n, t, r, e) {
        j.isFunction(t) && (e = r, r = t, t = !1);
        var u = r ? j.map(n, r, e) : n, i = [], a = [];
        return A(u, function (r, e) {
            (t ? e && a[a.length - 1] === r : j.contains(a, r)) || (a.push(r), i.push(n[e]));
        }), i;
    }, j.union = function () {
        return j.uniq(j.flatten(arguments, !0));
    }, j.intersection = function (n) {
        var t = o.call(arguments, 1);
        return j.filter(j.uniq(n), function (n) {
            return j.every(t, function (t) {
                return j.indexOf(t, n) >= 0;
            });
        });
    }, j.difference = function (n) {
        var t = c.apply(e, o.call(arguments, 1));
        return j.filter(n, function (n) {
            return !j.contains(t, n);
        });
    }, j.zip = function () {
        for (var n = j.max(j.pluck(arguments, 'length').concat(0)), t = new Array(n), r = 0; n > r; r++)
            t[r] = j.pluck(arguments, '' + r);
        return t;
    }, j.object = function (n, t) {
        if (null == n)
            return {};
        for (var r = {}, e = 0, u = n.length; u > e; e++)
            t ? r[n[e]] = t[e] : r[n[e][0]] = n[e][1];
        return r;
    }, j.indexOf = function (n, t, r) {
        if (null == n)
            return -1;
        var e = 0, u = n.length;
        if (r) {
            if ('number' != typeof r)
                return e = j.sortedIndex(n, t), n[e] === t ? e : -1;
            e = 0 > r ? Math.max(0, u + r) : r;
        }
        if (y && n.indexOf === y)
            return n.indexOf(t, r);
        for (; u > e; e++)
            if (n[e] === t)
                return e;
        return -1;
    }, j.lastIndexOf = function (n, t, r) {
        if (null == n)
            return -1;
        var e = null != r;
        if (b && n.lastIndexOf === b)
            return e ? n.lastIndexOf(t, r) : n.lastIndexOf(t);
        for (var u = e ? r : n.length; u--;)
            if (n[u] === t)
                return u;
        return -1;
    }, j.range = function (n, t, r) {
        arguments.length <= 1 && (t = n || 0, n = 0), r = arguments[2] || 1;
        for (var e = Math.max(Math.ceil((t - n) / r), 0), u = 0, i = new Array(e); e > u;)
            i[u++] = n, n += r;
        return i;
    };
    var R = function () {
    };
    j.bind = function (n, t) {
        var r, e;
        if (_ && n.bind === _)
            return _.apply(n, o.call(arguments, 1));
        if (!j.isFunction(n))
            throw new TypeError();
        return r = o.call(arguments, 2), e = function () {
            if (!(this instanceof e))
                return n.apply(t, r.concat(o.call(arguments)));
            R.prototype = n.prototype;
            var u = new R();
            R.prototype = null;
            var i = n.apply(u, r.concat(o.call(arguments)));
            return Object(i) === i ? i : u;
        };
    }, j.partial = function (n) {
        var t = o.call(arguments, 1);
        return function () {
            return n.apply(this, t.concat(o.call(arguments)));
        };
    }, j.bindAll = function (n) {
        var t = o.call(arguments, 1);
        if (0 === t.length)
            throw new Error('bindAll must be passed function names');
        return A(t, function (t) {
            n[t] = j.bind(n[t], n);
        }), n;
    }, j.memoize = function (n, t) {
        var r = {};
        return t || (t = j.identity), function () {
            var e = t.apply(this, arguments);
            return j.has(r, e) ? r[e] : r[e] = n.apply(this, arguments);
        };
    }, j.delay = function (n, t) {
        var r = o.call(arguments, 2);
        return setTimeout(function () {
            return n.apply(null, r);
        }, t);
    }, j.defer = function (n) {
        return j.delay.apply(j, [
            n,
            1
        ].concat(o.call(arguments, 1)));
    }, j.throttle = function (n, t, r) {
        var e, u, i, a = null, o = 0;
        r || (r = {});
        var c = function () {
            o = r.leading === !1 ? 0 : new Date(), a = null, i = n.apply(e, u);
        };
        return function () {
            var l = new Date();
            o || (r.leading !== !1 || (o = l));
            var f = t - (l - o);
            return e = this, u = arguments, 0 >= f ? (clearTimeout(a), a = null, o = l, i = n.apply(e, u)) : a || (r.trailing === !1 || (a = setTimeout(c, f))), i;
        };
    }, j.debounce = function (n, t, r) {
        var e, u, i, a, o;
        return function () {
            i = this, u = arguments, a = new Date();
            var c = function () {
                    var l = new Date() - a;
                    t > l ? e = setTimeout(c, t - l) : (e = null, r || (o = n.apply(i, u)));
                }, l = r && !e;
            return e || (e = setTimeout(c, t)), l && (o = n.apply(i, u)), o;
        };
    }, j.once = function (n) {
        var t, r = !1;
        return function () {
            return r ? t : (r = !0, t = n.apply(this, arguments), n = null, t);
        };
    }, j.wrap = function (n, t) {
        return function () {
            var r = [n];
            return a.apply(r, arguments), t.apply(this, r);
        };
    }, j.compose = function () {
        var n = arguments;
        return function () {
            for (var t = arguments, r = n.length - 1; r >= 0; r--)
                t = [n[r].apply(this, t)];
            return t[0];
        };
    }, j.after = function (n, t) {
        return function () {
            return --n < 1 ? t.apply(this, arguments) : void 0;
        };
    }, j.keys = w || function (n) {
        if (n !== Object(n))
            throw new TypeError('Invalid object');
        var t = [];
        for (var r in n)
            j.has(n, r) && t.push(r);
        return t;
    }, j.values = function (n) {
        for (var t = j.keys(n), r = t.length, e = new Array(r), u = 0; r > u; u++)
            e[u] = n[t[u]];
        return e;
    }, j.pairs = function (n) {
        for (var t = j.keys(n), r = t.length, e = new Array(r), u = 0; r > u; u++)
            e[u] = [
                t[u],
                n[t[u]]
            ];
        return e;
    }, j.invert = function (n) {
        for (var t = {}, r = j.keys(n), e = 0, u = r.length; u > e; e++)
            t[n[r[e]]] = r[e];
        return t;
    }, j.functions = j.methods = function (n) {
        var t = [];
        for (var r in n)
            j.isFunction(n[r]) && t.push(r);
        return t.sort();
    }, j.extend = function (n) {
        return A(o.call(arguments, 1), function (t) {
            if (t)
                for (var r in t)
                    n[r] = t[r];
        }), n;
    }, j.pick = function (n) {
        var t = {}, r = c.apply(e, o.call(arguments, 1));
        return A(r, function (r) {
            r in n && (t[r] = n[r]);
        }), t;
    }, j.omit = function (n) {
        var t = {}, r = c.apply(e, o.call(arguments, 1));
        for (var u in n)
            j.contains(r, u) || (t[u] = n[u]);
        return t;
    }, j.defaults = function (n) {
        return A(o.call(arguments, 1), function (t) {
            if (t)
                for (var r in t)
                    n[r] === void 0 && (n[r] = t[r]);
        }), n;
    }, j.clone = function (n) {
        return j.isObject(n) ? j.isArray(n) ? n.slice() : j.extend({}, n) : n;
    }, j.tap = function (n, t) {
        return t(n), n;
    };
    var S = function (n, t, r, e) {
        if (n === t)
            return 0 !== n || 1 / n == 1 / t;
        if (null == n || null == t)
            return n === t;
        n instanceof j && (n = n._wrapped), t instanceof j && (t = t._wrapped);
        var u = l.call(n);
        if (u != l.call(t))
            return !1;
        switch (u) {
        case '[object String]':
            return n == String(t);
        case '[object Number]':
            return n != +n ? t != +t : 0 == n ? 1 / n == 1 / t : n == +t;
        case '[object Date]':
        case '[object Boolean]':
            return +n == +t;
        case '[object RegExp]':
            return n.source == t.source && (n.global == t.global && (n.multiline == t.multiline && n.ignoreCase == t.ignoreCase));
        }
        if ('object' != typeof n || 'object' != typeof t)
            return !1;
        for (var i = r.length; i--;)
            if (r[i] == n)
                return e[i] == t;
        var a = n.constructor, o = t.constructor;
        if (a !== o && !(j.isFunction(a) && (a instanceof a && (j.isFunction(o) && o instanceof o))))
            return !1;
        r.push(n), e.push(t);
        var c = 0, f = !0;
        if ('[object Array]' == u) {
            if (c = n.length, f = c == t.length)
                for (; c-- && (f = S(n[c], t[c], r, e)););
        } else {
            for (var s in n)
                if (j.has(n, s) && (c++, !(f = j.has(t, s) && S(n[s], t[s], r, e))))
                    break;
            if (f) {
                for (s in t)
                    if (j.has(t, s) && !c--)
                        break;
                f = !c;
            }
        }
        return r.pop(), e.pop(), f;
    };
    j.isEqual = function (n, t) {
        return S(n, t, [], []);
    }, j.isEmpty = function (n) {
        if (null == n)
            return !0;
        if (j.isArray(n) || j.isString(n))
            return 0 === n.length;
        for (var t in n)
            if (j.has(n, t))
                return !1;
        return !0;
    }, j.isElement = function (n) {
        return !(!n || 1 !== n.nodeType);
    }, j.isArray = x || function (n) {
        return '[object Array]' == l.call(n);
    }, j.isObject = function (n) {
        return n === Object(n);
    }, A([
        'Arguments',
        'Function',
        'String',
        'Number',
        'Date',
        'RegExp'
    ], function (n) {
        j['is' + n] = function (t) {
            return l.call(t) == '[object ' + n + ']';
        };
    }), j.isArguments(arguments) || (j.isArguments = function (n) {
        return !(!n || !j.has(n, 'callee'));
    }), 'function' != typeof /./ && (j.isFunction = function (n) {
        return 'function' == typeof n;
    }), j.isFinite = function (n) {
        return isFinite(n) && !isNaN(parseFloat(n));
    }, j.isNaN = function (n) {
        return j.isNumber(n) && n != +n;
    }, j.isBoolean = function (n) {
        return n === !0 || (n === !1 || '[object Boolean]' == l.call(n));
    }, j.isNull = function (n) {
        return null === n;
    }, j.isUndefined = function (n) {
        return n === void 0;
    }, j.has = function (n, t) {
        return f.call(n, t);
    }, j.noConflict = function () {
        return n._ = t, this;
    }, j.identity = function (n) {
        return n;
    }, j.times = function (n, t, r) {
        for (var e = Array(Math.max(0, n)), u = 0; n > u; u++)
            e[u] = t.call(r, u);
        return e;
    }, j.random = function (n, t) {
        return null == t && (t = n, n = 0), n + Math.floor(Math.random() * (t - n + 1));
    };
    var I = {
        escape: {
            '&': '&amp;',
            '<': '&lt;',
            '>': '&gt;',
            '"': '&quot;',
            '\'': '&#x27;'
        }
    };
    I.unescape = j.invert(I.escape);
    var T = {
        escape: new RegExp('[' + j.keys(I.escape).join('') + ']', 'g'),
        unescape: new RegExp('(' + j.keys(I.unescape).join('|') + ')', 'g')
    };
    j.each([
        'escape',
        'unescape'
    ], function (n) {
        j[n] = function (t) {
            return null == t ? '' : ('' + t).replace(T[n], function (t) {
                return I[n][t];
            });
        };
    }), j.result = function (n, t) {
        if (null == n)
            return void 0;
        var r = n[t];
        return j.isFunction(r) ? r.call(n) : r;
    }, j.mixin = function (n) {
        A(j.functions(n), function (t) {
            var r = j[t] = n[t];
            j.prototype[t] = function () {
                var n = [this._wrapped];
                return a.apply(n, arguments), z.call(this, r.apply(j, n));
            };
        });
    };
    var N = 0;
    j.uniqueId = function (n) {
        var t = ++N + '';
        return n ? n + t : t;
    }, j.templateSettings = {
        evaluate: /<%([\s\S]+?)%>/g,
        interpolate: /<%=([\s\S]+?)%>/g,
        escape: /<%-([\s\S]+?)%>/g
    };
    var q = /(.)^/, B = {
            '\'': '\'',
            '\\': '\\',
            '\r': 'r',
            '\n': 'n',
            '\t': 't',
            '\u2028': 'u2028',
            '\u2029': 'u2029'
        }, D = /\\|'|\r|\n|\t|\u2028|\u2029/g;
    j.template = function (n, t, r) {
        var e;
        r = j.defaults({}, r, j.templateSettings);
        var u = new RegExp([
                (r.escape || q).source,
                (r.interpolate || q).source,
                (r.evaluate || q).source
            ].join('|') + '|$', 'g'), i = 0, a = '__p+=\'';
        n.replace(u, function (t, r, e, u, o) {
            return a += n.slice(i, o).replace(D, function (n) {
                return '\\' + B[n];
            }), r && (a += '\'+\n((__t=(' + r + '))==null?\'\':_.escape(__t))+\n\''), e && (a += '\'+\n((__t=(' + e + '))==null?\'\':__t)+\n\''), u && (a += '\';\n' + u + '\n__p+=\''), i = o + t.length, t;
        }), a += '\';\n', r.variable || (a = 'with(obj||{}){\n' + a + '}\n'), a = 'var __t,__p=\'\',__j=Array.prototype.join,' + 'print=function(){__p+=__j.call(arguments,\'\');};\n' + a + 'return __p;\n';
        try {
            e = new Function(r.variable || 'obj', '_', a);
        } catch (o) {
            throw o.source = a, o;
        }
        if (t)
            return e(t, j);
        var c = function (n) {
            return e.call(this, n, j);
        };
        return c.source = 'function(' + (r.variable || 'obj') + '){\n' + a + '}', c;
    }, j.chain = function (n) {
        return j(n).chain();
    };
    var z = function (n) {
        return this._chain ? j(n).chain() : n;
    };
    j.mixin(j), A([
        'pop',
        'push',
        'reverse',
        'shift',
        'sort',
        'splice',
        'unshift'
    ], function (n) {
        var t = e[n];
        j.prototype[n] = function () {
            var r = this._wrapped;
            return t.apply(r, arguments), 'shift' != n && 'splice' != n || (0 !== r.length || delete r[0]), z.call(this, r);
        };
    }), A([
        'concat',
        'join',
        'slice'
    ], function (n) {
        var t = e[n];
        j.prototype[n] = function () {
            return z.call(this, t.apply(this._wrapped, arguments));
        };
    }), j.extend(j.prototype, {
        chain: function () {
            return this._chain = !0, this;
        },
        value: function () {
            return this._wrapped;
        }
    });
}.call(this));
define('underscore', [], function () {
    return _;
});

(function () {
    var t = this;
    var e = t.Backbone;
    var i = [];
    var r = i.push;
    var s = i.slice;
    var n = i.splice;
    var a;
    if (typeof exports !== 'undefined')
        a = exports;
    else
        a = t.Backbone = {};
    a.VERSION = '1.0.0';
    var h = t._;
    if (!h && typeof require !== 'undefined')
        h = require('underscore');
    a.$ = t.jQuery || (t.Zepto || (t.ender || t.$));
    a.noConflict = function () {
        t.Backbone = e;
        return this;
    };
    a.emulateHTTP = false;
    a.emulateJSON = false;
    var o = a.Events = {
        on: function (t, e, i) {
            if (!l(this, 'on', t, [
                    e,
                    i
                ]) || !e)
                return this;
            this._events || (this._events = {});
            var r = this._events[t] || (this._events[t] = []);
            r.push({
                callback: e,
                context: i,
                ctx: i || this
            });
            return this;
        },
        once: function (t, e, i) {
            if (!l(this, 'once', t, [
                    e,
                    i
                ]) || !e)
                return this;
            var r = this;
            var s = h.once(function () {
                r.off(t, s);
                e.apply(this, arguments);
            });
            s._callback = e;
            return this.on(t, s, i);
        },
        off: function (t, e, i) {
            var r, s, n, a, o, u, c, f;
            if (!this._events || !l(this, 'off', t, [
                    e,
                    i
                ]))
                return this;
            if (!t && (!e && !i)) {
                this._events = {};
                return this;
            }
            a = t ? [t] : h.keys(this._events);
            for (o = 0, u = a.length; o < u; o++) {
                t = a[o];
                if (n = this._events[t]) {
                    this._events[t] = r = [];
                    if (e || i)
                        for (c = 0, f = n.length; c < f; c++) {
                            s = n[c];
                            if (e && (e !== s.callback && e !== s.callback._callback) || i && i !== s.context)
                                r.push(s);
                        }
                    if (!r.length)
                        delete this._events[t];
                }
            }
            return this;
        },
        trigger: function (t) {
            if (!this._events)
                return this;
            var e = s.call(arguments, 1);
            if (!l(this, 'trigger', t, e))
                return this;
            var i = this._events[t];
            var r = this._events.all;
            if (i)
                c(i, e);
            if (r)
                c(r, arguments);
            return this;
        },
        stopListening: function (t, e, i) {
            var r = this._listeners;
            if (!r)
                return this;
            var s = !e && !i;
            if (typeof e === 'object')
                i = this;
            if (t)
                (r = {})[t._listenerId] = t;
            for (var n in r) {
                r[n].off(e, i, this);
                if (s)
                    delete this._listeners[n];
            }
            return this;
        }
    };
    var u = /\s+/;
    var l = function (t, e, i, r) {
        if (!i)
            return true;
        if (typeof i === 'object') {
            for (var s in i)
                t[e].apply(t, [
                    s,
                    i[s]
                ].concat(r));
            return false;
        }
        if (u.test(i)) {
            var n = i.split(u);
            for (var a = 0, h = n.length; a < h; a++)
                t[e].apply(t, [n[a]].concat(r));
            return false;
        }
        return true;
    };
    var c = function (t, e) {
        var i, r = -1, s = t.length, n = e[0], a = e[1], h = e[2];
        switch (e.length) {
        case 0:
            while (++r < s)
                (i = t[r]).callback.call(i.ctx);
            return;
        case 1:
            while (++r < s)
                (i = t[r]).callback.call(i.ctx, n);
            return;
        case 2:
            while (++r < s)
                (i = t[r]).callback.call(i.ctx, n, a);
            return;
        case 3:
            while (++r < s)
                (i = t[r]).callback.call(i.ctx, n, a, h);
            return;
        default:
            while (++r < s)
                (i = t[r]).callback.apply(i.ctx, e);
        }
    };
    var f = {
        listenTo: 'on',
        listenToOnce: 'once'
    };
    h.each(f, function (t, e) {
        o[e] = function (e, i, r) {
            var s = this._listeners || (this._listeners = {});
            var n = e._listenerId || (e._listenerId = h.uniqueId('l'));
            s[n] = e;
            if (typeof i === 'object')
                r = this;
            e[t](i, r, this);
            return this;
        };
    });
    o.bind = o.on;
    o.unbind = o.off;
    h.extend(a, o);
    var d = a.Model = function (t, e) {
        var i;
        var r = t || {};
        e || (e = {});
        this.cid = h.uniqueId('c');
        this.attributes = {};
        h.extend(this, h.pick(e, p));
        if (e.parse)
            r = this.parse(r, e) || {};
        if (i = h.result(this, 'defaults'))
            r = h.defaults({}, r, i);
        this.set(r, e);
        this.changed = {};
        this.initialize.apply(this, arguments);
    };
    var p = [
        'url',
        'urlRoot',
        'collection'
    ];
    h.extend(d.prototype, o, {
        changed: null,
        validationError: null,
        idAttribute: 'id',
        initialize: function () {
        },
        toJSON: function (t) {
            return h.clone(this.attributes);
        },
        sync: function () {
            return a.sync.apply(this, arguments);
        },
        get: function (t) {
            return this.attributes[t];
        },
        escape: function (t) {
            return h.escape(this.get(t));
        },
        has: function (t) {
            return this.get(t) != null;
        },
        set: function (t, e, i) {
            var r, s, n, a, o, u, l, c;
            if (t == null)
                return this;
            if (typeof t === 'object') {
                s = t;
                i = e;
            } else
                (s = {})[t] = e;
            i || (i = {});
            if (!this._validate(s, i))
                return false;
            n = i.unset;
            o = i.silent;
            a = [];
            u = this._changing;
            this._changing = true;
            if (!u) {
                this._previousAttributes = h.clone(this.attributes);
                this.changed = {};
            }
            c = this.attributes, l = this._previousAttributes;
            if (this.idAttribute in s)
                this.id = s[this.idAttribute];
            for (r in s) {
                e = s[r];
                if (!h.isEqual(c[r], e))
                    a.push(r);
                if (!h.isEqual(l[r], e))
                    this.changed[r] = e;
                else
                    delete this.changed[r];
                n ? delete c[r] : c[r] = e;
            }
            if (!o) {
                if (a.length)
                    this._pending = true;
                for (var f = 0, d = a.length; f < d; f++)
                    this.trigger('change:' + a[f], this, c[a[f]], i);
            }
            if (u)
                return this;
            if (!o)
                while (this._pending) {
                    this._pending = false;
                    this.trigger('change', this, i);
                }
            this._pending = false;
            this._changing = false;
            return this;
        },
        unset: function (t, e) {
            return this.set(t, void 0, h.extend({}, e, { unset: true }));
        },
        clear: function (t) {
            var e = {};
            for (var i in this.attributes)
                e[i] = void 0;
            return this.set(e, h.extend({}, t, { unset: true }));
        },
        hasChanged: function (t) {
            if (t == null)
                return !h.isEmpty(this.changed);
            return h.has(this.changed, t);
        },
        changedAttributes: function (t) {
            if (!t)
                return this.hasChanged() ? h.clone(this.changed) : false;
            var e, i = false;
            var r = this._changing ? this._previousAttributes : this.attributes;
            for (var s in t) {
                if (h.isEqual(r[s], e = t[s]))
                    continue;
                (i || (i = {}))[s] = e;
            }
            return i;
        },
        previous: function (t) {
            if (t == null || !this._previousAttributes)
                return null;
            return this._previousAttributes[t];
        },
        previousAttributes: function () {
            return h.clone(this._previousAttributes);
        },
        fetch: function (t) {
            t = t ? h.clone(t) : {};
            if (t.parse === void 0)
                t.parse = true;
            var e = this;
            var i = t.success;
            t.success = function (r) {
                if (!e.set(e.parse(r, t), t))
                    return false;
                if (i)
                    i(e, r, t);
                e.trigger('sync', e, r, t);
            };
            R(this, t);
            return this.sync('read', this, t);
        },
        save: function (t, e, i) {
            var r, s, n, a = this.attributes;
            if (t == null || typeof t === 'object') {
                r = t;
                i = e;
            } else
                (r = {})[t] = e;
            if (r && ((!i || !i.wait) && !this.set(r, i)))
                return false;
            i = h.extend({ validate: true }, i);
            if (!this._validate(r, i))
                return false;
            if (r && i.wait)
                this.attributes = h.extend({}, a, r);
            if (i.parse === void 0)
                i.parse = true;
            var o = this;
            var u = i.success;
            i.success = function (t) {
                o.attributes = a;
                var e = o.parse(t, i);
                if (i.wait)
                    e = h.extend(r || {}, e);
                if (h.isObject(e) && !o.set(e, i))
                    return false;
                if (u)
                    u(o, t, i);
                o.trigger('sync', o, t, i);
            };
            R(this, i);
            s = this.isNew() ? 'create' : i.patch ? 'patch' : 'update';
            if (s === 'patch')
                i.attrs = r;
            n = this.sync(s, this, i);
            if (r && i.wait)
                this.attributes = a;
            return n;
        },
        destroy: function (t) {
            t = t ? h.clone(t) : {};
            var e = this;
            var i = t.success;
            var r = function () {
                e.trigger('destroy', e, e.collection, t);
            };
            t.success = function (s) {
                if (t.wait || e.isNew())
                    r();
                if (i)
                    i(e, s, t);
                if (!e.isNew())
                    e.trigger('sync', e, s, t);
            };
            if (this.isNew()) {
                t.success();
                return false;
            }
            R(this, t);
            var s = this.sync('delete', this, t);
            if (!t.wait)
                r();
            return s;
        },
        url: function () {
            var t = h.result(this, 'urlRoot') || (h.result(this.collection, 'url') || U());
            if (this.isNew())
                return t;
            return t + (t.charAt(t.length - 1) === '/' ? '' : '/') + encodeURIComponent(this.id);
        },
        parse: function (t, e) {
            return t;
        },
        clone: function () {
            return new this.constructor(this.attributes);
        },
        isNew: function () {
            return this.id == null;
        },
        isValid: function (t) {
            return this._validate({}, h.extend(t || {}, { validate: true }));
        },
        _validate: function (t, e) {
            if (!e.validate || !this.validate)
                return true;
            t = h.extend({}, this.attributes, t);
            var i = this.validationError = this.validate(t, e) || null;
            if (!i)
                return true;
            this.trigger('invalid', this, i, h.extend(e || {}, { validationError: i }));
            return false;
        }
    });
    var v = [
        'keys',
        'values',
        'pairs',
        'invert',
        'pick',
        'omit'
    ];
    h.each(v, function (t) {
        d.prototype[t] = function () {
            var e = s.call(arguments);
            e.unshift(this.attributes);
            return h[t].apply(h, e);
        };
    });
    var g = a.Collection = function (t, e) {
        e || (e = {});
        if (e.url)
            this.url = e.url;
        if (e.model)
            this.model = e.model;
        if (e.comparator !== void 0)
            this.comparator = e.comparator;
        this._reset();
        this.initialize.apply(this, arguments);
        if (t)
            this.reset(t, h.extend({ silent: true }, e));
    };
    var m = {
        add: true,
        remove: true,
        merge: true
    };
    var y = {
        add: true,
        merge: false,
        remove: false
    };
    h.extend(g.prototype, o, {
        model: d,
        initialize: function () {
        },
        toJSON: function (t) {
            return this.map(function (e) {
                return e.toJSON(t);
            });
        },
        sync: function () {
            return a.sync.apply(this, arguments);
        },
        add: function (t, e) {
            return this.set(t, h.defaults(e || {}, y));
        },
        remove: function (t, e) {
            t = h.isArray(t) ? t.slice() : [t];
            e || (e = {});
            var i, r, s, n;
            for (i = 0, r = t.length; i < r; i++) {
                n = this.get(t[i]);
                if (!n)
                    continue;
                delete this._byId[n.id];
                delete this._byId[n.cid];
                s = this.indexOf(n);
                this.models.splice(s, 1);
                this.length--;
                if (!e.silent) {
                    e.index = s;
                    n.trigger('remove', n, this, e);
                }
                this._removeReference(n);
            }
            return this;
        },
        set: function (t, e) {
            e = h.defaults(e || {}, m);
            if (e.parse)
                t = this.parse(t, e);
            if (!h.isArray(t))
                t = t ? [t] : [];
            var i, s, a, o, u, l;
            var c = e.at;
            var f = this.comparator && (c == null && e.sort !== false);
            var d = h.isString(this.comparator) ? this.comparator : null;
            var p = [], v = [], g = {};
            for (i = 0, s = t.length; i < s; i++) {
                if (!(a = this._prepareModel(t[i], e)))
                    continue;
                if (u = this.get(a)) {
                    if (e.remove)
                        g[u.cid] = true;
                    if (e.merge) {
                        u.set(a.attributes, e);
                        if (f && (!l && u.hasChanged(d)))
                            l = true;
                    }
                } else if (e.add) {
                    p.push(a);
                    a.on('all', this._onModelEvent, this);
                    this._byId[a.cid] = a;
                    if (a.id != null)
                        this._byId[a.id] = a;
                }
            }
            if (e.remove) {
                for (i = 0, s = this.length; i < s; ++i)
                    if (!g[(a = this.models[i]).cid])
                        v.push(a);
                if (v.length)
                    this.remove(v, e);
            }
            if (p.length) {
                if (f)
                    l = true;
                this.length += p.length;
                if (c != null)
                    n.apply(this.models, [
                        c,
                        0
                    ].concat(p));
                else
                    r.apply(this.models, p);
            }
            if (l)
                this.sort({ silent: true });
            if (e.silent)
                return this;
            for (i = 0, s = p.length; i < s; i++)
                (a = p[i]).trigger('add', a, this, e);
            if (l)
                this.trigger('sort', this, e);
            return this;
        },
        reset: function (t, e) {
            e || (e = {});
            for (var i = 0, r = this.models.length; i < r; i++)
                this._removeReference(this.models[i]);
            e.previousModels = this.models;
            this._reset();
            this.add(t, h.extend({ silent: true }, e));
            if (!e.silent)
                this.trigger('reset', this, e);
            return this;
        },
        push: function (t, e) {
            t = this._prepareModel(t, e);
            this.add(t, h.extend({ at: this.length }, e));
            return t;
        },
        pop: function (t) {
            var e = this.at(this.length - 1);
            this.remove(e, t);
            return e;
        },
        unshift: function (t, e) {
            t = this._prepareModel(t, e);
            this.add(t, h.extend({ at: 0 }, e));
            return t;
        },
        shift: function (t) {
            var e = this.at(0);
            this.remove(e, t);
            return e;
        },
        slice: function (t, e) {
            return this.models.slice(t, e);
        },
        get: function (t) {
            if (t == null)
                return void 0;
            return this._byId[t.id != null ? t.id : t.cid || t];
        },
        at: function (t) {
            return this.models[t];
        },
        where: function (t, e) {
            if (h.isEmpty(t))
                return e ? void 0 : [];
            return this[e ? 'find' : 'filter'](function (e) {
                for (var i in t)
                    if (t[i] !== e.get(i))
                        return false;
                return true;
            });
        },
        findWhere: function (t) {
            return this.where(t, true);
        },
        sort: function (t) {
            if (!this.comparator)
                throw new Error('Cannot sort a set without a comparator');
            t || (t = {});
            if (h.isString(this.comparator) || this.comparator.length === 1)
                this.models = this.sortBy(this.comparator, this);
            else
                this.models.sort(h.bind(this.comparator, this));
            if (!t.silent)
                this.trigger('sort', this, t);
            return this;
        },
        sortedIndex: function (t, e, i) {
            e || (e = this.comparator);
            var r = h.isFunction(e) ? e : function (t) {
                return t.get(e);
            };
            return h.sortedIndex(this.models, t, r, i);
        },
        pluck: function (t) {
            return h.invoke(this.models, 'get', t);
        },
        fetch: function (t) {
            t = t ? h.clone(t) : {};
            if (t.parse === void 0)
                t.parse = true;
            var e = t.success;
            var i = this;
            t.success = function (r) {
                var s = t.reset ? 'reset' : 'set';
                i[s](r, t);
                if (e)
                    e(i, r, t);
                i.trigger('sync', i, r, t);
            };
            R(this, t);
            return this.sync('read', this, t);
        },
        create: function (t, e) {
            e = e ? h.clone(e) : {};
            if (!(t = this._prepareModel(t, e)))
                return false;
            if (!e.wait)
                this.add(t, e);
            var i = this;
            var r = e.success;
            e.success = function (s) {
                if (e.wait)
                    i.add(t, e);
                if (r)
                    r(t, s, e);
            };
            t.save(null, e);
            return t;
        },
        parse: function (t, e) {
            return t;
        },
        clone: function () {
            return new this.constructor(this.models);
        },
        _reset: function () {
            this.length = 0;
            this.models = [];
            this._byId = {};
        },
        _prepareModel: function (t, e) {
            if (t instanceof d) {
                if (!t.collection)
                    t.collection = this;
                return t;
            }
            e || (e = {});
            e.collection = this;
            var i = new this.model(t, e);
            if (!i._validate(t, e)) {
                this.trigger('invalid', this, t, e);
                return false;
            }
            return i;
        },
        _removeReference: function (t) {
            if (this === t.collection)
                delete t.collection;
            t.off('all', this._onModelEvent, this);
        },
        _onModelEvent: function (t, e, i, r) {
            if ((t === 'add' || t === 'remove') && i !== this)
                return;
            if (t === 'destroy')
                this.remove(e, r);
            if (e && t === 'change:' + e.idAttribute) {
                delete this._byId[e.previous(e.idAttribute)];
                if (e.id != null)
                    this._byId[e.id] = e;
            }
            this.trigger.apply(this, arguments);
        }
    });
    var _ = [
        'forEach',
        'each',
        'map',
        'collect',
        'reduce',
        'foldl',
        'inject',
        'reduceRight',
        'foldr',
        'find',
        'detect',
        'filter',
        'select',
        'reject',
        'every',
        'all',
        'some',
        'any',
        'include',
        'contains',
        'invoke',
        'max',
        'min',
        'toArray',
        'size',
        'first',
        'head',
        'take',
        'initial',
        'rest',
        'tail',
        'drop',
        'last',
        'without',
        'indexOf',
        'shuffle',
        'lastIndexOf',
        'isEmpty',
        'chain'
    ];
    h.each(_, function (t) {
        g.prototype[t] = function () {
            var e = s.call(arguments);
            e.unshift(this.models);
            return h[t].apply(h, e);
        };
    });
    var w = [
        'groupBy',
        'countBy',
        'sortBy'
    ];
    h.each(w, function (t) {
        g.prototype[t] = function (e, i) {
            var r = h.isFunction(e) ? e : function (t) {
                return t.get(e);
            };
            return h[t](this.models, r, i);
        };
    });
    var b = a.View = function (t) {
        this.cid = h.uniqueId('view');
        this._configure(t || {});
        this._ensureElement();
        this.initialize.apply(this, arguments);
        this.delegateEvents();
    };
    var x = /^(\S+)\s*(.*)$/;
    var E = [
        'model',
        'collection',
        'el',
        'id',
        'attributes',
        'className',
        'tagName',
        'events'
    ];
    h.extend(b.prototype, o, {
        tagName: 'div',
        $: function (t) {
            return this.$el.find(t);
        },
        initialize: function () {
        },
        render: function () {
            return this;
        },
        remove: function () {
            this.$el.remove();
            this.stopListening();
            return this;
        },
        setElement: function (t, e) {
            if (this.$el)
                this.undelegateEvents();
            this.$el = t instanceof a.$ ? t : a.$(t);
            this.el = this.$el[0];
            if (e !== false)
                this.delegateEvents();
            return this;
        },
        delegateEvents: function (t) {
            if (!(t || (t = h.result(this, 'events'))))
                return this;
            this.undelegateEvents();
            for (var e in t) {
                var i = t[e];
                if (!h.isFunction(i))
                    i = this[t[e]];
                if (!i)
                    continue;
                var r = e.match(x);
                var s = r[1], n = r[2];
                i = h.bind(i, this);
                s += '.delegateEvents' + this.cid;
                if (n === '')
                    this.$el.on(s, i);
                else
                    this.$el.on(s, n, i);
            }
            return this;
        },
        undelegateEvents: function () {
            this.$el.off('.delegateEvents' + this.cid);
            return this;
        },
        _configure: function (t) {
            if (this.options)
                t = h.extend({}, h.result(this, 'options'), t);
            h.extend(this, h.pick(t, E));
            this.options = t;
        },
        _ensureElement: function () {
            if (!this.el) {
                var t = h.extend({}, h.result(this, 'attributes'));
                if (this.id)
                    t.id = h.result(this, 'id');
                if (this.className)
                    t['class'] = h.result(this, 'className');
                var e = a.$('<' + h.result(this, 'tagName') + '>').attr(t);
                this.setElement(e, false);
            } else
                this.setElement(h.result(this, 'el'), false);
        }
    });
    a.sync = function (t, e, i) {
        var r = k[t];
        h.defaults(i || (i = {}), {
            emulateHTTP: a.emulateHTTP,
            emulateJSON: a.emulateJSON
        });
        var s = {
            type: r,
            dataType: 'json'
        };
        if (!i.url)
            s.url = h.result(e, 'url') || U();
        if (i.data == null && (e && (t === 'create' || (t === 'update' || t === 'patch')))) {
            s.contentType = 'application/json';
            s.data = JSON.stringify(i.attrs || e.toJSON(i));
        }
        if (i.emulateJSON) {
            s.contentType = 'application/x-www-form-urlencoded';
            s.data = s.data ? { model: s.data } : {};
        }
        if (i.emulateHTTP && (r === 'PUT' || (r === 'DELETE' || r === 'PATCH'))) {
            s.type = 'POST';
            if (i.emulateJSON)
                s.data._method = r;
            var n = i.beforeSend;
            i.beforeSend = function (t) {
                t.setRequestHeader('X-HTTP-Method-Override', r);
                if (n)
                    return n.apply(this, arguments);
            };
        }
        if (s.type !== 'GET' && !i.emulateJSON)
            s.processData = false;
        if (s.type === 'PATCH' && (window.ActiveXObject && !(window.external && window.external.msActiveXFilteringEnabled)))
            s.xhr = function () {
                return new ActiveXObject('Microsoft.XMLHTTP');
            };
        var o = i.xhr = a.ajax(h.extend(s, i));
        e.trigger('request', e, o, i);
        return o;
    };
    var k = {
        create: 'POST',
        update: 'PUT',
        patch: 'PATCH',
        'delete': 'DELETE',
        read: 'GET'
    };
    a.ajax = function () {
        return a.$.ajax.apply(a.$, arguments);
    };
    var S = a.Router = function (t) {
        t || (t = {});
        if (t.routes)
            this.routes = t.routes;
        this._bindRoutes();
        this.initialize.apply(this, arguments);
    };
    var $ = /\((.*?)\)/g;
    var T = /(\(\?)?:\w+/g;
    var H = /\*\w+/g;
    var A = /[\-{}\[\]+?.,\\\^$|#\s]/g;
    h.extend(S.prototype, o, {
        initialize: function () {
        },
        route: function (t, e, i) {
            if (!h.isRegExp(t))
                t = this._routeToRegExp(t);
            if (h.isFunction(e)) {
                i = e;
                e = '';
            }
            if (!i)
                i = this[e];
            var r = this;
            a.history.route(t, function (s) {
                var n = r._extractParameters(t, s);
                i && i.apply(r, n);
                r.trigger.apply(r, ['route:' + e].concat(n));
                r.trigger('route', e, n);
                a.history.trigger('route', r, e, n);
            });
            return this;
        },
        navigate: function (t, e) {
            a.history.navigate(t, e);
            return this;
        },
        _bindRoutes: function () {
            if (!this.routes)
                return;
            this.routes = h.result(this, 'routes');
            var t, e = h.keys(this.routes);
            while ((t = e.pop()) != null)
                this.route(t, this.routes[t]);
        },
        _routeToRegExp: function (t) {
            t = t.replace(A, '\\$&').replace($, '(?:$1)?').replace(T, function (t, e) {
                return e ? t : '([^/]+)';
            }).replace(H, '(.*?)');
            return new RegExp('^' + t + '$');
        },
        _extractParameters: function (t, e) {
            var i = t.exec(e).slice(1);
            return h.map(i, function (t) {
                return t ? decodeURIComponent(t) : null;
            });
        }
    });
    var I = a.History = function () {
        this.handlers = [];
        h.bindAll(this, 'checkUrl');
        if (typeof window !== 'undefined') {
            this.location = window.location;
            this.history = window.history;
        }
    };
    var N = /^[#\/]|\s+$/g;
    var P = /^\/+|\/+$/g;
    var O = /msie [\w.]+/;
    var C = /\/$/;
    I.started = false;
    h.extend(I.prototype, o, {
        interval: 50,
        getHash: function (t) {
            var e = (t || this).location.href.match(/#(.*)$/);
            return e ? e[1] : '';
        },
        getFragment: function (t, e) {
            if (t == null)
                if (this._hasPushState || (!this._wantsHashChange || e)) {
                    t = this.location.pathname;
                    var i = this.root.replace(C, '');
                    if (!t.indexOf(i))
                        t = t.substr(i.length);
                } else
                    t = this.getHash();
            return t.replace(N, '');
        },
        start: function (t) {
            if (I.started)
                throw new Error('Backbone.history has already been started');
            I.started = true;
            this.options = h.extend({}, { root: '/' }, this.options, t);
            this.root = this.options.root;
            this._wantsHashChange = this.options.hashChange !== false;
            this._wantsPushState = !!this.options.pushState;
            this._hasPushState = !!(this.options.pushState && (this.history && this.history.pushState));
            var e = this.getFragment();
            var i = document.documentMode;
            var r = O.exec(navigator.userAgent.toLowerCase()) && (!i || i <= 7);
            this.root = ('/' + this.root + '/').replace(P, '/');
            if (r && this._wantsHashChange) {
                this.iframe = a.$('<iframe src="javascript:0" tabindex="-1" />').hide().appendTo('body')[0].contentWindow;
                this.navigate(e);
            }
            if (this._hasPushState)
                a.$(window).on('popstate', this.checkUrl);
            else if (this._wantsHashChange && ('onhashchange' in window && !r))
                a.$(window).on('hashchange', this.checkUrl);
            else if (this._wantsHashChange)
                this._checkUrlInterval = setInterval(this.checkUrl, this.interval);
            this.fragment = e;
            var s = this.location;
            var n = s.pathname.replace(/[^\/]$/, '$&/') === this.root;
            if (this._wantsHashChange && (this._wantsPushState && (!this._hasPushState && !n))) {
                this.fragment = this.getFragment(null, true);
                this.location.replace(this.root + this.location.search + '#' + this.fragment);
                return true;
            } else if (this._wantsPushState && (this._hasPushState && (n && s.hash))) {
                this.fragment = this.getHash().replace(N, '');
                this.history.replaceState({}, document.title, this.root + this.fragment + s.search);
            }
            if (!this.options.silent)
                return this.loadUrl();
        },
        stop: function () {
            a.$(window).off('popstate', this.checkUrl).off('hashchange', this.checkUrl);
            clearInterval(this._checkUrlInterval);
            I.started = false;
        },
        route: function (t, e) {
            this.handlers.unshift({
                route: t,
                callback: e
            });
        },
        checkUrl: function (t) {
            var e = this.getFragment();
            if (e === this.fragment && this.iframe)
                e = this.getFragment(this.getHash(this.iframe));
            if (e === this.fragment)
                return false;
            if (this.iframe)
                this.navigate(e);
            this.loadUrl() || this.loadUrl(this.getHash());
        },
        loadUrl: function (t) {
            var e = this.fragment = this.getFragment(t);
            var i = h.any(this.handlers, function (t) {
                if (t.route.test(e)) {
                    t.callback(e);
                    return true;
                }
            });
            return i;
        },
        navigate: function (t, e) {
            if (!I.started)
                return false;
            if (!e || e === true)
                e = { trigger: e };
            t = this.getFragment(t || '');
            if (this.fragment === t)
                return;
            this.fragment = t;
            var i = this.root + t;
            if (this._hasPushState)
                this.history[e.replace ? 'replaceState' : 'pushState']({}, document.title, i);
            else if (this._wantsHashChange) {
                this._updateHash(this.location, t, e.replace);
                if (this.iframe && t !== this.getFragment(this.getHash(this.iframe))) {
                    if (!e.replace)
                        this.iframe.document.open().close();
                    this._updateHash(this.iframe.location, t, e.replace);
                }
            } else
                return this.location.assign(i);
            if (e.trigger)
                this.loadUrl(t);
        },
        _updateHash: function (t, e, i) {
            if (i) {
                var r = t.href.replace(/(javascript:|#).*$/, '');
                t.replace(r + '#' + e);
            } else
                t.hash = '#' + e;
        }
    });
    a.history = new I();
    var j = function (t, e) {
        var i = this;
        var r;
        if (t && h.has(t, 'constructor'))
            r = t.constructor;
        else
            r = function () {
                return i.apply(this, arguments);
            };
        h.extend(r, i, e);
        var s = function () {
            this.constructor = r;
        };
        s.prototype = i.prototype;
        r.prototype = new s();
        if (t)
            h.extend(r.prototype, t);
        r.__super__ = i.prototype;
        return r;
    };
    d.extend = g.extend = S.extend = b.extend = I.extend = j;
    var U = function () {
        throw new Error('A "url" property or function must be specified');
    };
    var R = function (t, e) {
        var i = e.error;
        e.error = function (r) {
            if (i)
                i(t, r, e);
            t.trigger('error', t, r, e);
        };
    };
}.call(this));
define('backbone', [], function () {
    return Backbone;
});

(function (e, t) {
    var n, r, i = typeof t, o = e.location, a = e.document, s = a.documentElement, l = e.jQuery, u = e.$, c = {}, p = [], f = '1.10.2', d = p.concat, h = p.push, g = p.slice, m = p.indexOf, y = c.toString, v = c.hasOwnProperty, b = f.trim, x = function (e, t) {
            return new x.fn.init(e, t, r);
        }, w = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source, T = /\S+/g, C = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, N = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/, k = /^<(\w+)\s*\/?>(?:<\/\1>|)$/, E = /^[\],:{}\s]*$/, S = /(?:^|:|,)(?:\s*\[)+/g, A = /\\(?:["\\\/bfnrt]|u[\da-fA-F]{4})/g, j = /"[^"\\\r\n]*"|true|false|null|-?(?:\d+\.|)\d+(?:[eE][+-]?\d+|)/g, D = /^-ms-/, L = /-([\da-z])/gi, H = function (e, t) {
            return t.toUpperCase();
        }, q = function (e) {
            (a.addEventListener || ('load' === e.type || 'complete' === a.readyState)) && (_(), x.ready());
        }, _ = function () {
            a.addEventListener ? (a.removeEventListener('DOMContentLoaded', q, !1), e.removeEventListener('load', q, !1)) : (a.detachEvent('onreadystatechange', q), e.detachEvent('onload', q));
        };
    x.fn = x.prototype = {
        jquery: f,
        constructor: x,
        init: function (e, n, r) {
            var i, o;
            if (!e)
                return this;
            if ('string' == typeof e) {
                if (i = '<' === e.charAt(0) && ('>' === e.charAt(e.length - 1) && e.length >= 3) ? [
                        null,
                        e,
                        null
                    ] : N.exec(e), !i || !i[1] && n)
                    return !n || n.jquery ? (n || r).find(e) : this.constructor(n).find(e);
                if (i[1]) {
                    if (n = n instanceof x ? n[0] : n, x.merge(this, x.parseHTML(i[1], n && n.nodeType ? n.ownerDocument || n : a, !0)), k.test(i[1]) && x.isPlainObject(n))
                        for (i in n)
                            x.isFunction(this[i]) ? this[i](n[i]) : this.attr(i, n[i]);
                    return this;
                }
                if (o = a.getElementById(i[2]), o && o.parentNode) {
                    if (o.id !== i[2])
                        return r.find(e);
                    this.length = 1, this[0] = o;
                }
                return this.context = a, this.selector = e, this;
            }
            return e.nodeType ? (this.context = this[0] = e, this.length = 1, this) : x.isFunction(e) ? r.ready(e) : (e.selector !== t && (this.selector = e.selector, this.context = e.context), x.makeArray(e, this));
        },
        selector: '',
        length: 0,
        toArray: function () {
            return g.call(this);
        },
        get: function (e) {
            return null == e ? this.toArray() : 0 > e ? this[this.length + e] : this[e];
        },
        pushStack: function (e) {
            var t = x.merge(this.constructor(), e);
            return t.prevObject = this, t.context = this.context, t;
        },
        each: function (e, t) {
            return x.each(this, e, t);
        },
        ready: function (e) {
            return x.ready.promise().done(e), this;
        },
        slice: function () {
            return this.pushStack(g.apply(this, arguments));
        },
        first: function () {
            return this.eq(0);
        },
        last: function () {
            return this.eq(-1);
        },
        eq: function (e) {
            var t = this.length, n = +e + (0 > e ? t : 0);
            return this.pushStack(n >= 0 && t > n ? [this[n]] : []);
        },
        map: function (e) {
            return this.pushStack(x.map(this, function (t, n) {
                return e.call(t, n, t);
            }));
        },
        end: function () {
            return this.prevObject || this.constructor(null);
        },
        push: h,
        sort: [].sort,
        splice: [].splice
    }, x.fn.init.prototype = x.fn, x.extend = x.fn.extend = function () {
        var e, n, r, i, o, a, s = arguments[0] || {}, l = 1, u = arguments.length, c = !1;
        for ('boolean' == typeof s && (c = s, s = arguments[1] || {}, l = 2), 'object' == typeof s || (x.isFunction(s) || (s = {})), u === l && (s = this, --l); u > l; l++)
            if (null != (o = arguments[l]))
                for (i in o)
                    e = s[i], r = o[i], s !== r && (c && (r && (x.isPlainObject(r) || (n = x.isArray(r)))) ? (n ? (n = !1, a = e && x.isArray(e) ? e : []) : a = e && x.isPlainObject(e) ? e : {}, s[i] = x.extend(c, a, r)) : r !== t && (s[i] = r));
        return s;
    }, x.extend({
        expando: 'jQuery' + (f + Math.random()).replace(/\D/g, ''),
        noConflict: function (t) {
            return e.$ === x && (e.$ = u), t && (e.jQuery === x && (e.jQuery = l)), x;
        },
        isReady: !1,
        readyWait: 1,
        holdReady: function (e) {
            e ? x.readyWait++ : x.ready(!0);
        },
        ready: function (e) {
            if (e === !0 ? !--x.readyWait : !x.isReady) {
                if (!a.body)
                    return setTimeout(x.ready);
                x.isReady = !0, e !== !0 && --x.readyWait > 0 || (n.resolveWith(a, [x]), x.fn.trigger && x(a).trigger('ready').off('ready'));
            }
        },
        isFunction: function (e) {
            return 'function' === x.type(e);
        },
        isArray: Array.isArray || function (e) {
            return 'array' === x.type(e);
        },
        isWindow: function (e) {
            return null != e && e == e.window;
        },
        isNumeric: function (e) {
            return !isNaN(parseFloat(e)) && isFinite(e);
        },
        type: function (e) {
            return null == e ? e + '' : 'object' == typeof e || 'function' == typeof e ? c[y.call(e)] || 'object' : typeof e;
        },
        isPlainObject: function (e) {
            var n;
            if (!e || ('object' !== x.type(e) || (e.nodeType || x.isWindow(e))))
                return !1;
            try {
                if (e.constructor && (!v.call(e, 'constructor') && !v.call(e.constructor.prototype, 'isPrototypeOf')))
                    return !1;
            } catch (r) {
                return !1;
            }
            if (x.support.ownLast)
                for (n in e)
                    return v.call(e, n);
            for (n in e);
            return n === t || v.call(e, n);
        },
        isEmptyObject: function (e) {
            var t;
            for (t in e)
                return !1;
            return !0;
        },
        error: function (e) {
            throw Error(e);
        },
        parseHTML: function (e, t, n) {
            if (!e || 'string' != typeof e)
                return null;
            'boolean' == typeof t && (n = t, t = !1), t = t || a;
            var r = k.exec(e), i = !n && [];
            return r ? [t.createElement(r[1])] : (r = x.buildFragment([e], t, i), i && x(i).remove(), x.merge([], r.childNodes));
        },
        parseJSON: function (n) {
            return e.JSON && e.JSON.parse ? e.JSON.parse(n) : null === n ? n : 'string' == typeof n && (n = x.trim(n), n && E.test(n.replace(A, '@').replace(j, ']').replace(S, ''))) ? Function('return ' + n)() : (x.error('Invalid JSON: ' + n), t);
        },
        parseXML: function (n) {
            var r, i;
            if (!n || 'string' != typeof n)
                return null;
            try {
                e.DOMParser ? (i = new DOMParser(), r = i.parseFromString(n, 'text/xml')) : (r = new ActiveXObject('Microsoft.XMLDOM'), r.async = 'false', r.loadXML(n));
            } catch (o) {
                r = t;
            }
            return r && (r.documentElement && !r.getElementsByTagName('parsererror').length) || x.error('Invalid XML: ' + n), r;
        },
        noop: function () {
        },
        globalEval: function (t) {
            t && (x.trim(t) && (e.execScript || function (t) {
                e.eval.call(e, t);
            })(t));
        },
        camelCase: function (e) {
            return e.replace(D, 'ms-').replace(L, H);
        },
        nodeName: function (e, t) {
            return e.nodeName && e.nodeName.toLowerCase() === t.toLowerCase();
        },
        each: function (e, t, n) {
            var r, i = 0, o = e.length, a = M(e);
            if (n)
                if (a)
                    for (; o > i; i++) {
                        if (r = t.apply(e[i], n), r === !1)
                            break;
                    }
                else
                    for (i in e) {
                        if (r = t.apply(e[i], n), r === !1)
                            break;
                    }
            else if (a)
                for (; o > i; i++) {
                    if (r = t.call(e[i], i, e[i]), r === !1)
                        break;
                }
            else
                for (i in e)
                    if (r = t.call(e[i], i, e[i]), r === !1)
                        break;
            return e;
        },
        trim: b && !b.call('\uFEFF\xA0') ? function (e) {
            return null == e ? '' : b.call(e);
        } : function (e) {
            return null == e ? '' : (e + '').replace(C, '');
        },
        makeArray: function (e, t) {
            var n = t || [];
            return null != e && (M(Object(e)) ? x.merge(n, 'string' == typeof e ? [e] : e) : h.call(n, e)), n;
        },
        inArray: function (e, t, n) {
            var r;
            if (t) {
                if (m)
                    return m.call(t, e, n);
                for (r = t.length, n = n ? 0 > n ? Math.max(0, r + n) : n : 0; r > n; n++)
                    if (n in t && t[n] === e)
                        return n;
            }
            return -1;
        },
        merge: function (e, n) {
            var r = n.length, i = e.length, o = 0;
            if ('number' == typeof r)
                for (; r > o; o++)
                    e[i++] = n[o];
            else
                while (n[o] !== t)
                    e[i++] = n[o++];
            return e.length = i, e;
        },
        grep: function (e, t, n) {
            var r, i = [], o = 0, a = e.length;
            for (n = !!n; a > o; o++)
                r = !!t(e[o], o), n !== r && i.push(e[o]);
            return i;
        },
        map: function (e, t, n) {
            var r, i = 0, o = e.length, a = M(e), s = [];
            if (a)
                for (; o > i; i++)
                    r = t(e[i], i, n), null != r && (s[s.length] = r);
            else
                for (i in e)
                    r = t(e[i], i, n), null != r && (s[s.length] = r);
            return d.apply([], s);
        },
        guid: 1,
        proxy: function (e, n) {
            var r, i, o;
            return 'string' == typeof n && (o = e[n], n = e, e = o), x.isFunction(e) ? (r = g.call(arguments, 2), i = function () {
                return e.apply(n || this, r.concat(g.call(arguments)));
            }, i.guid = e.guid = e.guid || x.guid++, i) : t;
        },
        access: function (e, n, r, i, o, a, s) {
            var l = 0, u = e.length, c = null == r;
            if ('object' === x.type(r)) {
                o = !0;
                for (l in r)
                    x.access(e, n, l, r[l], !0, a, s);
            } else if (i !== t && (o = !0, x.isFunction(i) || (s = !0), c && (s ? (n.call(e, i), n = null) : (c = n, n = function (e, t, n) {
                    return c.call(x(e), n);
                })), n))
                for (; u > l; l++)
                    n(e[l], r, s ? i : i.call(e[l], l, n(e[l], r)));
            return o ? e : c ? n.call(e) : u ? n(e[0], r) : a;
        },
        now: function () {
            return new Date().getTime();
        },
        swap: function (e, t, n, r) {
            var i, o, a = {};
            for (o in t)
                a[o] = e.style[o], e.style[o] = t[o];
            i = n.apply(e, r || []);
            for (o in t)
                e.style[o] = a[o];
            return i;
        }
    }), x.ready.promise = function (t) {
        if (!n)
            if (n = x.Deferred(), 'complete' === a.readyState)
                setTimeout(x.ready);
            else if (a.addEventListener)
                a.addEventListener('DOMContentLoaded', q, !1), e.addEventListener('load', q, !1);
            else {
                a.attachEvent('onreadystatechange', q), e.attachEvent('onload', q);
                var r = !1;
                try {
                    r = null == e.frameElement && a.documentElement;
                } catch (i) {
                }
                r && (r.doScroll && function o() {
                    if (!x.isReady) {
                        try {
                            r.doScroll('left');
                        } catch (e) {
                            return setTimeout(o, 50);
                        }
                        _(), x.ready();
                    }
                }());
            }
        return n.promise(t);
    }, x.each('Boolean Number String Function Array Date RegExp Object Error'.split(' '), function (e, t) {
        c['[object ' + t + ']'] = t.toLowerCase();
    });
    function M(e) {
        var t = e.length, n = x.type(e);
        return x.isWindow(e) ? !1 : 1 === e.nodeType && t ? !0 : 'array' === n || 'function' !== n && (0 === t || 'number' == typeof t && (t > 0 && t - 1 in e));
    }
    r = x(a), function (e, t) {
        var n, r, i, o, a, s, l, u, c, p, f, d, h, g, m, y, v, b = 'sizzle' + -new Date(), w = e.document, T = 0, C = 0, N = st(), k = st(), E = st(), S = !1, A = function (e, t) {
                return e === t ? (S = !0, 0) : 0;
            }, j = typeof t, D = 1 << 31, L = {}.hasOwnProperty, H = [], q = H.pop, _ = H.push, M = H.push, O = H.slice, F = H.indexOf || function (e) {
                var t = 0, n = this.length;
                for (; n > t; t++)
                    if (this[t] === e)
                        return t;
                return -1;
            }, B = 'checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped', P = '[\\x20\\t\\r\\n\\f]', R = '(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+', W = R.replace('w', 'w#'), $ = '\\[' + P + '*(' + R + ')' + P + '*(?:([*^$|!~]?=)' + P + '*(?:([\'"])((?:\\\\.|[^\\\\])*?)\\3|(' + W + ')|)|)' + P + '*\\]', I = ':(' + R + ')(?:\\((([\'"])((?:\\\\.|[^\\\\])*?)\\3|((?:\\\\.|[^\\\\()[\\]]|' + $.replace(3, 8) + ')*)|.*)\\)|)', z = RegExp('^' + P + '+|((?:^|[^\\\\])(?:\\\\.)*)' + P + '+$', 'g'), X = RegExp('^' + P + '*,' + P + '*'), U = RegExp('^' + P + '*([>+~]|' + P + ')' + P + '*'), V = RegExp(P + '*[+~]'), Y = RegExp('=' + P + '*([^\\]\'"]*)' + P + '*\\]', 'g'), J = RegExp(I), G = RegExp('^' + W + '$'), Q = {
                ID: RegExp('^#(' + R + ')'),
                CLASS: RegExp('^\\.(' + R + ')'),
                TAG: RegExp('^(' + R.replace('w', 'w*') + ')'),
                ATTR: RegExp('^' + $),
                PSEUDO: RegExp('^' + I),
                CHILD: RegExp('^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(' + P + '*(even|odd|(([+-]|)(\\d*)n|)' + P + '*(?:([+-]|)' + P + '*(\\d+)|))' + P + '*\\)|)', 'i'),
                bool: RegExp('^(?:' + B + ')$', 'i'),
                needsContext: RegExp('^' + P + '*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(' + P + '*((?:-\\d)?\\d*)' + P + '*\\)|)(?=[^-]|$)', 'i')
            }, K = /^[^{]+\{\s*\[native \w/, Z = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/, et = /^(?:input|select|textarea|button)$/i, tt = /^h\d$/i, nt = /'|\\/g, rt = RegExp('\\\\([\\da-f]{1,6}' + P + '?|(' + P + ')|.)', 'ig'), it = function (e, t, n) {
                var r = '0x' + t - 65536;
                return r !== r || n ? t : 0 > r ? String.fromCharCode(r + 65536) : String.fromCharCode(55296 | r >> 10, 56320 | 1023 & r);
            };
        try {
            M.apply(H = O.call(w.childNodes), w.childNodes), H[w.childNodes.length].nodeType;
        } catch (ot) {
            M = {
                apply: H.length ? function (e, t) {
                    _.apply(e, O.call(t));
                } : function (e, t) {
                    var n = e.length, r = 0;
                    while (e[n++] = t[r++]);
                    e.length = n - 1;
                }
            };
        }
        function at(e, t, n, i) {
            var o, a, s, l, u, c, d, m, y, x;
            if ((t ? t.ownerDocument || t : w) !== f && p(t), t = t || f, n = n || [], !e || 'string' != typeof e)
                return n;
            if (1 !== (l = t.nodeType) && 9 !== l)
                return [];
            if (h && !i) {
                if (o = Z.exec(e))
                    if (s = o[1])
                        if (9 === l) {
                            if (a = t.getElementById(s), !a || !a.parentNode)
                                return n;
                            if (a.id === s)
                                return n.push(a), n;
                        } else {
                            if (t.ownerDocument && ((a = t.ownerDocument.getElementById(s)) && (v(t, a) && a.id === s)))
                                return n.push(a), n;
                        }
                    else {
                        if (o[2])
                            return M.apply(n, t.getElementsByTagName(e)), n;
                        if ((s = o[3]) && (r.getElementsByClassName && t.getElementsByClassName))
                            return M.apply(n, t.getElementsByClassName(s)), n;
                    }
                if (r.qsa && (!g || !g.test(e))) {
                    if (m = d = b, y = t, x = 9 === l && e, 1 === l && 'object' !== t.nodeName.toLowerCase()) {
                        c = mt(e), (d = t.getAttribute('id')) ? m = d.replace(nt, '\\$&') : t.setAttribute('id', m), m = '[id=\'' + m + '\'] ', u = c.length;
                        while (u--)
                            c[u] = m + yt(c[u]);
                        y = V.test(e) && t.parentNode || t, x = c.join(',');
                    }
                    if (x)
                        try {
                            return M.apply(n, y.querySelectorAll(x)), n;
                        } catch (T) {
                        } finally {
                            d || t.removeAttribute('id');
                        }
                }
            }
            return kt(e.replace(z, '$1'), t, n, i);
        }
        function st() {
            var e = [];
            function t(n, r) {
                return e.push(n += ' ') > o.cacheLength && delete t[e.shift()], t[n] = r;
            }
            return t;
        }
        function lt(e) {
            return e[b] = !0, e;
        }
        function ut(e) {
            var t = f.createElement('div');
            try {
                return !!e(t);
            } catch (n) {
                return !1;
            } finally {
                t.parentNode && t.parentNode.removeChild(t), t = null;
            }
        }
        function ct(e, t) {
            var n = e.split('|'), r = e.length;
            while (r--)
                o.attrHandle[n[r]] = t;
        }
        function pt(e, t) {
            var n = t && e, r = n && (1 === e.nodeType && (1 === t.nodeType && (~t.sourceIndex || D) - (~e.sourceIndex || D)));
            if (r)
                return r;
            if (n)
                while (n = n.nextSibling)
                    if (n === t)
                        return -1;
            return e ? 1 : -1;
        }
        function ft(e) {
            return function (t) {
                var n = t.nodeName.toLowerCase();
                return 'input' === n && t.type === e;
            };
        }
        function dt(e) {
            return function (t) {
                var n = t.nodeName.toLowerCase();
                return ('input' === n || 'button' === n) && t.type === e;
            };
        }
        function ht(e) {
            return lt(function (t) {
                return t = +t, lt(function (n, r) {
                    var i, o = e([], n.length, t), a = o.length;
                    while (a--)
                        n[i = o[a]] && (n[i] = !(r[i] = n[i]));
                });
            });
        }
        s = at.isXML = function (e) {
            var t = e && (e.ownerDocument || e).documentElement;
            return t ? 'HTML' !== t.nodeName : !1;
        }, r = at.support = {}, p = at.setDocument = function (e) {
            var n = e ? e.ownerDocument || e : w, i = n.defaultView;
            return n !== f && (9 === n.nodeType && n.documentElement) ? (f = n, d = n.documentElement, h = !s(n), i && (i.attachEvent && (i !== i.top && i.attachEvent('onbeforeunload', function () {
                p();
            }))), r.attributes = ut(function (e) {
                return e.className = 'i', !e.getAttribute('className');
            }), r.getElementsByTagName = ut(function (e) {
                return e.appendChild(n.createComment('')), !e.getElementsByTagName('*').length;
            }), r.getElementsByClassName = ut(function (e) {
                return e.innerHTML = '<div class=\'a\'></div><div class=\'a i\'></div>', e.firstChild.className = 'i', 2 === e.getElementsByClassName('i').length;
            }), r.getById = ut(function (e) {
                return d.appendChild(e).id = b, !n.getElementsByName || !n.getElementsByName(b).length;
            }), r.getById ? (o.find.ID = function (e, t) {
                if (typeof t.getElementById !== j && h) {
                    var n = t.getElementById(e);
                    return n && n.parentNode ? [n] : [];
                }
            }, o.filter.ID = function (e) {
                var t = e.replace(rt, it);
                return function (e) {
                    return e.getAttribute('id') === t;
                };
            }) : (delete o.find.ID, o.filter.ID = function (e) {
                var t = e.replace(rt, it);
                return function (e) {
                    var n = typeof e.getAttributeNode !== j && e.getAttributeNode('id');
                    return n && n.value === t;
                };
            }), o.find.TAG = r.getElementsByTagName ? function (e, n) {
                return typeof n.getElementsByTagName !== j ? n.getElementsByTagName(e) : t;
            } : function (e, t) {
                var n, r = [], i = 0, o = t.getElementsByTagName(e);
                if ('*' === e) {
                    while (n = o[i++])
                        1 === n.nodeType && r.push(n);
                    return r;
                }
                return o;
            }, o.find.CLASS = r.getElementsByClassName && function (e, n) {
                return typeof n.getElementsByClassName !== j && h ? n.getElementsByClassName(e) : t;
            }, m = [], g = [], (r.qsa = K.test(n.querySelectorAll)) && (ut(function (e) {
                e.innerHTML = '<select><option selected=\'\'></option></select>', e.querySelectorAll('[selected]').length || g.push('\\[' + P + '*(?:value|' + B + ')'), e.querySelectorAll(':checked').length || g.push(':checked');
            }), ut(function (e) {
                var t = n.createElement('input');
                t.setAttribute('type', 'hidden'), e.appendChild(t).setAttribute('t', ''), e.querySelectorAll('[t^=\'\']').length && g.push('[*^$]=' + P + '*(?:\'\'|"")'), e.querySelectorAll(':enabled').length || g.push(':enabled', ':disabled'), e.querySelectorAll('*,:x'), g.push(',.*:');
            })), (r.matchesSelector = K.test(y = d.webkitMatchesSelector || (d.mozMatchesSelector || (d.oMatchesSelector || d.msMatchesSelector)))) && ut(function (e) {
                r.disconnectedMatch = y.call(e, 'div'), y.call(e, '[s!=\'\']:x'), m.push('!=', I);
            }), g = g.length && RegExp(g.join('|')), m = m.length && RegExp(m.join('|')), v = K.test(d.contains) || d.compareDocumentPosition ? function (e, t) {
                var n = 9 === e.nodeType ? e.documentElement : e, r = t && t.parentNode;
                return e === r || !(!r || (1 !== r.nodeType || !(n.contains ? n.contains(r) : e.compareDocumentPosition && 16 & e.compareDocumentPosition(r))));
            } : function (e, t) {
                if (t)
                    while (t = t.parentNode)
                        if (t === e)
                            return !0;
                return !1;
            }, A = d.compareDocumentPosition ? function (e, t) {
                if (e === t)
                    return S = !0, 0;
                var i = t.compareDocumentPosition && (e.compareDocumentPosition && e.compareDocumentPosition(t));
                return i ? 1 & i || !r.sortDetached && t.compareDocumentPosition(e) === i ? e === n || v(w, e) ? -1 : t === n || v(w, t) ? 1 : c ? F.call(c, e) - F.call(c, t) : 0 : 4 & i ? -1 : 1 : e.compareDocumentPosition ? -1 : 1;
            } : function (e, t) {
                var r, i = 0, o = e.parentNode, a = t.parentNode, s = [e], l = [t];
                if (e === t)
                    return S = !0, 0;
                if (!o || !a)
                    return e === n ? -1 : t === n ? 1 : o ? -1 : a ? 1 : c ? F.call(c, e) - F.call(c, t) : 0;
                if (o === a)
                    return pt(e, t);
                r = e;
                while (r = r.parentNode)
                    s.unshift(r);
                r = t;
                while (r = r.parentNode)
                    l.unshift(r);
                while (s[i] === l[i])
                    i++;
                return i ? pt(s[i], l[i]) : s[i] === w ? -1 : l[i] === w ? 1 : 0;
            }, n) : f;
        }, at.matches = function (e, t) {
            return at(e, null, null, t);
        }, at.matchesSelector = function (e, t) {
            if ((e.ownerDocument || e) !== f && p(e), t = t.replace(Y, '=\'$1\']'), !(!r.matchesSelector || (!h || (m && m.test(t) || g && g.test(t)))))
                try {
                    var n = y.call(e, t);
                    if (n || (r.disconnectedMatch || e.document && 11 !== e.document.nodeType))
                        return n;
                } catch (i) {
                }
            return at(t, f, null, [e]).length > 0;
        }, at.contains = function (e, t) {
            return (e.ownerDocument || e) !== f && p(e), v(e, t);
        }, at.attr = function (e, n) {
            (e.ownerDocument || e) !== f && p(e);
            var i = o.attrHandle[n.toLowerCase()], a = i && L.call(o.attrHandle, n.toLowerCase()) ? i(e, n, !h) : t;
            return a === t ? r.attributes || !h ? e.getAttribute(n) : (a = e.getAttributeNode(n)) && a.specified ? a.value : null : a;
        }, at.error = function (e) {
            throw Error('Syntax error, unrecognized expression: ' + e);
        }, at.uniqueSort = function (e) {
            var t, n = [], i = 0, o = 0;
            if (S = !r.detectDuplicates, c = !r.sortStable && e.slice(0), e.sort(A), S) {
                while (t = e[o++])
                    t === e[o] && (i = n.push(o));
                while (i--)
                    e.splice(n[i], 1);
            }
            return e;
        }, a = at.getText = function (e) {
            var t, n = '', r = 0, i = e.nodeType;
            if (i)
                if (1 === i || (9 === i || 11 === i)) {
                    if ('string' == typeof e.textContent)
                        return e.textContent;
                    for (e = e.firstChild; e; e = e.nextSibling)
                        n += a(e);
                } else {
                    if (3 === i || 4 === i)
                        return e.nodeValue;
                }
            else
                for (; t = e[r]; r++)
                    n += a(t);
            return n;
        }, o = at.selectors = {
            cacheLength: 50,
            createPseudo: lt,
            match: Q,
            attrHandle: {},
            find: {},
            relative: {
                '>': {
                    dir: 'parentNode',
                    first: !0
                },
                ' ': { dir: 'parentNode' },
                '+': {
                    dir: 'previousSibling',
                    first: !0
                },
                '~': { dir: 'previousSibling' }
            },
            preFilter: {
                ATTR: function (e) {
                    return e[1] = e[1].replace(rt, it), e[3] = (e[4] || (e[5] || '')).replace(rt, it), '~=' === e[2] && (e[3] = ' ' + e[3] + ' '), e.slice(0, 4);
                },
                CHILD: function (e) {
                    return e[1] = e[1].toLowerCase(), 'nth' === e[1].slice(0, 3) ? (e[3] || at.error(e[0]), e[4] = +(e[4] ? e[5] + (e[6] || 1) : 2 * ('even' === e[3] || 'odd' === e[3])), e[5] = +(e[7] + e[8] || 'odd' === e[3])) : e[3] && at.error(e[0]), e;
                },
                PSEUDO: function (e) {
                    var n, r = !e[5] && e[2];
                    return Q.CHILD.test(e[0]) ? null : (e[3] && e[4] !== t ? e[2] = e[4] : r && (J.test(r) && ((n = mt(r, !0)) && ((n = r.indexOf(')', r.length - n) - r.length) && (e[0] = e[0].slice(0, n), e[2] = r.slice(0, n))))), e.slice(0, 3));
                }
            },
            filter: {
                TAG: function (e) {
                    var t = e.replace(rt, it).toLowerCase();
                    return '*' === e ? function () {
                        return !0;
                    } : function (e) {
                        return e.nodeName && e.nodeName.toLowerCase() === t;
                    };
                },
                CLASS: function (e) {
                    var t = N[e + ' '];
                    return t || (t = RegExp('(^|' + P + ')' + e + '(' + P + '|$)')) && N(e, function (e) {
                        return t.test('string' == typeof e.className && e.className || (typeof e.getAttribute !== j && e.getAttribute('class') || ''));
                    });
                },
                ATTR: function (e, t, n) {
                    return function (r) {
                        var i = at.attr(r, e);
                        return null == i ? '!=' === t : t ? (i += '', '=' === t ? i === n : '!=' === t ? i !== n : '^=' === t ? n && 0 === i.indexOf(n) : '*=' === t ? n && i.indexOf(n) > -1 : '$=' === t ? n && i.slice(-n.length) === n : '~=' === t ? (' ' + i + ' ').indexOf(n) > -1 : '|=' === t ? i === n || i.slice(0, n.length + 1) === n + '-' : !1) : !0;
                    };
                },
                CHILD: function (e, t, n, r, i) {
                    var o = 'nth' !== e.slice(0, 3), a = 'last' !== e.slice(-4), s = 'of-type' === t;
                    return 1 === r && 0 === i ? function (e) {
                        return !!e.parentNode;
                    } : function (t, n, l) {
                        var u, c, p, f, d, h, g = o !== a ? 'nextSibling' : 'previousSibling', m = t.parentNode, y = s && t.nodeName.toLowerCase(), v = !l && !s;
                        if (m) {
                            if (o) {
                                while (g) {
                                    p = t;
                                    while (p = p[g])
                                        if (s ? p.nodeName.toLowerCase() === y : 1 === p.nodeType)
                                            return !1;
                                    h = g = 'only' === e && (!h && 'nextSibling');
                                }
                                return !0;
                            }
                            if (h = [a ? m.firstChild : m.lastChild], a && v) {
                                c = m[b] || (m[b] = {}), u = c[e] || [], d = u[0] === T && u[1], f = u[0] === T && u[2], p = d && m.childNodes[d];
                                while (p = ++d && (p && p[g]) || ((f = d = 0) || h.pop()))
                                    if (1 === p.nodeType && (++f && p === t)) {
                                        c[e] = [
                                            T,
                                            d,
                                            f
                                        ];
                                        break;
                                    }
                            } else if (v && ((u = (t[b] || (t[b] = {}))[e]) && u[0] === T))
                                f = u[1];
                            else
                                while (p = ++d && (p && p[g]) || ((f = d = 0) || h.pop()))
                                    if ((s ? p.nodeName.toLowerCase() === y : 1 === p.nodeType) && (++f && (v && ((p[b] || (p[b] = {}))[e] = [
                                            T,
                                            f
                                        ]), p === t)))
                                        break;
                            return f -= i, f === r || 0 === f % r && f / r >= 0;
                        }
                    };
                },
                PSEUDO: function (e, t) {
                    var n, r = o.pseudos[e] || (o.setFilters[e.toLowerCase()] || at.error('unsupported pseudo: ' + e));
                    return r[b] ? r(t) : r.length > 1 ? (n = [
                        e,
                        e,
                        '',
                        t
                    ], o.setFilters.hasOwnProperty(e.toLowerCase()) ? lt(function (e, n) {
                        var i, o = r(e, t), a = o.length;
                        while (a--)
                            i = F.call(e, o[a]), e[i] = !(n[i] = o[a]);
                    }) : function (e) {
                        return r(e, 0, n);
                    }) : r;
                }
            },
            pseudos: {
                not: lt(function (e) {
                    var t = [], n = [], r = l(e.replace(z, '$1'));
                    return r[b] ? lt(function (e, t, n, i) {
                        var o, a = r(e, null, i, []), s = e.length;
                        while (s--)
                            (o = a[s]) && (e[s] = !(t[s] = o));
                    }) : function (e, i, o) {
                        return t[0] = e, r(t, null, o, n), !n.pop();
                    };
                }),
                has: lt(function (e) {
                    return function (t) {
                        return at(e, t).length > 0;
                    };
                }),
                contains: lt(function (e) {
                    return function (t) {
                        return (t.textContent || (t.innerText || a(t))).indexOf(e) > -1;
                    };
                }),
                lang: lt(function (e) {
                    return G.test(e || '') || at.error('unsupported lang: ' + e), e = e.replace(rt, it).toLowerCase(), function (t) {
                        var n;
                        do
                            if (n = h ? t.lang : t.getAttribute('xml:lang') || t.getAttribute('lang'))
                                return n = n.toLowerCase(), n === e || 0 === n.indexOf(e + '-');
                        while ((t = t.parentNode) && 1 === t.nodeType);
                        return !1;
                    };
                }),
                target: function (t) {
                    var n = e.location && e.location.hash;
                    return n && n.slice(1) === t.id;
                },
                root: function (e) {
                    return e === d;
                },
                focus: function (e) {
                    return e === f.activeElement && ((!f.hasFocus || f.hasFocus()) && !!(e.type || (e.href || ~e.tabIndex)));
                },
                enabled: function (e) {
                    return e.disabled === !1;
                },
                disabled: function (e) {
                    return e.disabled === !0;
                },
                checked: function (e) {
                    var t = e.nodeName.toLowerCase();
                    return 'input' === t && !!e.checked || 'option' === t && !!e.selected;
                },
                selected: function (e) {
                    return e.parentNode && e.parentNode.selectedIndex, e.selected === !0;
                },
                empty: function (e) {
                    for (e = e.firstChild; e; e = e.nextSibling)
                        if (e.nodeName > '@' || (3 === e.nodeType || 4 === e.nodeType))
                            return !1;
                    return !0;
                },
                parent: function (e) {
                    return !o.pseudos.empty(e);
                },
                header: function (e) {
                    return tt.test(e.nodeName);
                },
                input: function (e) {
                    return et.test(e.nodeName);
                },
                button: function (e) {
                    var t = e.nodeName.toLowerCase();
                    return 'input' === t && 'button' === e.type || 'button' === t;
                },
                text: function (e) {
                    var t;
                    return 'input' === e.nodeName.toLowerCase() && ('text' === e.type && (null == (t = e.getAttribute('type')) || t.toLowerCase() === e.type));
                },
                first: ht(function () {
                    return [0];
                }),
                last: ht(function (e, t) {
                    return [t - 1];
                }),
                eq: ht(function (e, t, n) {
                    return [0 > n ? n + t : n];
                }),
                even: ht(function (e, t) {
                    var n = 0;
                    for (; t > n; n += 2)
                        e.push(n);
                    return e;
                }),
                odd: ht(function (e, t) {
                    var n = 1;
                    for (; t > n; n += 2)
                        e.push(n);
                    return e;
                }),
                lt: ht(function (e, t, n) {
                    var r = 0 > n ? n + t : n;
                    for (; --r >= 0;)
                        e.push(r);
                    return e;
                }),
                gt: ht(function (e, t, n) {
                    var r = 0 > n ? n + t : n;
                    for (; t > ++r;)
                        e.push(r);
                    return e;
                })
            }
        }, o.pseudos.nth = o.pseudos.eq;
        for (n in {
                radio: !0,
                checkbox: !0,
                file: !0,
                password: !0,
                image: !0
            })
            o.pseudos[n] = ft(n);
        for (n in {
                submit: !0,
                reset: !0
            })
            o.pseudos[n] = dt(n);
        function gt() {
        }
        gt.prototype = o.filters = o.pseudos, o.setFilters = new gt();
        function mt(e, t) {
            var n, r, i, a, s, l, u, c = k[e + ' '];
            if (c)
                return t ? 0 : c.slice(0);
            s = e, l = [], u = o.preFilter;
            while (s) {
                (!n || (r = X.exec(s))) && (r && (s = s.slice(r[0].length) || s), l.push(i = [])), n = !1, (r = U.exec(s)) && (n = r.shift(), i.push({
                    value: n,
                    type: r[0].replace(z, ' ')
                }), s = s.slice(n.length));
                for (a in o.filter)
                    !(r = Q[a].exec(s)) || (u[a] && !(r = u[a](r)) || (n = r.shift(), i.push({
                        value: n,
                        type: a,
                        matches: r
                    }), s = s.slice(n.length)));
                if (!n)
                    break;
            }
            return t ? s.length : s ? at.error(e) : k(e, l).slice(0);
        }
        function yt(e) {
            var t = 0, n = e.length, r = '';
            for (; n > t; t++)
                r += e[t].value;
            return r;
        }
        function vt(e, t, n) {
            var r = t.dir, o = n && 'parentNode' === r, a = C++;
            return t.first ? function (t, n, i) {
                while (t = t[r])
                    if (1 === t.nodeType || o)
                        return e(t, n, i);
            } : function (t, n, s) {
                var l, u, c, p = T + ' ' + a;
                if (s)
                    while (t = t[r]) {
                        if ((1 === t.nodeType || o) && e(t, n, s))
                            return !0;
                    }
                else
                    while (t = t[r])
                        if (1 === t.nodeType || o)
                            if (c = t[b] || (t[b] = {}), (u = c[r]) && u[0] === p) {
                                if ((l = u[1]) === !0 || l === i)
                                    return l === !0;
                            } else if (u = c[r] = [p], u[1] = e(t, n, s) || i, u[1] === !0)
                                return !0;
            };
        }
        function bt(e) {
            return e.length > 1 ? function (t, n, r) {
                var i = e.length;
                while (i--)
                    if (!e[i](t, n, r))
                        return !1;
                return !0;
            } : e[0];
        }
        function xt(e, t, n, r, i) {
            var o, a = [], s = 0, l = e.length, u = null != t;
            for (; l > s; s++)
                (o = e[s]) && ((!n || n(o, r, i)) && (a.push(o), u && t.push(s)));
            return a;
        }
        function wt(e, t, n, r, i, o) {
            return r && (!r[b] && (r = wt(r))), i && (!i[b] && (i = wt(i, o))), lt(function (o, a, s, l) {
                var u, c, p, f = [], d = [], h = a.length, g = o || Nt(t || '*', s.nodeType ? [s] : s, []), m = !e || !o && t ? g : xt(g, f, e, s, l), y = n ? i || (o ? e : h || r) ? [] : a : m;
                if (n && n(m, y, s, l), r) {
                    u = xt(y, d), r(u, [], s, l), c = u.length;
                    while (c--)
                        (p = u[c]) && (y[d[c]] = !(m[d[c]] = p));
                }
                if (o) {
                    if (i || e) {
                        if (i) {
                            u = [], c = y.length;
                            while (c--)
                                (p = y[c]) && u.push(m[c] = p);
                            i(null, y = [], u, l);
                        }
                        c = y.length;
                        while (c--)
                            (p = y[c]) && ((u = i ? F.call(o, p) : f[c]) > -1 && (o[u] = !(a[u] = p)));
                    }
                } else
                    y = xt(y === a ? y.splice(h, y.length) : y), i ? i(null, a, y, l) : M.apply(a, y);
            });
        }
        function Tt(e) {
            var t, n, r, i = e.length, a = o.relative[e[0].type], s = a || o.relative[' '], l = a ? 1 : 0, c = vt(function (e) {
                    return e === t;
                }, s, !0), p = vt(function (e) {
                    return F.call(t, e) > -1;
                }, s, !0), f = [function (e, n, r) {
                        return !a && (r || n !== u) || ((t = n).nodeType ? c(e, n, r) : p(e, n, r));
                    }];
            for (; i > l; l++)
                if (n = o.relative[e[l].type])
                    f = [vt(bt(f), n)];
                else {
                    if (n = o.filter[e[l].type].apply(null, e[l].matches), n[b]) {
                        for (r = ++l; i > r; r++)
                            if (o.relative[e[r].type])
                                break;
                        return wt(l > 1 && bt(f), l > 1 && yt(e.slice(0, l - 1).concat({ value: ' ' === e[l - 2].type ? '*' : '' })).replace(z, '$1'), n, r > l && Tt(e.slice(l, r)), i > r && Tt(e = e.slice(r)), i > r && yt(e));
                    }
                    f.push(n);
                }
            return bt(f);
        }
        function Ct(e, t) {
            var n = 0, r = t.length > 0, a = e.length > 0, s = function (s, l, c, p, d) {
                    var h, g, m, y = [], v = 0, b = '0', x = s && [], w = null != d, C = u, N = s || a && o.find.TAG('*', d && l.parentNode || l), k = T += null == C ? 1 : Math.random() || 0.1;
                    for (w && (u = l !== f && l, i = n); null != (h = N[b]); b++) {
                        if (a && h) {
                            g = 0;
                            while (m = e[g++])
                                if (m(h, l, c)) {
                                    p.push(h);
                                    break;
                                }
                            w && (T = k, i = ++n);
                        }
                        r && ((h = !m && h) && v--, s && x.push(h));
                    }
                    if (v += b, r && b !== v) {
                        g = 0;
                        while (m = t[g++])
                            m(x, y, l, c);
                        if (s) {
                            if (v > 0)
                                while (b--)
                                    x[b] || (y[b] || (y[b] = q.call(p)));
                            y = xt(y);
                        }
                        M.apply(p, y), w && (!s && (y.length > 0 && (v + t.length > 1 && at.uniqueSort(p))));
                    }
                    return w && (T = k, u = C), x;
                };
            return r ? lt(s) : s;
        }
        l = at.compile = function (e, t) {
            var n, r = [], i = [], o = E[e + ' '];
            if (!o) {
                t || (t = mt(e)), n = t.length;
                while (n--)
                    o = Tt(t[n]), o[b] ? r.push(o) : i.push(o);
                o = E(e, Ct(i, r));
            }
            return o;
        };
        function Nt(e, t, n) {
            var r = 0, i = t.length;
            for (; i > r; r++)
                at(e, t[r], n);
            return n;
        }
        function kt(e, t, n, i) {
            var a, s, u, c, p, f = mt(e);
            if (!i && 1 === f.length) {
                if (s = f[0] = f[0].slice(0), s.length > 2 && ('ID' === (u = s[0]).type && (r.getById && (9 === t.nodeType && (h && o.relative[s[1].type]))))) {
                    if (t = (o.find.ID(u.matches[0].replace(rt, it), t) || [])[0], !t)
                        return n;
                    e = e.slice(s.shift().value.length);
                }
                a = Q.needsContext.test(e) ? 0 : s.length;
                while (a--) {
                    if (u = s[a], o.relative[c = u.type])
                        break;
                    if ((p = o.find[c]) && (i = p(u.matches[0].replace(rt, it), V.test(s[0].type) && t.parentNode || t))) {
                        if (s.splice(a, 1), e = i.length && yt(s), !e)
                            return M.apply(n, i), n;
                        break;
                    }
                }
            }
            return l(e, f)(i, t, !h, n, V.test(e)), n;
        }
        r.sortStable = b.split('').sort(A).join('') === b, r.detectDuplicates = S, p(), r.sortDetached = ut(function (e) {
            return 1 & e.compareDocumentPosition(f.createElement('div'));
        }), ut(function (e) {
            return e.innerHTML = '<a href=\'#\'></a>', '#' === e.firstChild.getAttribute('href');
        }) || ct('type|href|height|width', function (e, n, r) {
            return r ? t : e.getAttribute(n, 'type' === n.toLowerCase() ? 1 : 2);
        }), r.attributes && ut(function (e) {
            return e.innerHTML = '<input/>', e.firstChild.setAttribute('value', ''), '' === e.firstChild.getAttribute('value');
        }) || ct('value', function (e, n, r) {
            return r || 'input' !== e.nodeName.toLowerCase() ? t : e.defaultValue;
        }), ut(function (e) {
            return null == e.getAttribute('disabled');
        }) || ct(B, function (e, n, r) {
            var i;
            return r ? t : (i = e.getAttributeNode(n)) && i.specified ? i.value : e[n] === !0 ? n.toLowerCase() : null;
        }), x.find = at, x.expr = at.selectors, x.expr[':'] = x.expr.pseudos, x.unique = at.uniqueSort, x.text = at.getText, x.isXMLDoc = at.isXML, x.contains = at.contains;
    }(e);
    var O = {};
    function F(e) {
        var t = O[e] = {};
        return x.each(e.match(T) || [], function (e, n) {
            t[n] = !0;
        }), t;
    }
    x.Callbacks = function (e) {
        e = 'string' == typeof e ? O[e] || F(e) : x.extend({}, e);
        var n, r, i, o, a, s, l = [], u = !e.once && [], c = function (t) {
                for (r = e.memory && t, i = !0, a = s || 0, s = 0, o = l.length, n = !0; l && o > a; a++)
                    if (l[a].apply(t[0], t[1]) === !1 && e.stopOnFalse) {
                        r = !1;
                        break;
                    }
                n = !1, l && (u ? u.length && c(u.shift()) : r ? l = [] : p.disable());
            }, p = {
                add: function () {
                    if (l) {
                        var t = l.length;
                        (function i(t) {
                            x.each(t, function (t, n) {
                                var r = x.type(n);
                                'function' === r ? e.unique && p.has(n) || l.push(n) : n && (n.length && ('string' !== r && i(n)));
                            });
                        }(arguments), n ? o = l.length : r && (s = t, c(r)));
                    }
                    return this;
                },
                remove: function () {
                    return l && x.each(arguments, function (e, t) {
                        var r;
                        while ((r = x.inArray(t, l, r)) > -1)
                            l.splice(r, 1), n && (o >= r && o--, a >= r && a--);
                    }), this;
                },
                has: function (e) {
                    return e ? x.inArray(e, l) > -1 : !(!l || !l.length);
                },
                empty: function () {
                    return l = [], o = 0, this;
                },
                disable: function () {
                    return l = u = r = t, this;
                },
                disabled: function () {
                    return !l;
                },
                lock: function () {
                    return u = t, r || p.disable(), this;
                },
                locked: function () {
                    return !u;
                },
                fireWith: function (e, t) {
                    return !l || (i && !u || (t = t || [], t = [
                        e,
                        t.slice ? t.slice() : t
                    ], n ? u.push(t) : c(t))), this;
                },
                fire: function () {
                    return p.fireWith(this, arguments), this;
                },
                fired: function () {
                    return !!i;
                }
            };
        return p;
    }, x.extend({
        Deferred: function (e) {
            var t = [
                    [
                        'resolve',
                        'done',
                        x.Callbacks('once memory'),
                        'resolved'
                    ],
                    [
                        'reject',
                        'fail',
                        x.Callbacks('once memory'),
                        'rejected'
                    ],
                    [
                        'notify',
                        'progress',
                        x.Callbacks('memory')
                    ]
                ], n = 'pending', r = {
                    state: function () {
                        return n;
                    },
                    always: function () {
                        return i.done(arguments).fail(arguments), this;
                    },
                    then: function () {
                        var e = arguments;
                        return x.Deferred(function (n) {
                            x.each(t, function (t, o) {
                                var a = o[0], s = x.isFunction(e[t]) && e[t];
                                i[o[1]](function () {
                                    var e = s && s.apply(this, arguments);
                                    e && x.isFunction(e.promise) ? e.promise().done(n.resolve).fail(n.reject).progress(n.notify) : n[a + 'With'](this === r ? n.promise() : this, s ? [e] : arguments);
                                });
                            }), e = null;
                        }).promise();
                    },
                    promise: function (e) {
                        return null != e ? x.extend(e, r) : r;
                    }
                }, i = {};
            return r.pipe = r.then, x.each(t, function (e, o) {
                var a = o[2], s = o[3];
                r[o[1]] = a.add, s && a.add(function () {
                    n = s;
                }, t[1 ^ e][2].disable, t[2][2].lock), i[o[0]] = function () {
                    return i[o[0] + 'With'](this === i ? r : this, arguments), this;
                }, i[o[0] + 'With'] = a.fireWith;
            }), r.promise(i), e && e.call(i, i), i;
        },
        when: function (e) {
            var t = 0, n = g.call(arguments), r = n.length, i = 1 !== r || e && x.isFunction(e.promise) ? r : 0, o = 1 === i ? e : x.Deferred(), a = function (e, t, n) {
                    return function (r) {
                        t[e] = this, n[e] = arguments.length > 1 ? g.call(arguments) : r, n === s ? o.notifyWith(t, n) : --i || o.resolveWith(t, n);
                    };
                }, s, l, u;
            if (r > 1)
                for (s = Array(r), l = Array(r), u = Array(r); r > t; t++)
                    n[t] && x.isFunction(n[t].promise) ? n[t].promise().done(a(t, u, n)).fail(o.reject).progress(a(t, l, s)) : --i;
            return i || o.resolveWith(u, n), o.promise();
        }
    }), x.support = function (t) {
        var n, r, o, s, l, u, c, p, f, d = a.createElement('div');
        if (d.setAttribute('className', 't'), d.innerHTML = '  <link/><table></table><a href=\'/a\'>a</a><input type=\'checkbox\'/>', n = d.getElementsByTagName('*') || [], r = d.getElementsByTagName('a')[0], !r || (!r.style || !n.length))
            return t;
        s = a.createElement('select'), u = s.appendChild(a.createElement('option')), o = d.getElementsByTagName('input')[0], r.style.cssText = 'top:1px;float:left;opacity:.5', t.getSetAttribute = 't' !== d.className, t.leadingWhitespace = 3 === d.firstChild.nodeType, t.tbody = !d.getElementsByTagName('tbody').length, t.htmlSerialize = !!d.getElementsByTagName('link').length, t.style = /top/.test(r.getAttribute('style')), t.hrefNormalized = '/a' === r.getAttribute('href'), t.opacity = /^0.5/.test(r.style.opacity), t.cssFloat = !!r.style.cssFloat, t.checkOn = !!o.value, t.optSelected = u.selected, t.enctype = !!a.createElement('form').enctype, t.html5Clone = '<:nav></:nav>' !== a.createElement('nav').cloneNode(!0).outerHTML, t.inlineBlockNeedsLayout = !1, t.shrinkWrapBlocks = !1, t.pixelPosition = !1, t.deleteExpando = !0, t.noCloneEvent = !0, t.reliableMarginRight = !0, t.boxSizingReliable = !0, o.checked = !0, t.noCloneChecked = o.cloneNode(!0).checked, s.disabled = !0, t.optDisabled = !u.disabled;
        try {
            delete d.test;
        } catch (h) {
            t.deleteExpando = !1;
        }
        o = a.createElement('input'), o.setAttribute('value', ''), t.input = '' === o.getAttribute('value'), o.value = 't', o.setAttribute('type', 'radio'), t.radioValue = 't' === o.value, o.setAttribute('checked', 't'), o.setAttribute('name', 't'), l = a.createDocumentFragment(), l.appendChild(o), t.appendChecked = o.checked, t.checkClone = l.cloneNode(!0).cloneNode(!0).lastChild.checked, d.attachEvent && (d.attachEvent('onclick', function () {
            t.noCloneEvent = !1;
        }), d.cloneNode(!0).click());
        for (f in {
                submit: !0,
                change: !0,
                focusin: !0
            })
            d.setAttribute(c = 'on' + f, 't'), t[f + 'Bubbles'] = c in e || d.attributes[c].expando === !1;
        d.style.backgroundClip = 'content-box', d.cloneNode(!0).style.backgroundClip = '', t.clearCloneStyle = 'content-box' === d.style.backgroundClip;
        for (f in x(t))
            break;
        return t.ownLast = '0' !== f, x(function () {
            var n, r, o, s = 'padding:0;margin:0;border:0;display:block;box-sizing:content-box;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;', l = a.getElementsByTagName('body')[0];
            l && (n = a.createElement('div'), n.style.cssText = 'border:0;width:0;height:0;position:absolute;top:0;left:-9999px;margin-top:1px', l.appendChild(n).appendChild(d), d.innerHTML = '<table><tr><td></td><td>t</td></tr></table>', o = d.getElementsByTagName('td'), o[0].style.cssText = 'padding:0;margin:0;border:0;display:none', p = 0 === o[0].offsetHeight, o[0].style.display = '', o[1].style.display = 'none', t.reliableHiddenOffsets = p && 0 === o[0].offsetHeight, d.innerHTML = '', d.style.cssText = 'box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;position:absolute;top:1%;', x.swap(l, null != l.style.zoom ? { zoom: 1 } : {}, function () {
                t.boxSizing = 4 === d.offsetWidth;
            }), e.getComputedStyle && (t.pixelPosition = '1%' !== (e.getComputedStyle(d, null) || {}).top, t.boxSizingReliable = '4px' === (e.getComputedStyle(d, null) || { width: '4px' }).width, r = d.appendChild(a.createElement('div')), r.style.cssText = d.style.cssText = s, r.style.marginRight = r.style.width = '0', d.style.width = '1px', t.reliableMarginRight = !parseFloat((e.getComputedStyle(r, null) || {}).marginRight)), typeof d.style.zoom !== i && (d.innerHTML = '', d.style.cssText = s + 'width:1px;padding:1px;display:inline;zoom:1', t.inlineBlockNeedsLayout = 3 === d.offsetWidth, d.style.display = 'block', d.innerHTML = '<div></div>', d.firstChild.style.width = '5px', t.shrinkWrapBlocks = 3 !== d.offsetWidth, t.inlineBlockNeedsLayout && (l.style.zoom = 1)), l.removeChild(n), n = d = o = r = null);
        }), n = s = l = u = r = o = null, t;
    }({});
    var B = /(?:\{[\s\S]*\}|\[[\s\S]*\])$/, P = /([A-Z])/g;
    function R(e, n, r, i) {
        if (x.acceptData(e)) {
            var o, a, s = x.expando, l = e.nodeType, u = l ? x.cache : e, c = l ? e[s] : e[s] && s;
            if (c && (u[c] && (i || u[c].data)) || (r !== t || 'string' != typeof n))
                return c || (c = l ? e[s] = p.pop() || x.guid++ : s), u[c] || (u[c] = l ? {} : { toJSON: x.noop }), ('object' == typeof n || 'function' == typeof n) && (i ? u[c] = x.extend(u[c], n) : u[c].data = x.extend(u[c].data, n)), a = u[c], i || (a.data || (a.data = {}), a = a.data), r !== t && (a[x.camelCase(n)] = r), 'string' == typeof n ? (o = a[n], null == o && (o = a[x.camelCase(n)])) : o = a, o;
        }
    }
    function W(e, t, n) {
        if (x.acceptData(e)) {
            var r, i, o = e.nodeType, a = o ? x.cache : e, s = o ? e[x.expando] : x.expando;
            if (a[s]) {
                if (t && (r = n ? a[s] : a[s].data)) {
                    x.isArray(t) ? t = t.concat(x.map(t, x.camelCase)) : t in r ? t = [t] : (t = x.camelCase(t), t = t in r ? [t] : t.split(' ')), i = t.length;
                    while (i--)
                        delete r[t[i]];
                    if (n ? !I(r) : !x.isEmptyObject(r))
                        return;
                }
                (n || (delete a[s].data, I(a[s]))) && (o ? x.cleanData([e], !0) : x.support.deleteExpando || a != a.window ? delete a[s] : a[s] = null);
            }
        }
    }
    x.extend({
        cache: {},
        noData: {
            applet: !0,
            embed: !0,
            object: 'clsid:D27CDB6E-AE6D-11cf-96B8-444553540000'
        },
        hasData: function (e) {
            return e = e.nodeType ? x.cache[e[x.expando]] : e[x.expando], !!e && !I(e);
        },
        data: function (e, t, n) {
            return R(e, t, n);
        },
        removeData: function (e, t) {
            return W(e, t);
        },
        _data: function (e, t, n) {
            return R(e, t, n, !0);
        },
        _removeData: function (e, t) {
            return W(e, t, !0);
        },
        acceptData: function (e) {
            if (e.nodeType && (1 !== e.nodeType && 9 !== e.nodeType))
                return !1;
            var t = e.nodeName && x.noData[e.nodeName.toLowerCase()];
            return !t || t !== !0 && e.getAttribute('classid') === t;
        }
    }), x.fn.extend({
        data: function (e, n) {
            var r, i, o = null, a = 0, s = this[0];
            if (e === t) {
                if (this.length && (o = x.data(s), 1 === s.nodeType && !x._data(s, 'parsedAttrs'))) {
                    for (r = s.attributes; r.length > a; a++)
                        i = r[a].name, 0 === i.indexOf('data-') && (i = x.camelCase(i.slice(5)), $(s, i, o[i]));
                    x._data(s, 'parsedAttrs', !0);
                }
                return o;
            }
            return 'object' == typeof e ? this.each(function () {
                x.data(this, e);
            }) : arguments.length > 1 ? this.each(function () {
                x.data(this, e, n);
            }) : s ? $(s, e, x.data(s, e)) : null;
        },
        removeData: function (e) {
            return this.each(function () {
                x.removeData(this, e);
            });
        }
    });
    function $(e, n, r) {
        if (r === t && 1 === e.nodeType) {
            var i = 'data-' + n.replace(P, '-$1').toLowerCase();
            if (r = e.getAttribute(i), 'string' == typeof r) {
                try {
                    r = 'true' === r ? !0 : 'false' === r ? !1 : 'null' === r ? null : +r + '' === r ? +r : B.test(r) ? x.parseJSON(r) : r;
                } catch (o) {
                }
                x.data(e, n, r);
            } else
                r = t;
        }
        return r;
    }
    function I(e) {
        var t;
        for (t in e)
            if (('data' !== t || !x.isEmptyObject(e[t])) && 'toJSON' !== t)
                return !1;
        return !0;
    }
    x.extend({
        queue: function (e, n, r) {
            var i;
            return e ? (n = (n || 'fx') + 'queue', i = x._data(e, n), r && (!i || x.isArray(r) ? i = x._data(e, n, x.makeArray(r)) : i.push(r)), i || []) : t;
        },
        dequeue: function (e, t) {
            t = t || 'fx';
            var n = x.queue(e, t), r = n.length, i = n.shift(), o = x._queueHooks(e, t), a = function () {
                    x.dequeue(e, t);
                };
            'inprogress' === i && (i = n.shift(), r--), i && ('fx' === t && n.unshift('inprogress'), delete o.stop, i.call(e, a, o)), !r && (o && o.empty.fire());
        },
        _queueHooks: function (e, t) {
            var n = t + 'queueHooks';
            return x._data(e, n) || x._data(e, n, {
                empty: x.Callbacks('once memory').add(function () {
                    x._removeData(e, t + 'queue'), x._removeData(e, n);
                })
            });
        }
    }), x.fn.extend({
        queue: function (e, n) {
            var r = 2;
            return 'string' != typeof e && (n = e, e = 'fx', r--), r > arguments.length ? x.queue(this[0], e) : n === t ? this : this.each(function () {
                var t = x.queue(this, e, n);
                x._queueHooks(this, e), 'fx' === e && ('inprogress' !== t[0] && x.dequeue(this, e));
            });
        },
        dequeue: function (e) {
            return this.each(function () {
                x.dequeue(this, e);
            });
        },
        delay: function (e, t) {
            return e = x.fx ? x.fx.speeds[e] || e : e, t = t || 'fx', this.queue(t, function (t, n) {
                var r = setTimeout(t, e);
                n.stop = function () {
                    clearTimeout(r);
                };
            });
        },
        clearQueue: function (e) {
            return this.queue(e || 'fx', []);
        },
        promise: function (e, n) {
            var r, i = 1, o = x.Deferred(), a = this, s = this.length, l = function () {
                    --i || o.resolveWith(a, [a]);
                };
            'string' != typeof e && (n = e, e = t), e = e || 'fx';
            while (s--)
                r = x._data(a[s], e + 'queueHooks'), r && (r.empty && (i++, r.empty.add(l)));
            return l(), o.promise(n);
        }
    });
    var z, X, U = /[\t\r\n\f]/g, V = /\r/g, Y = /^(?:input|select|textarea|button|object)$/i, J = /^(?:a|area)$/i, G = /^(?:checked|selected)$/i, Q = x.support.getSetAttribute, K = x.support.input;
    x.fn.extend({
        attr: function (e, t) {
            return x.access(this, x.attr, e, t, arguments.length > 1);
        },
        removeAttr: function (e) {
            return this.each(function () {
                x.removeAttr(this, e);
            });
        },
        prop: function (e, t) {
            return x.access(this, x.prop, e, t, arguments.length > 1);
        },
        removeProp: function (e) {
            return e = x.propFix[e] || e, this.each(function () {
                try {
                    this[e] = t, delete this[e];
                } catch (n) {
                }
            });
        },
        addClass: function (e) {
            var t, n, r, i, o, a = 0, s = this.length, l = 'string' == typeof e && e;
            if (x.isFunction(e))
                return this.each(function (t) {
                    x(this).addClass(e.call(this, t, this.className));
                });
            if (l)
                for (t = (e || '').match(T) || []; s > a; a++)
                    if (n = this[a], r = 1 === n.nodeType && (n.className ? (' ' + n.className + ' ').replace(U, ' ') : ' ')) {
                        o = 0;
                        while (i = t[o++])
                            0 > r.indexOf(' ' + i + ' ') && (r += i + ' ');
                        n.className = x.trim(r);
                    }
            return this;
        },
        removeClass: function (e) {
            var t, n, r, i, o, a = 0, s = this.length, l = 0 === arguments.length || 'string' == typeof e && e;
            if (x.isFunction(e))
                return this.each(function (t) {
                    x(this).removeClass(e.call(this, t, this.className));
                });
            if (l)
                for (t = (e || '').match(T) || []; s > a; a++)
                    if (n = this[a], r = 1 === n.nodeType && (n.className ? (' ' + n.className + ' ').replace(U, ' ') : '')) {
                        o = 0;
                        while (i = t[o++])
                            while (r.indexOf(' ' + i + ' ') >= 0)
                                r = r.replace(' ' + i + ' ', ' ');
                        n.className = e ? x.trim(r) : '';
                    }
            return this;
        },
        toggleClass: function (e, t) {
            var n = typeof e;
            return 'boolean' == typeof t && 'string' === n ? t ? this.addClass(e) : this.removeClass(e) : x.isFunction(e) ? this.each(function (n) {
                x(this).toggleClass(e.call(this, n, this.className, t), t);
            }) : this.each(function () {
                if ('string' === n) {
                    var t, r = 0, o = x(this), a = e.match(T) || [];
                    while (t = a[r++])
                        o.hasClass(t) ? o.removeClass(t) : o.addClass(t);
                } else
                    (n === i || 'boolean' === n) && (this.className && x._data(this, '__className__', this.className), this.className = this.className || e === !1 ? '' : x._data(this, '__className__') || '');
            });
        },
        hasClass: function (e) {
            var t = ' ' + e + ' ', n = 0, r = this.length;
            for (; r > n; n++)
                if (1 === this[n].nodeType && (' ' + this[n].className + ' ').replace(U, ' ').indexOf(t) >= 0)
                    return !0;
            return !1;
        },
        val: function (e) {
            var n, r, i, o = this[0];
            if (arguments.length)
                return i = x.isFunction(e), this.each(function (n) {
                    var o;
                    1 === this.nodeType && (o = i ? e.call(this, n, x(this).val()) : e, null == o ? o = '' : 'number' == typeof o ? o += '' : x.isArray(o) && (o = x.map(o, function (e) {
                        return null == e ? '' : e + '';
                    })), r = x.valHooks[this.type] || x.valHooks[this.nodeName.toLowerCase()], r && ('set' in r && r.set(this, o, 'value') !== t) || (this.value = o));
                });
            if (o)
                return r = x.valHooks[o.type] || x.valHooks[o.nodeName.toLowerCase()], r && ('get' in r && (n = r.get(o, 'value')) !== t) ? n : (n = o.value, 'string' == typeof n ? n.replace(V, '') : null == n ? '' : n);
        }
    }), x.extend({
        valHooks: {
            option: {
                get: function (e) {
                    var t = x.find.attr(e, 'value');
                    return null != t ? t : e.text;
                }
            },
            select: {
                get: function (e) {
                    var t, n, r = e.options, i = e.selectedIndex, o = 'select-one' === e.type || 0 > i, a = o ? null : [], s = o ? i + 1 : r.length, l = 0 > i ? s : o ? i : 0;
                    for (; s > l; l++)
                        if (n = r[l], !(!n.selected && l !== i || ((x.support.optDisabled ? n.disabled : null !== n.getAttribute('disabled')) || n.parentNode.disabled && x.nodeName(n.parentNode, 'optgroup')))) {
                            if (t = x(n).val(), o)
                                return t;
                            a.push(t);
                        }
                    return a;
                },
                set: function (e, t) {
                    var n, r, i = e.options, o = x.makeArray(t), a = i.length;
                    while (a--)
                        r = i[a], (r.selected = x.inArray(x(r).val(), o) >= 0) && (n = !0);
                    return n || (e.selectedIndex = -1), o;
                }
            }
        },
        attr: function (e, n, r) {
            var o, a, s = e.nodeType;
            if (e && (3 !== s && (8 !== s && 2 !== s)))
                return typeof e.getAttribute === i ? x.prop(e, n, r) : (1 === s && x.isXMLDoc(e) || (n = n.toLowerCase(), o = x.attrHooks[n] || (x.expr.match.bool.test(n) ? X : z)), r === t ? o && ('get' in o && null !== (a = o.get(e, n))) ? a : (a = x.find.attr(e, n), null == a ? t : a) : null !== r ? o && ('set' in o && (a = o.set(e, r, n)) !== t) ? a : (e.setAttribute(n, r + ''), r) : (x.removeAttr(e, n), t));
        },
        removeAttr: function (e, t) {
            var n, r, i = 0, o = t && t.match(T);
            if (o && 1 === e.nodeType)
                while (n = o[i++])
                    r = x.propFix[n] || n, x.expr.match.bool.test(n) ? K && Q || !G.test(n) ? e[r] = !1 : e[x.camelCase('default-' + n)] = e[r] = !1 : x.attr(e, n, ''), e.removeAttribute(Q ? n : r);
        },
        attrHooks: {
            type: {
                set: function (e, t) {
                    if (!x.support.radioValue && ('radio' === t && x.nodeName(e, 'input'))) {
                        var n = e.value;
                        return e.setAttribute('type', t), n && (e.value = n), t;
                    }
                }
            }
        },
        propFix: {
            'for': 'htmlFor',
            'class': 'className'
        },
        prop: function (e, n, r) {
            var i, o, a, s = e.nodeType;
            if (e && (3 !== s && (8 !== s && 2 !== s)))
                return a = 1 !== s || !x.isXMLDoc(e), a && (n = x.propFix[n] || n, o = x.propHooks[n]), r !== t ? o && ('set' in o && (i = o.set(e, r, n)) !== t) ? i : e[n] = r : o && ('get' in o && null !== (i = o.get(e, n))) ? i : e[n];
        },
        propHooks: {
            tabIndex: {
                get: function (e) {
                    var t = x.find.attr(e, 'tabindex');
                    return t ? parseInt(t, 10) : Y.test(e.nodeName) || J.test(e.nodeName) && e.href ? 0 : -1;
                }
            }
        }
    }), X = {
        set: function (e, t, n) {
            return t === !1 ? x.removeAttr(e, n) : K && Q || !G.test(n) ? e.setAttribute(!Q && x.propFix[n] || n, n) : e[x.camelCase('default-' + n)] = e[n] = !0, n;
        }
    }, x.each(x.expr.match.bool.source.match(/\w+/g), function (e, n) {
        var r = x.expr.attrHandle[n] || x.find.attr;
        x.expr.attrHandle[n] = K && Q || !G.test(n) ? function (e, n, i) {
            var o = x.expr.attrHandle[n], a = i ? t : (x.expr.attrHandle[n] = t) != r(e, n, i) ? n.toLowerCase() : null;
            return x.expr.attrHandle[n] = o, a;
        } : function (e, n, r) {
            return r ? t : e[x.camelCase('default-' + n)] ? n.toLowerCase() : null;
        };
    }), K && Q || (x.attrHooks.value = {
        set: function (e, n, r) {
            return x.nodeName(e, 'input') ? (e.defaultValue = n, t) : z && z.set(e, n, r);
        }
    }), Q || (z = {
        set: function (e, n, r) {
            var i = e.getAttributeNode(r);
            return i || e.setAttributeNode(i = e.ownerDocument.createAttribute(r)), i.value = n += '', 'value' === r || n === e.getAttribute(r) ? n : t;
        }
    }, x.expr.attrHandle.id = x.expr.attrHandle.name = x.expr.attrHandle.coords = function (e, n, r) {
        var i;
        return r ? t : (i = e.getAttributeNode(n)) && '' !== i.value ? i.value : null;
    }, x.valHooks.button = {
        get: function (e, n) {
            var r = e.getAttributeNode(n);
            return r && r.specified ? r.value : t;
        },
        set: z.set
    }, x.attrHooks.contenteditable = {
        set: function (e, t, n) {
            z.set(e, '' === t ? !1 : t, n);
        }
    }, x.each([
        'width',
        'height'
    ], function (e, n) {
        x.attrHooks[n] = {
            set: function (e, r) {
                return '' === r ? (e.setAttribute(n, 'auto'), r) : t;
            }
        };
    })), x.support.hrefNormalized || x.each([
        'href',
        'src'
    ], function (e, t) {
        x.propHooks[t] = {
            get: function (e) {
                return e.getAttribute(t, 4);
            }
        };
    }), x.support.style || (x.attrHooks.style = {
        get: function (e) {
            return e.style.cssText || t;
        },
        set: function (e, t) {
            return e.style.cssText = t + '';
        }
    }), x.support.optSelected || (x.propHooks.selected = {
        get: function (e) {
            var t = e.parentNode;
            return t && (t.selectedIndex, t.parentNode && t.parentNode.selectedIndex), null;
        }
    }), x.each([
        'tabIndex',
        'readOnly',
        'maxLength',
        'cellSpacing',
        'cellPadding',
        'rowSpan',
        'colSpan',
        'useMap',
        'frameBorder',
        'contentEditable'
    ], function () {
        x.propFix[this.toLowerCase()] = this;
    }), x.support.enctype || (x.propFix.enctype = 'encoding'), x.each([
        'radio',
        'checkbox'
    ], function () {
        x.valHooks[this] = {
            set: function (e, n) {
                return x.isArray(n) ? e.checked = x.inArray(x(e).val(), n) >= 0 : t;
            }
        }, x.support.checkOn || (x.valHooks[this].get = function (e) {
            return null === e.getAttribute('value') ? 'on' : e.value;
        });
    });
    var Z = /^(?:input|select|textarea)$/i, et = /^key/, tt = /^(?:mouse|contextmenu)|click/, nt = /^(?:focusinfocus|focusoutblur)$/, rt = /^([^.]*)(?:\.(.+)|)$/;
    function it() {
        return !0;
    }
    function ot() {
        return !1;
    }
    function at() {
        try {
            return a.activeElement;
        } catch (e) {
        }
    }
    x.event = {
        global: {},
        add: function (e, n, r, o, a) {
            var s, l, u, c, p, f, d, h, g, m, y, v = x._data(e);
            if (v) {
                r.handler && (c = r, r = c.handler, a = c.selector), r.guid || (r.guid = x.guid++), (l = v.events) || (l = v.events = {}), (f = v.handle) || (f = v.handle = function (e) {
                    return typeof x === i || e && x.event.triggered === e.type ? t : x.event.dispatch.apply(f.elem, arguments);
                }, f.elem = e), n = (n || '').match(T) || [''], u = n.length;
                while (u--)
                    s = rt.exec(n[u]) || [], g = y = s[1], m = (s[2] || '').split('.').sort(), g && (p = x.event.special[g] || {}, g = (a ? p.delegateType : p.bindType) || g, p = x.event.special[g] || {}, d = x.extend({
                        type: g,
                        origType: y,
                        data: o,
                        handler: r,
                        guid: r.guid,
                        selector: a,
                        needsContext: a && x.expr.match.needsContext.test(a),
                        namespace: m.join('.')
                    }, c), (h = l[g]) || (h = l[g] = [], h.delegateCount = 0, p.setup && p.setup.call(e, o, m, f) !== !1 || (e.addEventListener ? e.addEventListener(g, f, !1) : e.attachEvent && e.attachEvent('on' + g, f))), p.add && (p.add.call(e, d), d.handler.guid || (d.handler.guid = r.guid)), a ? h.splice(h.delegateCount++, 0, d) : h.push(d), x.event.global[g] = !0);
                e = null;
            }
        },
        remove: function (e, t, n, r, i) {
            var o, a, s, l, u, c, p, f, d, h, g, m = x.hasData(e) && x._data(e);
            if (m && (c = m.events)) {
                t = (t || '').match(T) || [''], u = t.length;
                while (u--)
                    if (s = rt.exec(t[u]) || [], d = g = s[1], h = (s[2] || '').split('.').sort(), d) {
                        p = x.event.special[d] || {}, d = (r ? p.delegateType : p.bindType) || d, f = c[d] || [], s = s[2] && RegExp('(^|\\.)' + h.join('\\.(?:.*\\.|)') + '(\\.|$)'), l = o = f.length;
                        while (o--)
                            a = f[o], !i && g !== a.origType || (n && n.guid !== a.guid || (s && !s.test(a.namespace) || (r && (r !== a.selector && ('**' !== r || !a.selector)) || (f.splice(o, 1), a.selector && f.delegateCount--, p.remove && p.remove.call(e, a)))));
                        l && (!f.length && (p.teardown && p.teardown.call(e, h, m.handle) !== !1 || x.removeEvent(e, d, m.handle), delete c[d]));
                    } else
                        for (d in c)
                            x.event.remove(e, d + t[u], n, r, !0);
                x.isEmptyObject(c) && (delete m.handle, x._removeData(e, 'events'));
            }
        },
        trigger: function (n, r, i, o) {
            var s, l, u, c, p, f, d, h = [i || a], g = v.call(n, 'type') ? n.type : n, m = v.call(n, 'namespace') ? n.namespace.split('.') : [];
            if (u = f = i = i || a, 3 !== i.nodeType && (8 !== i.nodeType && (!nt.test(g + x.event.triggered) && (g.indexOf('.') >= 0 && (m = g.split('.'), g = m.shift(), m.sort()), l = 0 > g.indexOf(':') && 'on' + g, n = n[x.expando] ? n : new x.Event(g, 'object' == typeof n && n), n.isTrigger = o ? 2 : 3, n.namespace = m.join('.'), n.namespace_re = n.namespace ? RegExp('(^|\\.)' + m.join('\\.(?:.*\\.|)') + '(\\.|$)') : null, n.result = t, n.target || (n.target = i), r = null == r ? [n] : x.makeArray(r, [n]), p = x.event.special[g] || {}, o || (!p.trigger || p.trigger.apply(i, r) !== !1))))) {
                if (!o && (!p.noBubble && !x.isWindow(i))) {
                    for (c = p.delegateType || g, nt.test(c + g) || (u = u.parentNode); u; u = u.parentNode)
                        h.push(u), f = u;
                    f === (i.ownerDocument || a) && h.push(f.defaultView || (f.parentWindow || e));
                }
                d = 0;
                while ((u = h[d++]) && !n.isPropagationStopped())
                    n.type = d > 1 ? c : p.bindType || g, s = (x._data(u, 'events') || {})[n.type] && x._data(u, 'handle'), s && s.apply(u, r), s = l && u[l], s && (x.acceptData(u) && (s.apply && (s.apply(u, r) === !1 && n.preventDefault())));
                if (n.type = g, !o && (!n.isDefaultPrevented() && ((!p._default || p._default.apply(h.pop(), r) === !1) && (x.acceptData(i) && (l && (i[g] && !x.isWindow(i))))))) {
                    f = i[l], f && (i[l] = null), x.event.triggered = g;
                    try {
                        i[g]();
                    } catch (y) {
                    }
                    x.event.triggered = t, f && (i[l] = f);
                }
                return n.result;
            }
        },
        dispatch: function (e) {
            e = x.event.fix(e);
            var n, r, i, o, a, s = [], l = g.call(arguments), u = (x._data(this, 'events') || {})[e.type] || [], c = x.event.special[e.type] || {};
            if (l[0] = e, e.delegateTarget = this, !c.preDispatch || c.preDispatch.call(this, e) !== !1) {
                s = x.event.handlers.call(this, e, u), n = 0;
                while ((o = s[n++]) && !e.isPropagationStopped()) {
                    e.currentTarget = o.elem, a = 0;
                    while ((i = o.handlers[a++]) && !e.isImmediatePropagationStopped())
                        (!e.namespace_re || e.namespace_re.test(i.namespace)) && (e.handleObj = i, e.data = i.data, r = ((x.event.special[i.origType] || {}).handle || i.handler).apply(o.elem, l), r !== t && ((e.result = r) === !1 && (e.preventDefault(), e.stopPropagation())));
                }
                return c.postDispatch && c.postDispatch.call(this, e), e.result;
            }
        },
        handlers: function (e, n) {
            var r, i, o, a, s = [], l = n.delegateCount, u = e.target;
            if (l && (u.nodeType && (!e.button || 'click' !== e.type)))
                for (; u != this; u = u.parentNode || this)
                    if (1 === u.nodeType && (u.disabled !== !0 || 'click' !== e.type)) {
                        for (o = [], a = 0; l > a; a++)
                            i = n[a], r = i.selector + ' ', o[r] === t && (o[r] = i.needsContext ? x(r, this).index(u) >= 0 : x.find(r, this, null, [u]).length), o[r] && o.push(i);
                        o.length && s.push({
                            elem: u,
                            handlers: o
                        });
                    }
            return n.length > l && s.push({
                elem: this,
                handlers: n.slice(l)
            }), s;
        },
        fix: function (e) {
            if (e[x.expando])
                return e;
            var t, n, r, i = e.type, o = e, s = this.fixHooks[i];
            s || (this.fixHooks[i] = s = tt.test(i) ? this.mouseHooks : et.test(i) ? this.keyHooks : {}), r = s.props ? this.props.concat(s.props) : this.props, e = new x.Event(o), t = r.length;
            while (t--)
                n = r[t], e[n] = o[n];
            return e.target || (e.target = o.srcElement || a), 3 === e.target.nodeType && (e.target = e.target.parentNode), e.metaKey = !!e.metaKey, s.filter ? s.filter(e, o) : e;
        },
        props: 'altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which'.split(' '),
        fixHooks: {},
        keyHooks: {
            props: 'char charCode key keyCode'.split(' '),
            filter: function (e, t) {
                return null == e.which && (e.which = null != t.charCode ? t.charCode : t.keyCode), e;
            }
        },
        mouseHooks: {
            props: 'button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement'.split(' '),
            filter: function (e, n) {
                var r, i, o, s = n.button, l = n.fromElement;
                return null == e.pageX && (null != n.clientX && (i = e.target.ownerDocument || a, o = i.documentElement, r = i.body, e.pageX = n.clientX + (o && o.scrollLeft || (r && r.scrollLeft || 0)) - (o && o.clientLeft || (r && r.clientLeft || 0)), e.pageY = n.clientY + (o && o.scrollTop || (r && r.scrollTop || 0)) - (o && o.clientTop || (r && r.clientTop || 0)))), !e.relatedTarget && (l && (e.relatedTarget = l === e.target ? n.toElement : l)), e.which || (s === t || (e.which = 1 & s ? 1 : 2 & s ? 3 : 4 & s ? 2 : 0)), e;
            }
        },
        special: {
            load: { noBubble: !0 },
            focus: {
                trigger: function () {
                    if (this !== at() && this.focus)
                        try {
                            return this.focus(), !1;
                        } catch (e) {
                        }
                },
                delegateType: 'focusin'
            },
            blur: {
                trigger: function () {
                    return this === at() && this.blur ? (this.blur(), !1) : t;
                },
                delegateType: 'focusout'
            },
            click: {
                trigger: function () {
                    return x.nodeName(this, 'input') && ('checkbox' === this.type && this.click) ? (this.click(), !1) : t;
                },
                _default: function (e) {
                    return x.nodeName(e.target, 'a');
                }
            },
            beforeunload: {
                postDispatch: function (e) {
                    e.result !== t && (e.originalEvent.returnValue = e.result);
                }
            }
        },
        simulate: function (e, t, n, r) {
            var i = x.extend(new x.Event(), n, {
                type: e,
                isSimulated: !0,
                originalEvent: {}
            });
            r ? x.event.trigger(i, null, t) : x.event.dispatch.call(t, i), i.isDefaultPrevented() && n.preventDefault();
        }
    }, x.removeEvent = a.removeEventListener ? function (e, t, n) {
        e.removeEventListener && e.removeEventListener(t, n, !1);
    } : function (e, t, n) {
        var r = 'on' + t;
        e.detachEvent && (typeof e[r] === i && (e[r] = null), e.detachEvent(r, n));
    }, x.Event = function (e, n) {
        return this instanceof x.Event ? (e && e.type ? (this.originalEvent = e, this.type = e.type, this.isDefaultPrevented = e.defaultPrevented || (e.returnValue === !1 || e.getPreventDefault && e.getPreventDefault()) ? it : ot) : this.type = e, n && x.extend(this, n), this.timeStamp = e && e.timeStamp || x.now(), this[x.expando] = !0, t) : new x.Event(e, n);
    }, x.Event.prototype = {
        isDefaultPrevented: ot,
        isPropagationStopped: ot,
        isImmediatePropagationStopped: ot,
        preventDefault: function () {
            var e = this.originalEvent;
            this.isDefaultPrevented = it, e && (e.preventDefault ? e.preventDefault() : e.returnValue = !1);
        },
        stopPropagation: function () {
            var e = this.originalEvent;
            this.isPropagationStopped = it, e && (e.stopPropagation && e.stopPropagation(), e.cancelBubble = !0);
        },
        stopImmediatePropagation: function () {
            this.isImmediatePropagationStopped = it, this.stopPropagation();
        }
    }, x.each({
        mouseenter: 'mouseover',
        mouseleave: 'mouseout'
    }, function (e, t) {
        x.event.special[e] = {
            delegateType: t,
            bindType: t,
            handle: function (e) {
                var n, r = this, i = e.relatedTarget, o = e.handleObj;
                return (!i || i !== r && !x.contains(r, i)) && (e.type = o.origType, n = o.handler.apply(this, arguments), e.type = t), n;
            }
        };
    }), x.support.submitBubbles || (x.event.special.submit = {
        setup: function () {
            return x.nodeName(this, 'form') ? !1 : (x.event.add(this, 'click._submit keypress._submit', function (e) {
                var n = e.target, r = x.nodeName(n, 'input') || x.nodeName(n, 'button') ? n.form : t;
                r && (!x._data(r, 'submitBubbles') && (x.event.add(r, 'submit._submit', function (e) {
                    e._submit_bubble = !0;
                }), x._data(r, 'submitBubbles', !0)));
            }), t);
        },
        postDispatch: function (e) {
            e._submit_bubble && (delete e._submit_bubble, this.parentNode && (!e.isTrigger && x.event.simulate('submit', this.parentNode, e, !0)));
        },
        teardown: function () {
            return x.nodeName(this, 'form') ? !1 : (x.event.remove(this, '._submit'), t);
        }
    }), x.support.changeBubbles || (x.event.special.change = {
        setup: function () {
            return Z.test(this.nodeName) ? (('checkbox' === this.type || 'radio' === this.type) && (x.event.add(this, 'propertychange._change', function (e) {
                'checked' === e.originalEvent.propertyName && (this._just_changed = !0);
            }), x.event.add(this, 'click._change', function (e) {
                this._just_changed && (!e.isTrigger && (this._just_changed = !1)), x.event.simulate('change', this, e, !0);
            })), !1) : (x.event.add(this, 'beforeactivate._change', function (e) {
                var t = e.target;
                Z.test(t.nodeName) && (!x._data(t, 'changeBubbles') && (x.event.add(t, 'change._change', function (e) {
                    !this.parentNode || (e.isSimulated || (e.isTrigger || x.event.simulate('change', this.parentNode, e, !0)));
                }), x._data(t, 'changeBubbles', !0)));
            }), t);
        },
        handle: function (e) {
            var n = e.target;
            return this !== n || (e.isSimulated || (e.isTrigger || 'radio' !== n.type && 'checkbox' !== n.type)) ? e.handleObj.handler.apply(this, arguments) : t;
        },
        teardown: function () {
            return x.event.remove(this, '._change'), !Z.test(this.nodeName);
        }
    }), x.support.focusinBubbles || x.each({
        focus: 'focusin',
        blur: 'focusout'
    }, function (e, t) {
        var n = 0, r = function (e) {
                x.event.simulate(t, e.target, x.event.fix(e), !0);
            };
        x.event.special[t] = {
            setup: function () {
                0 === n++ && a.addEventListener(e, r, !0);
            },
            teardown: function () {
                0 === --n && a.removeEventListener(e, r, !0);
            }
        };
    }), x.fn.extend({
        on: function (e, n, r, i, o) {
            var a, s;
            if ('object' == typeof e) {
                'string' != typeof n && (r = r || n, n = t);
                for (a in e)
                    this.on(a, n, r, e[a], o);
                return this;
            }
            if (null == r && null == i ? (i = n, r = n = t) : null == i && ('string' == typeof n ? (i = r, r = t) : (i = r, r = n, n = t)), i === !1)
                i = ot;
            else if (!i)
                return this;
            return 1 === o && (s = i, i = function (e) {
                return x().off(e), s.apply(this, arguments);
            }, i.guid = s.guid || (s.guid = x.guid++)), this.each(function () {
                x.event.add(this, e, i, r, n);
            });
        },
        one: function (e, t, n, r) {
            return this.on(e, t, n, r, 1);
        },
        off: function (e, n, r) {
            var i, o;
            if (e && (e.preventDefault && e.handleObj))
                return i = e.handleObj, x(e.delegateTarget).off(i.namespace ? i.origType + '.' + i.namespace : i.origType, i.selector, i.handler), this;
            if ('object' == typeof e) {
                for (o in e)
                    this.off(o, n, e[o]);
                return this;
            }
            return (n === !1 || 'function' == typeof n) && (r = n, n = t), r === !1 && (r = ot), this.each(function () {
                x.event.remove(this, e, r, n);
            });
        },
        trigger: function (e, t) {
            return this.each(function () {
                x.event.trigger(e, t, this);
            });
        },
        triggerHandler: function (e, n) {
            var r = this[0];
            return r ? x.event.trigger(e, n, r, !0) : t;
        }
    });
    var st = /^.[^:#\[\.,]*$/, lt = /^(?:parents|prev(?:Until|All))/, ut = x.expr.match.needsContext, ct = {
            children: !0,
            contents: !0,
            next: !0,
            prev: !0
        };
    x.fn.extend({
        find: function (e) {
            var t, n = [], r = this, i = r.length;
            if ('string' != typeof e)
                return this.pushStack(x(e).filter(function () {
                    for (t = 0; i > t; t++)
                        if (x.contains(r[t], this))
                            return !0;
                }));
            for (t = 0; i > t; t++)
                x.find(e, r[t], n);
            return n = this.pushStack(i > 1 ? x.unique(n) : n), n.selector = this.selector ? this.selector + ' ' + e : e, n;
        },
        has: function (e) {
            var t, n = x(e, this), r = n.length;
            return this.filter(function () {
                for (t = 0; r > t; t++)
                    if (x.contains(this, n[t]))
                        return !0;
            });
        },
        not: function (e) {
            return this.pushStack(ft(this, e || [], !0));
        },
        filter: function (e) {
            return this.pushStack(ft(this, e || [], !1));
        },
        is: function (e) {
            return !!ft(this, 'string' == typeof e && ut.test(e) ? x(e) : e || [], !1).length;
        },
        closest: function (e, t) {
            var n, r = 0, i = this.length, o = [], a = ut.test(e) || 'string' != typeof e ? x(e, t || this.context) : 0;
            for (; i > r; r++)
                for (n = this[r]; n && n !== t; n = n.parentNode)
                    if (11 > n.nodeType && (a ? a.index(n) > -1 : 1 === n.nodeType && x.find.matchesSelector(n, e))) {
                        n = o.push(n);
                        break;
                    }
            return this.pushStack(o.length > 1 ? x.unique(o) : o);
        },
        index: function (e) {
            return e ? 'string' == typeof e ? x.inArray(this[0], x(e)) : x.inArray(e.jquery ? e[0] : e, this) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1;
        },
        add: function (e, t) {
            var n = 'string' == typeof e ? x(e, t) : x.makeArray(e && e.nodeType ? [e] : e), r = x.merge(this.get(), n);
            return this.pushStack(x.unique(r));
        },
        addBack: function (e) {
            return this.add(null == e ? this.prevObject : this.prevObject.filter(e));
        }
    });
    function pt(e, t) {
        do
            e = e[t];
        while (e && 1 !== e.nodeType);
        return e;
    }
    x.each({
        parent: function (e) {
            var t = e.parentNode;
            return t && 11 !== t.nodeType ? t : null;
        },
        parents: function (e) {
            return x.dir(e, 'parentNode');
        },
        parentsUntil: function (e, t, n) {
            return x.dir(e, 'parentNode', n);
        },
        next: function (e) {
            return pt(e, 'nextSibling');
        },
        prev: function (e) {
            return pt(e, 'previousSibling');
        },
        nextAll: function (e) {
            return x.dir(e, 'nextSibling');
        },
        prevAll: function (e) {
            return x.dir(e, 'previousSibling');
        },
        nextUntil: function (e, t, n) {
            return x.dir(e, 'nextSibling', n);
        },
        prevUntil: function (e, t, n) {
            return x.dir(e, 'previousSibling', n);
        },
        siblings: function (e) {
            return x.sibling((e.parentNode || {}).firstChild, e);
        },
        children: function (e) {
            return x.sibling(e.firstChild);
        },
        contents: function (e) {
            return x.nodeName(e, 'iframe') ? e.contentDocument || e.contentWindow.document : x.merge([], e.childNodes);
        }
    }, function (e, t) {
        x.fn[e] = function (n, r) {
            var i = x.map(this, t, n);
            return 'Until' !== e.slice(-5) && (r = n), r && ('string' == typeof r && (i = x.filter(r, i))), this.length > 1 && (ct[e] || (i = x.unique(i)), lt.test(e) && (i = i.reverse())), this.pushStack(i);
        };
    }), x.extend({
        filter: function (e, t, n) {
            var r = t[0];
            return n && (e = ':not(' + e + ')'), 1 === t.length && 1 === r.nodeType ? x.find.matchesSelector(r, e) ? [r] : [] : x.find.matches(e, x.grep(t, function (e) {
                return 1 === e.nodeType;
            }));
        },
        dir: function (e, n, r) {
            var i = [], o = e[n];
            while (o && (9 !== o.nodeType && (r === t || (1 !== o.nodeType || !x(o).is(r)))))
                1 === o.nodeType && i.push(o), o = o[n];
            return i;
        },
        sibling: function (e, t) {
            var n = [];
            for (; e; e = e.nextSibling)
                1 === e.nodeType && (e !== t && n.push(e));
            return n;
        }
    });
    function ft(e, t, n) {
        if (x.isFunction(t))
            return x.grep(e, function (e, r) {
                return !!t.call(e, r, e) !== n;
            });
        if (t.nodeType)
            return x.grep(e, function (e) {
                return e === t !== n;
            });
        if ('string' == typeof t) {
            if (st.test(t))
                return x.filter(t, e, n);
            t = x.filter(t, e);
        }
        return x.grep(e, function (e) {
            return x.inArray(e, t) >= 0 !== n;
        });
    }
    function dt(e) {
        var t = ht.split('|'), n = e.createDocumentFragment();
        if (n.createElement)
            while (t.length)
                n.createElement(t.pop());
        return n;
    }
    var ht = 'abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video', gt = / jQuery\d+="(?:null|\d+)"/g, mt = RegExp('<(?:' + ht + ')[\\s/>]', 'i'), yt = /^\s+/, vt = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi, bt = /<([\w:]+)/, xt = /<tbody/i, wt = /<|&#?\w+;/, Tt = /<(?:script|style|link)/i, Ct = /^(?:checkbox|radio)$/i, Nt = /checked\s*(?:[^=]|=\s*.checked.)/i, kt = /^$|\/(?:java|ecma)script/i, Et = /^true\/(.*)/, St = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g, At = {
            option: [
                1,
                '<select multiple=\'multiple\'>',
                '</select>'
            ],
            legend: [
                1,
                '<fieldset>',
                '</fieldset>'
            ],
            area: [
                1,
                '<map>',
                '</map>'
            ],
            param: [
                1,
                '<object>',
                '</object>'
            ],
            thead: [
                1,
                '<table>',
                '</table>'
            ],
            tr: [
                2,
                '<table><tbody>',
                '</tbody></table>'
            ],
            col: [
                2,
                '<table><tbody></tbody><colgroup>',
                '</colgroup></table>'
            ],
            td: [
                3,
                '<table><tbody><tr>',
                '</tr></tbody></table>'
            ],
            _default: x.support.htmlSerialize ? [
                0,
                '',
                ''
            ] : [
                1,
                'X<div>',
                '</div>'
            ]
        }, jt = dt(a), Dt = jt.appendChild(a.createElement('div'));
    At.optgroup = At.option, At.tbody = At.tfoot = At.colgroup = At.caption = At.thead, At.th = At.td, x.fn.extend({
        text: function (e) {
            return x.access(this, function (e) {
                return e === t ? x.text(this) : this.empty().append((this[0] && this[0].ownerDocument || a).createTextNode(e));
            }, null, e, arguments.length);
        },
        append: function () {
            return this.domManip(arguments, function (e) {
                if (1 === this.nodeType || (11 === this.nodeType || 9 === this.nodeType)) {
                    var t = Lt(this, e);
                    t.appendChild(e);
                }
            });
        },
        prepend: function () {
            return this.domManip(arguments, function (e) {
                if (1 === this.nodeType || (11 === this.nodeType || 9 === this.nodeType)) {
                    var t = Lt(this, e);
                    t.insertBefore(e, t.firstChild);
                }
            });
        },
        before: function () {
            return this.domManip(arguments, function (e) {
                this.parentNode && this.parentNode.insertBefore(e, this);
            });
        },
        after: function () {
            return this.domManip(arguments, function (e) {
                this.parentNode && this.parentNode.insertBefore(e, this.nextSibling);
            });
        },
        remove: function (e, t) {
            var n, r = e ? x.filter(e, this) : this, i = 0;
            for (; null != (n = r[i]); i++)
                t || (1 !== n.nodeType || x.cleanData(Ft(n))), n.parentNode && (t && (x.contains(n.ownerDocument, n) && _t(Ft(n, 'script'))), n.parentNode.removeChild(n));
            return this;
        },
        empty: function () {
            var e, t = 0;
            for (; null != (e = this[t]); t++) {
                1 === e.nodeType && x.cleanData(Ft(e, !1));
                while (e.firstChild)
                    e.removeChild(e.firstChild);
                e.options && (x.nodeName(e, 'select') && (e.options.length = 0));
            }
            return this;
        },
        clone: function (e, t) {
            return e = null == e ? !1 : e, t = null == t ? e : t, this.map(function () {
                return x.clone(this, e, t);
            });
        },
        html: function (e) {
            return x.access(this, function (e) {
                var n = this[0] || {}, r = 0, i = this.length;
                if (e === t)
                    return 1 === n.nodeType ? n.innerHTML.replace(gt, '') : t;
                if (!('string' != typeof e || (Tt.test(e) || (!x.support.htmlSerialize && mt.test(e) || (!x.support.leadingWhitespace && yt.test(e) || At[(bt.exec(e) || [
                        '',
                        ''
                    ])[1].toLowerCase()]))))) {
                    e = e.replace(vt, '<$1></$2>');
                    try {
                        for (; i > r; r++)
                            n = this[r] || {}, 1 === n.nodeType && (x.cleanData(Ft(n, !1)), n.innerHTML = e);
                        n = 0;
                    } catch (o) {
                    }
                }
                n && this.empty().append(e);
            }, null, e, arguments.length);
        },
        replaceWith: function () {
            var e = x.map(this, function (e) {
                    return [
                        e.nextSibling,
                        e.parentNode
                    ];
                }), t = 0;
            return this.domManip(arguments, function (n) {
                var r = e[t++], i = e[t++];
                i && (r && (r.parentNode !== i && (r = this.nextSibling)), x(this).remove(), i.insertBefore(n, r));
            }, !0), t ? this : this.remove();
        },
        detach: function (e) {
            return this.remove(e, !0);
        },
        domManip: function (e, t, n) {
            e = d.apply([], e);
            var r, i, o, a, s, l, u = 0, c = this.length, p = this, f = c - 1, h = e[0], g = x.isFunction(h);
            if (g || !(1 >= c || ('string' != typeof h || x.support.checkClone)) && Nt.test(h))
                return this.each(function (r) {
                    var i = p.eq(r);
                    g && (e[0] = h.call(this, r, i.html())), i.domManip(e, t, n);
                });
            if (c && (l = x.buildFragment(e, this[0].ownerDocument, !1, !n && this), r = l.firstChild, 1 === l.childNodes.length && (l = r), r)) {
                for (a = x.map(Ft(l, 'script'), Ht), o = a.length; c > u; u++)
                    i = l, u !== f && (i = x.clone(i, !0, !0), o && x.merge(a, Ft(i, 'script'))), t.call(this[u], i, u);
                if (o)
                    for (s = a[a.length - 1].ownerDocument, x.map(a, qt), u = 0; o > u; u++)
                        i = a[u], kt.test(i.type || '') && (!x._data(i, 'globalEval') && (x.contains(s, i) && (i.src ? x._evalUrl(i.src) : x.globalEval((i.text || (i.textContent || (i.innerHTML || ''))).replace(St, '')))));
                l = r = null;
            }
            return this;
        }
    });
    function Lt(e, t) {
        return x.nodeName(e, 'table') && x.nodeName(1 === t.nodeType ? t : t.firstChild, 'tr') ? e.getElementsByTagName('tbody')[0] || e.appendChild(e.ownerDocument.createElement('tbody')) : e;
    }
    function Ht(e) {
        return e.type = (null !== x.find.attr(e, 'type')) + '/' + e.type, e;
    }
    function qt(e) {
        var t = Et.exec(e.type);
        return t ? e.type = t[1] : e.removeAttribute('type'), e;
    }
    function _t(e, t) {
        var n, r = 0;
        for (; null != (n = e[r]); r++)
            x._data(n, 'globalEval', !t || x._data(t[r], 'globalEval'));
    }
    function Mt(e, t) {
        if (1 === t.nodeType && x.hasData(e)) {
            var n, r, i, o = x._data(e), a = x._data(t, o), s = o.events;
            if (s) {
                delete a.handle, a.events = {};
                for (n in s)
                    for (r = 0, i = s[n].length; i > r; r++)
                        x.event.add(t, n, s[n][r]);
            }
            a.data && (a.data = x.extend({}, a.data));
        }
    }
    function Ot(e, t) {
        var n, r, i;
        if (1 === t.nodeType) {
            if (n = t.nodeName.toLowerCase(), !x.support.noCloneEvent && t[x.expando]) {
                i = x._data(t);
                for (r in i.events)
                    x.removeEvent(t, r, i.handle);
                t.removeAttribute(x.expando);
            }
            'script' === n && t.text !== e.text ? (Ht(t).text = e.text, qt(t)) : 'object' === n ? (t.parentNode && (t.outerHTML = e.outerHTML), x.support.html5Clone && (e.innerHTML && (!x.trim(t.innerHTML) && (t.innerHTML = e.innerHTML)))) : 'input' === n && Ct.test(e.type) ? (t.defaultChecked = t.checked = e.checked, t.value !== e.value && (t.value = e.value)) : 'option' === n ? t.defaultSelected = t.selected = e.defaultSelected : ('input' === n || 'textarea' === n) && (t.defaultValue = e.defaultValue);
        }
    }
    x.each({
        appendTo: 'append',
        prependTo: 'prepend',
        insertBefore: 'before',
        insertAfter: 'after',
        replaceAll: 'replaceWith'
    }, function (e, t) {
        x.fn[e] = function (e) {
            var n, r = 0, i = [], o = x(e), a = o.length - 1;
            for (; a >= r; r++)
                n = r === a ? this : this.clone(!0), x(o[r])[t](n), h.apply(i, n.get());
            return this.pushStack(i);
        };
    });
    function Ft(e, n) {
        var r, o, a = 0, s = typeof e.getElementsByTagName !== i ? e.getElementsByTagName(n || '*') : typeof e.querySelectorAll !== i ? e.querySelectorAll(n || '*') : t;
        if (!s)
            for (s = [], r = e.childNodes || e; null != (o = r[a]); a++)
                !n || x.nodeName(o, n) ? s.push(o) : x.merge(s, Ft(o, n));
        return n === t || n && x.nodeName(e, n) ? x.merge([e], s) : s;
    }
    function Bt(e) {
        Ct.test(e.type) && (e.defaultChecked = e.checked);
    }
    x.extend({
        clone: function (e, t, n) {
            var r, i, o, a, s, l = x.contains(e.ownerDocument, e);
            if (x.support.html5Clone || (x.isXMLDoc(e) || !mt.test('<' + e.nodeName + '>')) ? o = e.cloneNode(!0) : (Dt.innerHTML = e.outerHTML, Dt.removeChild(o = Dt.firstChild)), !(x.support.noCloneEvent && x.support.noCloneChecked || (1 !== e.nodeType && 11 !== e.nodeType || x.isXMLDoc(e))))
                for (r = Ft(o), s = Ft(e), a = 0; null != (i = s[a]); ++a)
                    r[a] && Ot(i, r[a]);
            if (t)
                if (n)
                    for (s = s || Ft(e), r = r || Ft(o), a = 0; null != (i = s[a]); a++)
                        Mt(i, r[a]);
                else
                    Mt(e, o);
            return r = Ft(o, 'script'), r.length > 0 && _t(r, !l && Ft(e, 'script')), r = s = i = null, o;
        },
        buildFragment: function (e, t, n, r) {
            var i, o, a, s, l, u, c, p = e.length, f = dt(t), d = [], h = 0;
            for (; p > h; h++)
                if (o = e[h], o || 0 === o)
                    if ('object' === x.type(o))
                        x.merge(d, o.nodeType ? [o] : o);
                    else if (wt.test(o)) {
                        s = s || f.appendChild(t.createElement('div')), l = (bt.exec(o) || [
                            '',
                            ''
                        ])[1].toLowerCase(), c = At[l] || At._default, s.innerHTML = c[1] + o.replace(vt, '<$1></$2>') + c[2], i = c[0];
                        while (i--)
                            s = s.lastChild;
                        if (!x.support.leadingWhitespace && (yt.test(o) && d.push(t.createTextNode(yt.exec(o)[0]))), !x.support.tbody) {
                            o = 'table' !== l || xt.test(o) ? '<table>' !== c[1] || xt.test(o) ? 0 : s : s.firstChild, i = o && o.childNodes.length;
                            while (i--)
                                x.nodeName(u = o.childNodes[i], 'tbody') && (!u.childNodes.length && o.removeChild(u));
                        }
                        x.merge(d, s.childNodes), s.textContent = '';
                        while (s.firstChild)
                            s.removeChild(s.firstChild);
                        s = f.lastChild;
                    } else
                        d.push(t.createTextNode(o));
            s && f.removeChild(s), x.support.appendChecked || x.grep(Ft(d, 'input'), Bt), h = 0;
            while (o = d[h++])
                if ((!r || -1 === x.inArray(o, r)) && (a = x.contains(o.ownerDocument, o), s = Ft(f.appendChild(o), 'script'), a && _t(s), n)) {
                    i = 0;
                    while (o = s[i++])
                        kt.test(o.type || '') && n.push(o);
                }
            return s = null, f;
        },
        cleanData: function (e, t) {
            var n, r, o, a, s = 0, l = x.expando, u = x.cache, c = x.support.deleteExpando, f = x.event.special;
            for (; null != (n = e[s]); s++)
                if ((t || x.acceptData(n)) && (o = n[l], a = o && u[o])) {
                    if (a.events)
                        for (r in a.events)
                            f[r] ? x.event.remove(n, r) : x.removeEvent(n, r, a.handle);
                    u[o] && (delete u[o], c ? delete n[l] : typeof n.removeAttribute !== i ? n.removeAttribute(l) : n[l] = null, p.push(o));
                }
        },
        _evalUrl: function (e) {
            return x.ajax({
                url: e,
                type: 'GET',
                dataType: 'script',
                async: !1,
                global: !1,
                'throws': !0
            });
        }
    }), x.fn.extend({
        wrapAll: function (e) {
            if (x.isFunction(e))
                return this.each(function (t) {
                    x(this).wrapAll(e.call(this, t));
                });
            if (this[0]) {
                var t = x(e, this[0].ownerDocument).eq(0).clone(!0);
                this[0].parentNode && t.insertBefore(this[0]), t.map(function () {
                    var e = this;
                    while (e.firstChild && 1 === e.firstChild.nodeType)
                        e = e.firstChild;
                    return e;
                }).append(this);
            }
            return this;
        },
        wrapInner: function (e) {
            return x.isFunction(e) ? this.each(function (t) {
                x(this).wrapInner(e.call(this, t));
            }) : this.each(function () {
                var t = x(this), n = t.contents();
                n.length ? n.wrapAll(e) : t.append(e);
            });
        },
        wrap: function (e) {
            var t = x.isFunction(e);
            return this.each(function (n) {
                x(this).wrapAll(t ? e.call(this, n) : e);
            });
        },
        unwrap: function () {
            return this.parent().each(function () {
                x.nodeName(this, 'body') || x(this).replaceWith(this.childNodes);
            }).end();
        }
    });
    var Pt, Rt, Wt, $t = /alpha\([^)]*\)/i, It = /opacity\s*=\s*([^)]*)/, zt = /^(top|right|bottom|left)$/, Xt = /^(none|table(?!-c[ea]).+)/, Ut = /^margin/, Vt = RegExp('^(' + w + ')(.*)$', 'i'), Yt = RegExp('^(' + w + ')(?!px)[a-z%]+$', 'i'), Jt = RegExp('^([+-])=(' + w + ')', 'i'), Gt = { BODY: 'block' }, Qt = {
            position: 'absolute',
            visibility: 'hidden',
            display: 'block'
        }, Kt = {
            letterSpacing: 0,
            fontWeight: 400
        }, Zt = [
            'Top',
            'Right',
            'Bottom',
            'Left'
        ], en = [
            'Webkit',
            'O',
            'Moz',
            'ms'
        ];
    function tn(e, t) {
        if (t in e)
            return t;
        var n = t.charAt(0).toUpperCase() + t.slice(1), r = t, i = en.length;
        while (i--)
            if (t = en[i] + n, t in e)
                return t;
        return r;
    }
    function nn(e, t) {
        return e = t || e, 'none' === x.css(e, 'display') || !x.contains(e.ownerDocument, e);
    }
    function rn(e, t) {
        var n, r, i, o = [], a = 0, s = e.length;
        for (; s > a; a++)
            r = e[a], r.style && (o[a] = x._data(r, 'olddisplay'), n = r.style.display, t ? (o[a] || ('none' !== n || (r.style.display = '')), '' === r.style.display && (nn(r) && (o[a] = x._data(r, 'olddisplay', ln(r.nodeName))))) : o[a] || (i = nn(r), (n && 'none' !== n || !i) && x._data(r, 'olddisplay', i ? n : x.css(r, 'display'))));
        for (a = 0; s > a; a++)
            r = e[a], r.style && (t && ('none' !== r.style.display && '' !== r.style.display) || (r.style.display = t ? o[a] || '' : 'none'));
        return e;
    }
    x.fn.extend({
        css: function (e, n) {
            return x.access(this, function (e, n, r) {
                var i, o, a = {}, s = 0;
                if (x.isArray(n)) {
                    for (o = Rt(e), i = n.length; i > s; s++)
                        a[n[s]] = x.css(e, n[s], !1, o);
                    return a;
                }
                return r !== t ? x.style(e, n, r) : x.css(e, n);
            }, e, n, arguments.length > 1);
        },
        show: function () {
            return rn(this, !0);
        },
        hide: function () {
            return rn(this);
        },
        toggle: function (e) {
            return 'boolean' == typeof e ? e ? this.show() : this.hide() : this.each(function () {
                nn(this) ? x(this).show() : x(this).hide();
            });
        }
    }), x.extend({
        cssHooks: {
            opacity: {
                get: function (e, t) {
                    if (t) {
                        var n = Wt(e, 'opacity');
                        return '' === n ? '1' : n;
                    }
                }
            }
        },
        cssNumber: {
            columnCount: !0,
            fillOpacity: !0,
            fontWeight: !0,
            lineHeight: !0,
            opacity: !0,
            order: !0,
            orphans: !0,
            widows: !0,
            zIndex: !0,
            zoom: !0
        },
        cssProps: { 'float': x.support.cssFloat ? 'cssFloat' : 'styleFloat' },
        style: function (e, n, r, i) {
            if (e && (3 !== e.nodeType && (8 !== e.nodeType && e.style))) {
                var o, a, s, l = x.camelCase(n), u = e.style;
                if (n = x.cssProps[l] || (x.cssProps[l] = tn(u, l)), s = x.cssHooks[n] || x.cssHooks[l], r === t)
                    return s && ('get' in s && (o = s.get(e, !1, i)) !== t) ? o : u[n];
                if (a = typeof r, 'string' === a && ((o = Jt.exec(r)) && (r = (o[1] + 1) * o[2] + parseFloat(x.css(e, n)), a = 'number')), !(null == r || ('number' === a && isNaN(r) || ('number' !== a || (x.cssNumber[l] || (r += 'px')), x.support.clearCloneStyle || ('' !== r || (0 !== n.indexOf('background') || (u[n] = 'inherit'))), s && ('set' in s && (r = s.set(e, r, i)) === t)))))
                    try {
                        u[n] = r;
                    } catch (c) {
                    }
            }
        },
        css: function (e, n, r, i) {
            var o, a, s, l = x.camelCase(n);
            return n = x.cssProps[l] || (x.cssProps[l] = tn(e.style, l)), s = x.cssHooks[n] || x.cssHooks[l], s && ('get' in s && (a = s.get(e, !0, r))), a === t && (a = Wt(e, n, i)), 'normal' === a && (n in Kt && (a = Kt[n])), '' === r || r ? (o = parseFloat(a), r === !0 || x.isNumeric(o) ? o || 0 : a) : a;
        }
    }), e.getComputedStyle ? (Rt = function (t) {
        return e.getComputedStyle(t, null);
    }, Wt = function (e, n, r) {
        var i, o, a, s = r || Rt(e), l = s ? s.getPropertyValue(n) || s[n] : t, u = e.style;
        return s && ('' !== l || (x.contains(e.ownerDocument, e) || (l = x.style(e, n))), Yt.test(l) && (Ut.test(n) && (i = u.width, o = u.minWidth, a = u.maxWidth, u.minWidth = u.maxWidth = u.width = l, l = s.width, u.width = i, u.minWidth = o, u.maxWidth = a))), l;
    }) : a.documentElement.currentStyle && (Rt = function (e) {
        return e.currentStyle;
    }, Wt = function (e, n, r) {
        var i, o, a, s = r || Rt(e), l = s ? s[n] : t, u = e.style;
        return null == l && (u && (u[n] && (l = u[n]))), Yt.test(l) && (!zt.test(n) && (i = u.left, o = e.runtimeStyle, a = o && o.left, a && (o.left = e.currentStyle.left), u.left = 'fontSize' === n ? '1em' : l, l = u.pixelLeft + 'px', u.left = i, a && (o.left = a))), '' === l ? 'auto' : l;
    });
    function on(e, t, n) {
        var r = Vt.exec(t);
        return r ? Math.max(0, r[1] - (n || 0)) + (r[2] || 'px') : t;
    }
    function an(e, t, n, r, i) {
        var o = n === (r ? 'border' : 'content') ? 4 : 'width' === t ? 1 : 0, a = 0;
        for (; 4 > o; o += 2)
            'margin' === n && (a += x.css(e, n + Zt[o], !0, i)), r ? ('content' === n && (a -= x.css(e, 'padding' + Zt[o], !0, i)), 'margin' !== n && (a -= x.css(e, 'border' + Zt[o] + 'Width', !0, i))) : (a += x.css(e, 'padding' + Zt[o], !0, i), 'padding' !== n && (a += x.css(e, 'border' + Zt[o] + 'Width', !0, i)));
        return a;
    }
    function sn(e, t, n) {
        var r = !0, i = 'width' === t ? e.offsetWidth : e.offsetHeight, o = Rt(e), a = x.support.boxSizing && 'border-box' === x.css(e, 'boxSizing', !1, o);
        if (0 >= i || null == i) {
            if (i = Wt(e, t, o), (0 > i || null == i) && (i = e.style[t]), Yt.test(i))
                return i;
            r = a && (x.support.boxSizingReliable || i === e.style[t]), i = parseFloat(i) || 0;
        }
        return i + an(e, t, n || (a ? 'border' : 'content'), r, o) + 'px';
    }
    function ln(e) {
        var t = a, n = Gt[e];
        return n || (n = un(e, t), 'none' !== n && n || (Pt = (Pt || x('<iframe frameborder=\'0\' width=\'0\' height=\'0\'/>').css('cssText', 'display:block !important')).appendTo(t.documentElement), t = (Pt[0].contentWindow || Pt[0].contentDocument).document, t.write('<!doctype html><html><body>'), t.close(), n = un(e, t), Pt.detach()), Gt[e] = n), n;
    }
    function un(e, t) {
        var n = x(t.createElement(e)).appendTo(t.body), r = x.css(n[0], 'display');
        return n.remove(), r;
    }
    x.each([
        'height',
        'width'
    ], function (e, n) {
        x.cssHooks[n] = {
            get: function (e, r, i) {
                return r ? 0 === e.offsetWidth && Xt.test(x.css(e, 'display')) ? x.swap(e, Qt, function () {
                    return sn(e, n, i);
                }) : sn(e, n, i) : t;
            },
            set: function (e, t, r) {
                var i = r && Rt(e);
                return on(e, t, r ? an(e, n, r, x.support.boxSizing && 'border-box' === x.css(e, 'boxSizing', !1, i), i) : 0);
            }
        };
    }), x.support.opacity || (x.cssHooks.opacity = {
        get: function (e, t) {
            return It.test((t && e.currentStyle ? e.currentStyle.filter : e.style.filter) || '') ? 0.01 * parseFloat(RegExp.$1) + '' : t ? '1' : '';
        },
        set: function (e, t) {
            var n = e.style, r = e.currentStyle, i = x.isNumeric(t) ? 'alpha(opacity=' + 100 * t + ')' : '', o = r && r.filter || (n.filter || '');
            n.zoom = 1, (t >= 1 || '' === t) && ('' === x.trim(o.replace($t, '')) && (n.removeAttribute && (n.removeAttribute('filter'), '' === t || r && !r.filter))) || (n.filter = $t.test(o) ? o.replace($t, i) : o + ' ' + i);
        }
    }), x(function () {
        x.support.reliableMarginRight || (x.cssHooks.marginRight = {
            get: function (e, n) {
                return n ? x.swap(e, { display: 'inline-block' }, Wt, [
                    e,
                    'marginRight'
                ]) : t;
            }
        }), !x.support.pixelPosition && (x.fn.position && x.each([
            'top',
            'left'
        ], function (e, n) {
            x.cssHooks[n] = {
                get: function (e, r) {
                    return r ? (r = Wt(e, n), Yt.test(r) ? x(e).position()[n] + 'px' : r) : t;
                }
            };
        }));
    }), x.expr && (x.expr.filters && (x.expr.filters.hidden = function (e) {
        return 0 >= e.offsetWidth && 0 >= e.offsetHeight || !x.support.reliableHiddenOffsets && 'none' === (e.style && e.style.display || x.css(e, 'display'));
    }, x.expr.filters.visible = function (e) {
        return !x.expr.filters.hidden(e);
    })), x.each({
        margin: '',
        padding: '',
        border: 'Width'
    }, function (e, t) {
        x.cssHooks[e + t] = {
            expand: function (n) {
                var r = 0, i = {}, o = 'string' == typeof n ? n.split(' ') : [n];
                for (; 4 > r; r++)
                    i[e + Zt[r] + t] = o[r] || (o[r - 2] || o[0]);
                return i;
            }
        }, Ut.test(e) || (x.cssHooks[e + t].set = on);
    });
    var cn = /%20/g, pn = /\[\]$/, fn = /\r?\n/g, dn = /^(?:submit|button|image|reset|file)$/i, hn = /^(?:input|select|textarea|keygen)/i;
    x.fn.extend({
        serialize: function () {
            return x.param(this.serializeArray());
        },
        serializeArray: function () {
            return this.map(function () {
                var e = x.prop(this, 'elements');
                return e ? x.makeArray(e) : this;
            }).filter(function () {
                var e = this.type;
                return this.name && (!x(this).is(':disabled') && (hn.test(this.nodeName) && (!dn.test(e) && (this.checked || !Ct.test(e)))));
            }).map(function (e, t) {
                var n = x(this).val();
                return null == n ? null : x.isArray(n) ? x.map(n, function (e) {
                    return {
                        name: t.name,
                        value: e.replace(fn, '\r\n')
                    };
                }) : {
                    name: t.name,
                    value: n.replace(fn, '\r\n')
                };
            }).get();
        }
    }), x.param = function (e, n) {
        var r, i = [], o = function (e, t) {
                t = x.isFunction(t) ? t() : null == t ? '' : t, i[i.length] = encodeURIComponent(e) + '=' + encodeURIComponent(t);
            };
        if (n === t && (n = x.ajaxSettings && x.ajaxSettings.traditional), x.isArray(e) || e.jquery && !x.isPlainObject(e))
            x.each(e, function () {
                o(this.name, this.value);
            });
        else
            for (r in e)
                gn(r, e[r], n, o);
        return i.join('&').replace(cn, '+');
    };
    function gn(e, t, n, r) {
        var i;
        if (x.isArray(t))
            x.each(t, function (t, i) {
                n || pn.test(e) ? r(e, i) : gn(e + '[' + ('object' == typeof i ? t : '') + ']', i, n, r);
            });
        else if (n || 'object' !== x.type(t))
            r(e, t);
        else
            for (i in t)
                gn(e + '[' + i + ']', t[i], n, r);
    }
    x.each('blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu'.split(' '), function (e, t) {
        x.fn[t] = function (e, n) {
            return arguments.length > 0 ? this.on(t, null, e, n) : this.trigger(t);
        };
    }), x.fn.extend({
        hover: function (e, t) {
            return this.mouseenter(e).mouseleave(t || e);
        },
        bind: function (e, t, n) {
            return this.on(e, null, t, n);
        },
        unbind: function (e, t) {
            return this.off(e, null, t);
        },
        delegate: function (e, t, n, r) {
            return this.on(t, e, n, r);
        },
        undelegate: function (e, t, n) {
            return 1 === arguments.length ? this.off(e, '**') : this.off(t, e || '**', n);
        }
    });
    var mn, yn, vn = x.now(), bn = /\?/, xn = /#.*$/, wn = /([?&])_=[^&]*/, Tn = /^(.*?):[ \t]*([^\r\n]*)\r?$/gm, Cn = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/, Nn = /^(?:GET|HEAD)$/, kn = /^\/\//, En = /^([\w.+-]+:)(?:\/\/([^\/?#:]*)(?::(\d+)|)|)/, Sn = x.fn.load, An = {}, jn = {}, Dn = '*/'.concat('*');
    try {
        yn = o.href;
    } catch (Ln) {
        yn = a.createElement('a'), yn.href = '', yn = yn.href;
    }
    mn = En.exec(yn.toLowerCase()) || [];
    function Hn(e) {
        return function (t, n) {
            'string' != typeof t && (n = t, t = '*');
            var r, i = 0, o = t.toLowerCase().match(T) || [];
            if (x.isFunction(n))
                while (r = o[i++])
                    '+' === r[0] ? (r = r.slice(1) || '*', (e[r] = e[r] || []).unshift(n)) : (e[r] = e[r] || []).push(n);
        };
    }
    function qn(e, n, r, i) {
        var o = {}, a = e === jn;
        function s(l) {
            var u;
            return o[l] = !0, x.each(e[l] || [], function (e, l) {
                var c = l(n, r, i);
                return 'string' != typeof c || (a || o[c]) ? a ? !(u = c) : t : (n.dataTypes.unshift(c), s(c), !1);
            }), u;
        }
        return s(n.dataTypes[0]) || !o['*'] && s('*');
    }
    function _n(e, n) {
        var r, i, o = x.ajaxSettings.flatOptions || {};
        for (i in n)
            n[i] !== t && ((o[i] ? e : r || (r = {}))[i] = n[i]);
        return r && x.extend(!0, e, r), e;
    }
    x.fn.load = function (e, n, r) {
        if ('string' != typeof e && Sn)
            return Sn.apply(this, arguments);
        var i, o, a, s = this, l = e.indexOf(' ');
        return l >= 0 && (i = e.slice(l, e.length), e = e.slice(0, l)), x.isFunction(n) ? (r = n, n = t) : n && ('object' == typeof n && (a = 'POST')), s.length > 0 && x.ajax({
            url: e,
            type: a,
            dataType: 'html',
            data: n
        }).done(function (e) {
            o = arguments, s.html(i ? x('<div>').append(x.parseHTML(e)).find(i) : e);
        }).complete(r && function (e, t) {
            s.each(r, o || [
                e.responseText,
                t,
                e
            ]);
        }), this;
    }, x.each([
        'ajaxStart',
        'ajaxStop',
        'ajaxComplete',
        'ajaxError',
        'ajaxSuccess',
        'ajaxSend'
    ], function (e, t) {
        x.fn[t] = function (e) {
            return this.on(t, e);
        };
    }), x.extend({
        active: 0,
        lastModified: {},
        etag: {},
        ajaxSettings: {
            url: yn,
            type: 'GET',
            isLocal: Cn.test(mn[1]),
            global: !0,
            processData: !0,
            async: !0,
            contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
            accepts: {
                '*': Dn,
                text: 'text/plain',
                html: 'text/html',
                xml: 'application/xml, text/xml',
                json: 'application/json, text/javascript'
            },
            contents: {
                xml: /xml/,
                html: /html/,
                json: /json/
            },
            responseFields: {
                xml: 'responseXML',
                text: 'responseText',
                json: 'responseJSON'
            },
            converters: {
                '* text': String,
                'text html': !0,
                'text json': x.parseJSON,
                'text xml': x.parseXML
            },
            flatOptions: {
                url: !0,
                context: !0
            }
        },
        ajaxSetup: function (e, t) {
            return t ? _n(_n(e, x.ajaxSettings), t) : _n(x.ajaxSettings, e);
        },
        ajaxPrefilter: Hn(An),
        ajaxTransport: Hn(jn),
        ajax: function (e, n) {
            'object' == typeof e && (n = e, e = t), n = n || {};
            var r, i, o, a, s, l, u, c, p = x.ajaxSetup({}, n), f = p.context || p, d = p.context && (f.nodeType || f.jquery) ? x(f) : x.event, h = x.Deferred(), g = x.Callbacks('once memory'), m = p.statusCode || {}, y = {}, v = {}, b = 0, w = 'canceled', C = {
                    readyState: 0,
                    getResponseHeader: function (e) {
                        var t;
                        if (2 === b) {
                            if (!c) {
                                c = {};
                                while (t = Tn.exec(a))
                                    c[t[1].toLowerCase()] = t[2];
                            }
                            t = c[e.toLowerCase()];
                        }
                        return null == t ? null : t;
                    },
                    getAllResponseHeaders: function () {
                        return 2 === b ? a : null;
                    },
                    setRequestHeader: function (e, t) {
                        var n = e.toLowerCase();
                        return b || (e = v[n] = v[n] || e, y[e] = t), this;
                    },
                    overrideMimeType: function (e) {
                        return b || (p.mimeType = e), this;
                    },
                    statusCode: function (e) {
                        var t;
                        if (e)
                            if (2 > b)
                                for (t in e)
                                    m[t] = [
                                        m[t],
                                        e[t]
                                    ];
                            else
                                C.always(e[C.status]);
                        return this;
                    },
                    abort: function (e) {
                        var t = e || w;
                        return u && u.abort(t), k(0, t), this;
                    }
                };
            if (h.promise(C).complete = g.add, C.success = C.done, C.error = C.fail, p.url = ((e || (p.url || yn)) + '').replace(xn, '').replace(kn, mn[1] + '//'), p.type = n.method || (n.type || (p.method || p.type)), p.dataTypes = x.trim(p.dataType || '*').toLowerCase().match(T) || [''], null == p.crossDomain && (r = En.exec(p.url.toLowerCase()), p.crossDomain = !(!r || r[1] === mn[1] && (r[2] === mn[2] && (r[3] || ('http:' === r[1] ? '80' : '443')) === (mn[3] || ('http:' === mn[1] ? '80' : '443'))))), p.data && (p.processData && ('string' != typeof p.data && (p.data = x.param(p.data, p.traditional)))), qn(An, p, n, C), 2 === b)
                return C;
            l = p.global, l && (0 === x.active++ && x.event.trigger('ajaxStart')), p.type = p.type.toUpperCase(), p.hasContent = !Nn.test(p.type), o = p.url, p.hasContent || (p.data && (o = p.url += (bn.test(o) ? '&' : '?') + p.data, delete p.data), p.cache === !1 && (p.url = wn.test(o) ? o.replace(wn, '$1_=' + vn++) : o + (bn.test(o) ? '&' : '?') + '_=' + vn++)), p.ifModified && (x.lastModified[o] && C.setRequestHeader('If-Modified-Since', x.lastModified[o]), x.etag[o] && C.setRequestHeader('If-None-Match', x.etag[o])), (p.data && (p.hasContent && p.contentType !== !1) || n.contentType) && C.setRequestHeader('Content-Type', p.contentType), C.setRequestHeader('Accept', p.dataTypes[0] && p.accepts[p.dataTypes[0]] ? p.accepts[p.dataTypes[0]] + ('*' !== p.dataTypes[0] ? ', ' + Dn + '; q=0.01' : '') : p.accepts['*']);
            for (i in p.headers)
                C.setRequestHeader(i, p.headers[i]);
            if (p.beforeSend && (p.beforeSend.call(f, C, p) === !1 || 2 === b))
                return C.abort();
            w = 'abort';
            for (i in {
                    success: 1,
                    error: 1,
                    complete: 1
                })
                C[i](p[i]);
            if (u = qn(jn, p, n, C)) {
                C.readyState = 1, l && d.trigger('ajaxSend', [
                    C,
                    p
                ]), p.async && (p.timeout > 0 && (s = setTimeout(function () {
                    C.abort('timeout');
                }, p.timeout)));
                try {
                    b = 1, u.send(y, k);
                } catch (N) {
                    if (!(2 > b))
                        throw N;
                    k(-1, N);
                }
            } else
                k(-1, 'No Transport');
            function k(e, n, r, i) {
                var c, y, v, w, T, N = n;
                2 !== b && (b = 2, s && clearTimeout(s), u = t, a = i || '', C.readyState = e > 0 ? 4 : 0, c = e >= 200 && 300 > e || 304 === e, r && (w = Mn(p, C, r)), w = On(p, w, C, c), c ? (p.ifModified && (T = C.getResponseHeader('Last-Modified'), T && (x.lastModified[o] = T), T = C.getResponseHeader('etag'), T && (x.etag[o] = T)), 204 === e || 'HEAD' === p.type ? N = 'nocontent' : 304 === e ? N = 'notmodified' : (N = w.state, y = w.data, v = w.error, c = !v)) : (v = N, (e || !N) && (N = 'error', 0 > e && (e = 0))), C.status = e, C.statusText = (n || N) + '', c ? h.resolveWith(f, [
                    y,
                    N,
                    C
                ]) : h.rejectWith(f, [
                    C,
                    N,
                    v
                ]), C.statusCode(m), m = t, l && d.trigger(c ? 'ajaxSuccess' : 'ajaxError', [
                    C,
                    p,
                    c ? y : v
                ]), g.fireWith(f, [
                    C,
                    N
                ]), l && (d.trigger('ajaxComplete', [
                    C,
                    p
                ]), --x.active || x.event.trigger('ajaxStop')));
            }
            return C;
        },
        getJSON: function (e, t, n) {
            return x.get(e, t, n, 'json');
        },
        getScript: function (e, n) {
            return x.get(e, t, n, 'script');
        }
    }), x.each([
        'get',
        'post'
    ], function (e, n) {
        x[n] = function (e, r, i, o) {
            return x.isFunction(r) && (o = o || i, i = r, r = t), x.ajax({
                url: e,
                type: n,
                dataType: o,
                data: r,
                success: i
            });
        };
    });
    function Mn(e, n, r) {
        var i, o, a, s, l = e.contents, u = e.dataTypes;
        while ('*' === u[0])
            u.shift(), o === t && (o = e.mimeType || n.getResponseHeader('Content-Type'));
        if (o)
            for (s in l)
                if (l[s] && l[s].test(o)) {
                    u.unshift(s);
                    break;
                }
        if (u[0] in r)
            a = u[0];
        else {
            for (s in r) {
                if (!u[0] || e.converters[s + ' ' + u[0]]) {
                    a = s;
                    break;
                }
                i || (i = s);
            }
            a = a || i;
        }
        return a ? (a !== u[0] && u.unshift(a), r[a]) : t;
    }
    function On(e, t, n, r) {
        var i, o, a, s, l, u = {}, c = e.dataTypes.slice();
        if (c[1])
            for (a in e.converters)
                u[a.toLowerCase()] = e.converters[a];
        o = c.shift();
        while (o)
            if (e.responseFields[o] && (n[e.responseFields[o]] = t), !l && (r && (e.dataFilter && (t = e.dataFilter(t, e.dataType)))), l = o, o = c.shift())
                if ('*' === o)
                    o = l;
                else if ('*' !== l && l !== o) {
                    if (a = u[l + ' ' + o] || u['* ' + o], !a)
                        for (i in u)
                            if (s = i.split(' '), s[1] === o && (a = u[l + ' ' + s[0]] || u['* ' + s[0]])) {
                                a === !0 ? a = u[i] : u[i] !== !0 && (o = s[0], c.unshift(s[1]));
                                break;
                            }
                    if (a !== !0)
                        if (a && e['throws'])
                            t = a(t);
                        else
                            try {
                                t = a(t);
                            } catch (p) {
                                return {
                                    state: 'parsererror',
                                    error: a ? p : 'No conversion from ' + l + ' to ' + o
                                };
                            }
                }
        return {
            state: 'success',
            data: t
        };
    }
    x.ajaxSetup({
        accepts: { script: 'text/javascript, application/javascript, application/ecmascript, application/x-ecmascript' },
        contents: { script: /(?:java|ecma)script/ },
        converters: {
            'text script': function (e) {
                return x.globalEval(e), e;
            }
        }
    }), x.ajaxPrefilter('script', function (e) {
        e.cache === t && (e.cache = !1), e.crossDomain && (e.type = 'GET', e.global = !1);
    }), x.ajaxTransport('script', function (e) {
        if (e.crossDomain) {
            var n, r = a.head || (x('head')[0] || a.documentElement);
            return {
                send: function (t, i) {
                    n = a.createElement('script'), n.async = !0, e.scriptCharset && (n.charset = e.scriptCharset), n.src = e.url, n.onload = n.onreadystatechange = function (e, t) {
                        (t || (!n.readyState || /loaded|complete/.test(n.readyState))) && (n.onload = n.onreadystatechange = null, n.parentNode && n.parentNode.removeChild(n), n = null, t || i(200, 'success'));
                    }, r.insertBefore(n, r.firstChild);
                },
                abort: function () {
                    n && n.onload(t, !0);
                }
            };
        }
    });
    var Fn = [], Bn = /(=)\?(?=&|$)|\?\?/;
    x.ajaxSetup({
        jsonp: 'callback',
        jsonpCallback: function () {
            var e = Fn.pop() || x.expando + '_' + vn++;
            return this[e] = !0, e;
        }
    }), x.ajaxPrefilter('json jsonp', function (n, r, i) {
        var o, a, s, l = n.jsonp !== !1 && (Bn.test(n.url) ? 'url' : 'string' == typeof n.data && (!(n.contentType || '').indexOf('application/x-www-form-urlencoded') && (Bn.test(n.data) && 'data')));
        return l || 'jsonp' === n.dataTypes[0] ? (o = n.jsonpCallback = x.isFunction(n.jsonpCallback) ? n.jsonpCallback() : n.jsonpCallback, l ? n[l] = n[l].replace(Bn, '$1' + o) : n.jsonp !== !1 && (n.url += (bn.test(n.url) ? '&' : '?') + n.jsonp + '=' + o), n.converters['script json'] = function () {
            return s || x.error(o + ' was not called'), s[0];
        }, n.dataTypes[0] = 'json', a = e[o], e[o] = function () {
            s = arguments;
        }, i.always(function () {
            e[o] = a, n[o] && (n.jsonpCallback = r.jsonpCallback, Fn.push(o)), s && (x.isFunction(a) && a(s[0])), s = a = t;
        }), 'script') : t;
    });
    var Pn, Rn, Wn = 0, $n = e.ActiveXObject && function () {
            var e;
            for (e in Pn)
                Pn[e](t, !0);
        };
    function In() {
        try {
            return new e.XMLHttpRequest();
        } catch (t) {
        }
    }
    function zn() {
        try {
            return new e.ActiveXObject('Microsoft.XMLHTTP');
        } catch (t) {
        }
    }
    x.ajaxSettings.xhr = e.ActiveXObject ? function () {
        return !this.isLocal && In() || zn();
    } : In, Rn = x.ajaxSettings.xhr(), x.support.cors = !!Rn && 'withCredentials' in Rn, Rn = x.support.ajax = !!Rn, Rn && x.ajaxTransport(function (n) {
        if (!n.crossDomain || x.support.cors) {
            var r;
            return {
                send: function (i, o) {
                    var a, s, l = n.xhr();
                    if (n.username ? l.open(n.type, n.url, n.async, n.username, n.password) : l.open(n.type, n.url, n.async), n.xhrFields)
                        for (s in n.xhrFields)
                            l[s] = n.xhrFields[s];
                    n.mimeType && (l.overrideMimeType && l.overrideMimeType(n.mimeType)), n.crossDomain || (i['X-Requested-With'] || (i['X-Requested-With'] = 'XMLHttpRequest'));
                    try {
                        for (s in i)
                            l.setRequestHeader(s, i[s]);
                    } catch (u) {
                    }
                    l.send(n.hasContent && n.data || null), r = function (e, i) {
                        var s, u, c, p;
                        try {
                            if (r && (i || 4 === l.readyState))
                                if (r = t, a && (l.onreadystatechange = x.noop, $n && delete Pn[a]), i)
                                    4 !== l.readyState && l.abort();
                                else {
                                    p = {}, s = l.status, u = l.getAllResponseHeaders(), 'string' == typeof l.responseText && (p.text = l.responseText);
                                    try {
                                        c = l.statusText;
                                    } catch (f) {
                                        c = '';
                                    }
                                    s || (!n.isLocal || n.crossDomain) ? 1223 === s && (s = 204) : s = p.text ? 200 : 404;
                                }
                        } catch (d) {
                            i || o(-1, d);
                        }
                        p && o(s, c, p, u);
                    }, n.async ? 4 === l.readyState ? setTimeout(r) : (a = ++Wn, $n && (Pn || (Pn = {}, x(e).unload($n)), Pn[a] = r), l.onreadystatechange = r) : r();
                },
                abort: function () {
                    r && r(t, !0);
                }
            };
        }
    });
    var Xn, Un, Vn = /^(?:toggle|show|hide)$/, Yn = RegExp('^(?:([+-])=|)(' + w + ')([a-z%]*)$', 'i'), Jn = /queueHooks$/, Gn = [nr], Qn = {
            '*': [function (e, t) {
                    var n = this.createTween(e, t), r = n.cur(), i = Yn.exec(t), o = i && i[3] || (x.cssNumber[e] ? '' : 'px'), a = (x.cssNumber[e] || 'px' !== o && +r) && Yn.exec(x.css(n.elem, e)), s = 1, l = 20;
                    if (a && a[3] !== o) {
                        o = o || a[3], i = i || [], a = +r || 1;
                        do
                            s = s || '.5', a /= s, x.style(n.elem, e, a + o);
                        while (s !== (s = n.cur() / r) && (1 !== s && --l));
                    }
                    return i && (a = n.start = +a || (+r || 0), n.unit = o, n.end = i[1] ? a + (i[1] + 1) * i[2] : +i[2]), n;
                }]
        };
    function Kn() {
        return setTimeout(function () {
            Xn = t;
        }), Xn = x.now();
    }
    function Zn(e, t, n) {
        var r, i = (Qn[t] || []).concat(Qn['*']), o = 0, a = i.length;
        for (; a > o; o++)
            if (r = i[o].call(n, t, e))
                return r;
    }
    function er(e, t, n) {
        var r, i, o = 0, a = Gn.length, s = x.Deferred().always(function () {
                delete l.elem;
            }), l = function () {
                if (i)
                    return !1;
                var t = Xn || Kn(), n = Math.max(0, u.startTime + u.duration - t), r = n / u.duration || 0, o = 1 - r, a = 0, l = u.tweens.length;
                for (; l > a; a++)
                    u.tweens[a].run(o);
                return s.notifyWith(e, [
                    u,
                    o,
                    n
                ]), 1 > o && l ? n : (s.resolveWith(e, [u]), !1);
            }, u = s.promise({
                elem: e,
                props: x.extend({}, t),
                opts: x.extend(!0, { specialEasing: {} }, n),
                originalProperties: t,
                originalOptions: n,
                startTime: Xn || Kn(),
                duration: n.duration,
                tweens: [],
                createTween: function (t, n) {
                    var r = x.Tween(e, u.opts, t, n, u.opts.specialEasing[t] || u.opts.easing);
                    return u.tweens.push(r), r;
                },
                stop: function (t) {
                    var n = 0, r = t ? u.tweens.length : 0;
                    if (i)
                        return this;
                    for (i = !0; r > n; n++)
                        u.tweens[n].run(1);
                    return t ? s.resolveWith(e, [
                        u,
                        t
                    ]) : s.rejectWith(e, [
                        u,
                        t
                    ]), this;
                }
            }), c = u.props;
        for (tr(c, u.opts.specialEasing); a > o; o++)
            if (r = Gn[o].call(u, e, c, u.opts))
                return r;
        return x.map(c, Zn, u), x.isFunction(u.opts.start) && u.opts.start.call(e, u), x.fx.timer(x.extend(l, {
            elem: e,
            anim: u,
            queue: u.opts.queue
        })), u.progress(u.opts.progress).done(u.opts.done, u.opts.complete).fail(u.opts.fail).always(u.opts.always);
    }
    function tr(e, t) {
        var n, r, i, o, a;
        for (n in e)
            if (r = x.camelCase(n), i = t[r], o = e[n], x.isArray(o) && (i = o[1], o = e[n] = o[0]), n !== r && (e[r] = o, delete e[n]), a = x.cssHooks[r], a && 'expand' in a) {
                o = a.expand(o), delete e[r];
                for (n in o)
                    n in e || (e[n] = o[n], t[n] = i);
            } else
                t[r] = i;
    }
    x.Animation = x.extend(er, {
        tweener: function (e, t) {
            x.isFunction(e) ? (t = e, e = ['*']) : e = e.split(' ');
            var n, r = 0, i = e.length;
            for (; i > r; r++)
                n = e[r], Qn[n] = Qn[n] || [], Qn[n].unshift(t);
        },
        prefilter: function (e, t) {
            t ? Gn.unshift(e) : Gn.push(e);
        }
    });
    function nr(e, t, n) {
        var r, i, o, a, s, l, u = this, c = {}, p = e.style, f = e.nodeType && nn(e), d = x._data(e, 'fxshow');
        n.queue || (s = x._queueHooks(e, 'fx'), null == s.unqueued && (s.unqueued = 0, l = s.empty.fire, s.empty.fire = function () {
            s.unqueued || l();
        }), s.unqueued++, u.always(function () {
            u.always(function () {
                s.unqueued--, x.queue(e, 'fx').length || s.empty.fire();
            });
        })), 1 === e.nodeType && (('height' in t || 'width' in t) && (n.overflow = [
            p.overflow,
            p.overflowX,
            p.overflowY
        ], 'inline' === x.css(e, 'display') && ('none' === x.css(e, 'float') && (x.support.inlineBlockNeedsLayout && 'inline' !== ln(e.nodeName) ? p.zoom = 1 : p.display = 'inline-block')))), n.overflow && (p.overflow = 'hidden', x.support.shrinkWrapBlocks || u.always(function () {
            p.overflow = n.overflow[0], p.overflowX = n.overflow[1], p.overflowY = n.overflow[2];
        }));
        for (r in t)
            if (i = t[r], Vn.exec(i)) {
                if (delete t[r], o = o || 'toggle' === i, i === (f ? 'hide' : 'show'))
                    continue;
                c[r] = d && d[r] || x.style(e, r);
            }
        if (!x.isEmptyObject(c)) {
            d ? 'hidden' in d && (f = d.hidden) : d = x._data(e, 'fxshow', {}), o && (d.hidden = !f), f ? x(e).show() : u.done(function () {
                x(e).hide();
            }), u.done(function () {
                var t;
                x._removeData(e, 'fxshow');
                for (t in c)
                    x.style(e, t, c[t]);
            });
            for (r in c)
                a = Zn(f ? d[r] : 0, r, u), r in d || (d[r] = a.start, f && (a.end = a.start, a.start = 'width' === r || 'height' === r ? 1 : 0));
        }
    }
    function rr(e, t, n, r, i) {
        return new rr.prototype.init(e, t, n, r, i);
    }
    x.Tween = rr, rr.prototype = {
        constructor: rr,
        init: function (e, t, n, r, i, o) {
            this.elem = e, this.prop = n, this.easing = i || 'swing', this.options = t, this.start = this.now = this.cur(), this.end = r, this.unit = o || (x.cssNumber[n] ? '' : 'px');
        },
        cur: function () {
            var e = rr.propHooks[this.prop];
            return e && e.get ? e.get(this) : rr.propHooks._default.get(this);
        },
        run: function (e) {
            var t, n = rr.propHooks[this.prop];
            return this.pos = t = this.options.duration ? x.easing[this.easing](e, this.options.duration * e, 0, 1, this.options.duration) : e, this.now = (this.end - this.start) * t + this.start, this.options.step && this.options.step.call(this.elem, this.now, this), n && n.set ? n.set(this) : rr.propHooks._default.set(this), this;
        }
    }, rr.prototype.init.prototype = rr.prototype, rr.propHooks = {
        _default: {
            get: function (e) {
                var t;
                return null == e.elem[e.prop] || e.elem.style && null != e.elem.style[e.prop] ? (t = x.css(e.elem, e.prop, ''), t && 'auto' !== t ? t : 0) : e.elem[e.prop];
            },
            set: function (e) {
                x.fx.step[e.prop] ? x.fx.step[e.prop](e) : e.elem.style && (null != e.elem.style[x.cssProps[e.prop]] || x.cssHooks[e.prop]) ? x.style(e.elem, e.prop, e.now + e.unit) : e.elem[e.prop] = e.now;
            }
        }
    }, rr.propHooks.scrollTop = rr.propHooks.scrollLeft = {
        set: function (e) {
            e.elem.nodeType && (e.elem.parentNode && (e.elem[e.prop] = e.now));
        }
    }, x.each([
        'toggle',
        'show',
        'hide'
    ], function (e, t) {
        var n = x.fn[t];
        x.fn[t] = function (e, r, i) {
            return null == e || 'boolean' == typeof e ? n.apply(this, arguments) : this.animate(ir(t, !0), e, r, i);
        };
    }), x.fn.extend({
        fadeTo: function (e, t, n, r) {
            return this.filter(nn).css('opacity', 0).show().end().animate({ opacity: t }, e, n, r);
        },
        animate: function (e, t, n, r) {
            var i = x.isEmptyObject(e), o = x.speed(t, n, r), a = function () {
                    var t = er(this, x.extend({}, e), o);
                    (i || x._data(this, 'finish')) && t.stop(!0);
                };
            return a.finish = a, i || o.queue === !1 ? this.each(a) : this.queue(o.queue, a);
        },
        stop: function (e, n, r) {
            var i = function (e) {
                var t = e.stop;
                delete e.stop, t(r);
            };
            return 'string' != typeof e && (r = n, n = e, e = t), n && (e !== !1 && this.queue(e || 'fx', [])), this.each(function () {
                var t = !0, n = null != e && e + 'queueHooks', o = x.timers, a = x._data(this);
                if (n)
                    a[n] && (a[n].stop && i(a[n]));
                else
                    for (n in a)
                        a[n] && (a[n].stop && (Jn.test(n) && i(a[n])));
                for (n = o.length; n--;)
                    o[n].elem !== this || (null != e && o[n].queue !== e || (o[n].anim.stop(r), t = !1, o.splice(n, 1)));
                (t || !r) && x.dequeue(this, e);
            });
        },
        finish: function (e) {
            return e !== !1 && (e = e || 'fx'), this.each(function () {
                var t, n = x._data(this), r = n[e + 'queue'], i = n[e + 'queueHooks'], o = x.timers, a = r ? r.length : 0;
                for (n.finish = !0, x.queue(this, e, []), i && (i.stop && i.stop.call(this, !0)), t = o.length; t--;)
                    o[t].elem === this && (o[t].queue === e && (o[t].anim.stop(!0), o.splice(t, 1)));
                for (t = 0; a > t; t++)
                    r[t] && (r[t].finish && r[t].finish.call(this));
                delete n.finish;
            });
        }
    });
    function ir(e, t) {
        var n, r = { height: e }, i = 0;
        for (t = t ? 1 : 0; 4 > i; i += 2 - t)
            n = Zt[i], r['margin' + n] = r['padding' + n] = e;
        return t && (r.opacity = r.width = e), r;
    }
    x.each({
        slideDown: ir('show'),
        slideUp: ir('hide'),
        slideToggle: ir('toggle'),
        fadeIn: { opacity: 'show' },
        fadeOut: { opacity: 'hide' },
        fadeToggle: { opacity: 'toggle' }
    }, function (e, t) {
        x.fn[e] = function (e, n, r) {
            return this.animate(t, e, n, r);
        };
    }), x.speed = function (e, t, n) {
        var r = e && 'object' == typeof e ? x.extend({}, e) : {
            complete: n || (!n && t || x.isFunction(e) && e),
            duration: e,
            easing: n && t || t && (!x.isFunction(t) && t)
        };
        return r.duration = x.fx.off ? 0 : 'number' == typeof r.duration ? r.duration : r.duration in x.fx.speeds ? x.fx.speeds[r.duration] : x.fx.speeds._default, (null == r.queue || r.queue === !0) && (r.queue = 'fx'), r.old = r.complete, r.complete = function () {
            x.isFunction(r.old) && r.old.call(this), r.queue && x.dequeue(this, r.queue);
        }, r;
    }, x.easing = {
        linear: function (e) {
            return e;
        },
        swing: function (e) {
            return 0.5 - Math.cos(e * Math.PI) / 2;
        }
    }, x.timers = [], x.fx = rr.prototype.init, x.fx.tick = function () {
        var e, n = x.timers, r = 0;
        for (Xn = x.now(); n.length > r; r++)
            e = n[r], e() || (n[r] !== e || n.splice(r--, 1));
        n.length || x.fx.stop(), Xn = t;
    }, x.fx.timer = function (e) {
        e() && (x.timers.push(e) && x.fx.start());
    }, x.fx.interval = 13, x.fx.start = function () {
        Un || (Un = setInterval(x.fx.tick, x.fx.interval));
    }, x.fx.stop = function () {
        clearInterval(Un), Un = null;
    }, x.fx.speeds = {
        slow: 600,
        fast: 200,
        _default: 400
    }, x.fx.step = {}, x.expr && (x.expr.filters && (x.expr.filters.animated = function (e) {
        return x.grep(x.timers, function (t) {
            return e === t.elem;
        }).length;
    })), x.fn.offset = function (e) {
        if (arguments.length)
            return e === t ? this : this.each(function (t) {
                x.offset.setOffset(this, e, t);
            });
        var n, r, o = {
                top: 0,
                left: 0
            }, a = this[0], s = a && a.ownerDocument;
        if (s)
            return n = s.documentElement, x.contains(n, a) ? (typeof a.getBoundingClientRect !== i && (o = a.getBoundingClientRect()), r = or(s), {
                top: o.top + (r.pageYOffset || n.scrollTop) - (n.clientTop || 0),
                left: o.left + (r.pageXOffset || n.scrollLeft) - (n.clientLeft || 0)
            }) : o;
    }, x.offset = {
        setOffset: function (e, t, n) {
            var r = x.css(e, 'position');
            'static' === r && (e.style.position = 'relative');
            var i = x(e), o = i.offset(), a = x.css(e, 'top'), s = x.css(e, 'left'), l = ('absolute' === r || 'fixed' === r) && x.inArray('auto', [
                    a,
                    s
                ]) > -1, u = {}, c = {}, p, f;
            l ? (c = i.position(), p = c.top, f = c.left) : (p = parseFloat(a) || 0, f = parseFloat(s) || 0), x.isFunction(t) && (t = t.call(e, n, o)), null != t.top && (u.top = t.top - o.top + p), null != t.left && (u.left = t.left - o.left + f), 'using' in t ? t.using.call(e, u) : i.css(u);
        }
    }, x.fn.extend({
        position: function () {
            if (this[0]) {
                var e, t, n = {
                        top: 0,
                        left: 0
                    }, r = this[0];
                return 'fixed' === x.css(r, 'position') ? t = r.getBoundingClientRect() : (e = this.offsetParent(), t = this.offset(), x.nodeName(e[0], 'html') || (n = e.offset()), n.top += x.css(e[0], 'borderTopWidth', !0), n.left += x.css(e[0], 'borderLeftWidth', !0)), {
                    top: t.top - n.top - x.css(r, 'marginTop', !0),
                    left: t.left - n.left - x.css(r, 'marginLeft', !0)
                };
            }
        },
        offsetParent: function () {
            return this.map(function () {
                var e = this.offsetParent || s;
                while (e && (!x.nodeName(e, 'html') && 'static' === x.css(e, 'position')))
                    e = e.offsetParent;
                return e || s;
            });
        }
    }), x.each({
        scrollLeft: 'pageXOffset',
        scrollTop: 'pageYOffset'
    }, function (e, n) {
        var r = /Y/.test(n);
        x.fn[e] = function (i) {
            return x.access(this, function (e, i, o) {
                var a = or(e);
                return o === t ? a ? n in a ? a[n] : a.document.documentElement[i] : e[i] : (a ? a.scrollTo(r ? x(a).scrollLeft() : o, r ? o : x(a).scrollTop()) : e[i] = o, t);
            }, e, i, arguments.length, null);
        };
    });
    function or(e) {
        return x.isWindow(e) ? e : 9 === e.nodeType ? e.defaultView || e.parentWindow : !1;
    }
    x.each({
        Height: 'height',
        Width: 'width'
    }, function (e, n) {
        x.each({
            padding: 'inner' + e,
            content: n,
            '': 'outer' + e
        }, function (r, i) {
            x.fn[i] = function (i, o) {
                var a = arguments.length && (r || 'boolean' != typeof i), s = r || (i === !0 || o === !0 ? 'margin' : 'border');
                return x.access(this, function (n, r, i) {
                    var o;
                    return x.isWindow(n) ? n.document.documentElement['client' + e] : 9 === n.nodeType ? (o = n.documentElement, Math.max(n.body['scroll' + e], o['scroll' + e], n.body['offset' + e], o['offset' + e], o['client' + e])) : i === t ? x.css(n, r, s) : x.style(n, r, i, s);
                }, n, a ? i : t, a, null);
            };
        });
    }), x.fn.size = function () {
        return this.length;
    }, x.fn.andSelf = x.fn.addBack, 'object' == typeof module && (module && 'object' == typeof module.exports) ? module.exports = x : (e.jQuery = e.$ = x, 'function' == typeof define && (define.amd && define('jquery', [], function () {
        return x;
    })));
}(window));

window.Modernizr = function (a, b, c) {
    function A(a) {
        j.cssText = a;
    }
    function B(a, b) {
        return A(n.join(a + ';') + (b || ''));
    }
    function C(a, b) {
        return typeof a === b;
    }
    function D(a, b) {
        return !!~('' + a).indexOf(b);
    }
    function E(a, b) {
        for (var d in a) {
            var e = a[d];
            if (!D(e, '-') && j[e] !== c)
                return b == 'pfx' ? e : !0;
        }
        return !1;
    }
    function F(a, b, d) {
        for (var e in a) {
            var f = b[a[e]];
            if (f !== c)
                return d === !1 ? a[e] : C(f, 'function') ? f.bind(d || b) : f;
        }
        return !1;
    }
    function G(a, b, c) {
        var d = a.charAt(0).toUpperCase() + a.slice(1), e = (a + ' ' + p.join(d + ' ') + d).split(' ');
        return C(b, 'string') || C(b, 'undefined') ? E(e, b) : (e = (a + ' ' + q.join(d + ' ') + d).split(' '), F(e, b, c));
    }
    var d = '2.6.2', e = {}, f = !0, g = b.documentElement, h = 'modernizr', i = b.createElement(h), j = i.style, k, l = ':)', m = {}.toString, n = ' -webkit- -moz- -o- -ms- '.split(' '), o = 'Webkit Moz O ms', p = o.split(' '), q = o.toLowerCase().split(' '), r = {}, s = {}, t = {}, u = [], v = u.slice, w, x = function (a, c, d, e) {
            var f, i, j, k, l = b.createElement('div'), m = b.body, n = m || b.createElement('body');
            if (parseInt(d, 10))
                while (d--)
                    j = b.createElement('div'), j.id = e ? e[d] : h + (d + 1), l.appendChild(j);
            return f = [
                '&#173;',
                '<style id="s',
                h,
                '">',
                a,
                '</style>'
            ].join(''), l.id = h, (m ? l : n).innerHTML += f, n.appendChild(l), m || (n.style.background = '', n.style.overflow = 'hidden', k = g.style.overflow, g.style.overflow = 'hidden', g.appendChild(n)), i = c(l, a), m ? l.parentNode.removeChild(l) : (n.parentNode.removeChild(n), g.style.overflow = k), !!i;
        }, y = {}.hasOwnProperty, z;
    !C(y, 'undefined') && !C(y.call, 'undefined') ? z = function (a, b) {
        return y.call(a, b);
    } : z = function (a, b) {
        return b in a && C(a.constructor.prototype[b], 'undefined');
    }, Function.prototype.bind || (Function.prototype.bind = function (b) {
        var c = this;
        if (typeof c != 'function')
            throw new TypeError();
        var d = v.call(arguments, 1), e = function () {
                if (this instanceof e) {
                    var a = function () {
                    };
                    a.prototype = c.prototype;
                    var f = new a(), g = c.apply(f, d.concat(v.call(arguments)));
                    return Object(g) === g ? g : f;
                }
                return c.apply(b, d.concat(v.call(arguments)));
            };
        return e;
    }), r.flexbox = function () {
        return G('flexWrap');
    }, r.flexboxlegacy = function () {
        return G('boxDirection');
    }, r.canvas = function () {
        var a = b.createElement('canvas');
        return !!a.getContext && !!a.getContext('2d');
    }, r.touch = function () {
        var c;
        return 'ontouchstart' in a || a.DocumentTouch && b instanceof DocumentTouch ? c = !0 : x([
            '@media (',
            n.join('touch-enabled),('),
            h,
            ')',
            '{#modernizr{top:9px;position:absolute}}'
        ].join(''), function (a) {
            c = a.offsetTop === 9;
        }), c;
    }, r.rgba = function () {
        return A('background-color:rgba(150,255,150,.5)'), D(j.backgroundColor, 'rgba');
    }, r.hsla = function () {
        return A('background-color:hsla(120,40%,100%,.5)'), D(j.backgroundColor, 'rgba') || D(j.backgroundColor, 'hsla');
    }, r.multiplebgs = function () {
        return A('background:url(https://),url(https://),red url(https://)'), /(url\s*\(.*?){3}/.test(j.background);
    }, r.backgroundsize = function () {
        return G('backgroundSize');
    }, r.borderimage = function () {
        return G('borderImage');
    }, r.borderradius = function () {
        return G('borderRadius');
    }, r.boxshadow = function () {
        return G('boxShadow');
    }, r.textshadow = function () {
        return b.createElement('div').style.textShadow === '';
    }, r.opacity = function () {
        return B('opacity:.55'), /^0.55$/.test(j.opacity);
    }, r.cssanimations = function () {
        return G('animationName');
    }, r.csscolumns = function () {
        return G('columnCount');
    }, r.cssgradients = function () {
        var a = 'background-image:', b = 'gradient(linear,left top,right bottom,from(#9f9),to(white));', c = 'linear-gradient(left top,#9f9, white);';
        return A((a + '-webkit- '.split(' ').join(b + a) + n.join(c + a)).slice(0, -a.length)), D(j.backgroundImage, 'gradient');
    }, r.cssreflections = function () {
        return G('boxReflect');
    }, r.csstransforms = function () {
        return !!G('transform');
    }, r.csstransforms3d = function () {
        var a = !!G('perspective');
        return a && ('webkitPerspective' in g.style && x('@media (transform-3d),(-webkit-transform-3d){#modernizr{left:9px;position:absolute;height:3px;}}', function (b, c) {
            a = b.offsetLeft === 9 && b.offsetHeight === 3;
        })), a;
    }, r.csstransitions = function () {
        return G('transition');
    }, r.fontface = function () {
        var a;
        return x('@font-face {font-family:"font";src:url("https://")}', function (c, d) {
            var e = b.getElementById('smodernizr'), f = e.sheet || e.styleSheet, g = f ? f.cssRules && f.cssRules[0] ? f.cssRules[0].cssText : f.cssText || '' : '';
            a = /src/i.test(g) && g.indexOf(d.split(' ')[0]) === 0;
        }), a;
    }, r.generatedcontent = function () {
        var a;
        return x([
            '#',
            h,
            '{font:0/0 a}#',
            h,
            ':after{content:"',
            l,
            '";visibility:hidden;font:3px/1 a}'
        ].join(''), function (b) {
            a = b.offsetHeight >= 3;
        }), a;
    }, r.video = function () {
        var a = b.createElement('video'), c = !1;
        try {
            if (c = !!a.canPlayType)
                c = new Boolean(c), c.ogg = a.canPlayType('video/ogg; codecs="theora"').replace(/^no$/, ''), c.h264 = a.canPlayType('video/mp4; codecs="avc1.42E01E"').replace(/^no$/, ''), c.webm = a.canPlayType('video/webm; codecs="vp8, vorbis"').replace(/^no$/, '');
        } catch (d) {
        }
        return c;
    }, r.audio = function () {
        var a = b.createElement('audio'), c = !1;
        try {
            if (c = !!a.canPlayType)
                c = new Boolean(c), c.ogg = a.canPlayType('audio/ogg; codecs="vorbis"').replace(/^no$/, ''), c.mp3 = a.canPlayType('audio/mpeg;').replace(/^no$/, ''), c.wav = a.canPlayType('audio/wav; codecs="1"').replace(/^no$/, ''), c.m4a = (a.canPlayType('audio/x-m4a;') || a.canPlayType('audio/aac;')).replace(/^no$/, '');
        } catch (d) {
        }
        return c;
    }, r.applicationcache = function () {
        return !!a.applicationCache;
    };
    for (var H in r)
        z(r, H) && (w = H.toLowerCase(), e[w] = r[H](), u.push((e[w] ? '' : 'no-') + w));
    return e.addTest = function (a, b) {
        if (typeof a == 'object')
            for (var d in a)
                z(a, d) && e.addTest(d, a[d]);
        else {
            a = a.toLowerCase();
            if (e[a] !== c)
                return e;
            b = typeof b == 'function' ? b() : b, typeof f != 'undefined' && (f && (g.className += ' ' + (b ? '' : 'no-') + a)), e[a] = b;
        }
        return e;
    }, A(''), i = k = null, function (a, b) {
        function k(a, b) {
            var c = a.createElement('p'), d = a.getElementsByTagName('head')[0] || a.documentElement;
            return c.innerHTML = 'x<style>' + b + '</style>', d.insertBefore(c.lastChild, d.firstChild);
        }
        function l() {
            var a = r.elements;
            return typeof a == 'string' ? a.split(' ') : a;
        }
        function m(a) {
            var b = i[a[g]];
            return b || (b = {}, h++, a[g] = h, i[h] = b), b;
        }
        function n(a, c, f) {
            c || (c = b);
            if (j)
                return c.createElement(a);
            f || (f = m(c));
            var g;
            return f.cache[a] ? g = f.cache[a].cloneNode() : e.test(a) ? g = (f.cache[a] = f.createElem(a)).cloneNode() : g = f.createElem(a), g.canHaveChildren && !d.test(a) ? f.frag.appendChild(g) : g;
        }
        function o(a, c) {
            a || (a = b);
            if (j)
                return a.createDocumentFragment();
            c = c || m(a);
            var d = c.frag.cloneNode(), e = 0, f = l(), g = f.length;
            for (; e < g; e++)
                d.createElement(f[e]);
            return d;
        }
        function p(a, b) {
            b.cache || (b.cache = {}, b.createElem = a.createElement, b.createFrag = a.createDocumentFragment, b.frag = b.createFrag()), a.createElement = function (c) {
                return r.shivMethods ? n(c, a, b) : b.createElem(c);
            }, a.createDocumentFragment = Function('h,f', 'return function(){var n=f.cloneNode(),c=n.createElement;h.shivMethods&&(' + l().join().replace(/\w+/g, function (a) {
                return b.createElem(a), b.frag.createElement(a), 'c("' + a + '")';
            }) + ');return n}')(r, b.frag);
        }
        function q(a) {
            a || (a = b);
            var c = m(a);
            return r.shivCSS && (!f && (!c.hasCSS && (c.hasCSS = !!k(a, 'article,aside,figcaption,figure,footer,header,hgroup,nav,section{display:block}mark{background:#FF0;color:#000}')))), j || p(a, c), a;
        }
        var c = a.html5 || {}, d = /^<|^(?:button|map|select|textarea|object|iframe|option|optgroup)$/i, e = /^(?:a|b|code|div|fieldset|h1|h2|h3|h4|h5|h6|i|label|li|ol|p|q|span|strong|style|table|tbody|td|th|tr|ul)$/i, f, g = '_html5shiv', h = 0, i = {}, j;
        (function () {
            try {
                var a = b.createElement('a');
                a.innerHTML = '<xyz></xyz>', f = 'hidden' in a, j = a.childNodes.length == 1 || function () {
                    b.createElement('a');
                    var a = b.createDocumentFragment();
                    return typeof a.cloneNode == 'undefined' || (typeof a.createDocumentFragment == 'undefined' || typeof a.createElement == 'undefined');
                }();
            } catch (c) {
                f = !0, j = !0;
            }
        }());
        var r = {
            elements: c.elements || 'abbr article aside audio bdi canvas data datalist details figcaption figure footer header hgroup mark meter nav output progress section summary time video',
            shivCSS: c.shivCSS !== !1,
            supportsUnknownElements: j,
            shivMethods: c.shivMethods !== !1,
            type: 'default',
            shivDocument: q,
            createElement: n,
            createDocumentFragment: o
        };
        a.html5 = r, q(b);
    }(this, b), e._version = d, e._prefixes = n, e._domPrefixes = q, e._cssomPrefixes = p, e.testProp = function (a) {
        return E([a]);
    }, e.testAllProps = G, e.testStyles = x, g.className = g.className.replace(/(^|\s)no-js(\s|$)/, '$1$2') + (f ? ' js ' + u.join(' ') : ''), e;
}(this, this.document), function (a, b, c) {
    function d(a) {
        return '[object Function]' == o.call(a);
    }
    function e(a) {
        return 'string' == typeof a;
    }
    function f() {
    }
    function g(a) {
        return !a || ('loaded' == a || ('complete' == a || 'uninitialized' == a));
    }
    function h() {
        var a = p.shift();
        q = 1, a ? a.t ? m(function () {
            ('c' == a.t ? B.injectCss : B.injectJs)(a.s, 0, a.a, a.x, a.e, 1);
        }, 0) : (a(), h()) : q = 0;
    }
    function i(a, c, d, e, f, i, j) {
        function k(b) {
            if (!o && (g(l.readyState) && (u.r = o = 1, !q && h(), l.onload = l.onreadystatechange = null, b))) {
                'img' != a && m(function () {
                    t.removeChild(l);
                }, 50);
                for (var d in y[c])
                    y[c].hasOwnProperty(d) && y[c][d].onload();
            }
        }
        var j = j || B.errorTimeout, l = b.createElement(a), o = 0, r = 0, u = {
                t: d,
                s: c,
                e: f,
                a: i,
                x: j
            };
        1 === y[c] && (r = 1, y[c] = []), 'object' == a ? l.data = c : (l.src = c, l.type = a), l.width = l.height = '0', l.onerror = l.onload = l.onreadystatechange = function () {
            k.call(this, r);
        }, p.splice(e, 0, u), 'img' != a && (r || 2 === y[c] ? (t.insertBefore(l, s ? null : n), m(k, j)) : y[c].push(l));
    }
    function j(a, b, c, d, f) {
        return q = 0, b = b || 'j', e(a) ? i('c' == b ? v : u, a, b, this.i++, c, d, f) : (p.splice(this.i++, 0, a), 1 == p.length && h()), this;
    }
    function k() {
        var a = B;
        return a.loader = {
            load: j,
            i: 0
        }, a;
    }
    var l = b.documentElement, m = a.setTimeout, n = b.getElementsByTagName('script')[0], o = {}.toString, p = [], q = 0, r = 'MozAppearance' in l.style, s = r && !!b.createRange().compareNode, t = s ? l : n.parentNode, l = a.opera && '[object Opera]' == o.call(a.opera), l = !!b.attachEvent && !l, u = r ? 'object' : l ? 'script' : 'img', v = l ? 'script' : u, w = Array.isArray || function (a) {
            return '[object Array]' == o.call(a);
        }, x = [], y = {}, z = {
            timeout: function (a, b) {
                return b.length && (a.timeout = b[0]), a;
            }
        }, A, B;
    B = function (a) {
        function b(a) {
            var a = a.split('!'), b = x.length, c = a.pop(), d = a.length, c = {
                    url: c,
                    origUrl: c,
                    prefixes: a
                }, e, f, g;
            for (f = 0; f < d; f++)
                g = a[f].split('='), (e = z[g.shift()]) && (c = e(c, g));
            for (f = 0; f < b; f++)
                c = x[f](c);
            return c;
        }
        function g(a, e, f, g, h) {
            var i = b(a), j = i.autoCallback;
            i.url.split('.').pop().split('?').shift(), i.bypass || (e && (e = d(e) ? e : e[a] || (e[g] || e[a.split('/').pop().split('?')[0]])), i.instead ? i.instead(a, e, f, g, h) : (y[i.url] ? i.noexec = !0 : y[i.url] = 1, f.load(i.url, i.forceCSS || !i.forceJS && 'css' == i.url.split('.').pop().split('?').shift() ? 'c' : c, i.noexec, i.attrs, i.timeout), (d(e) || d(j)) && f.load(function () {
                k(), e && e(i.origUrl, h, g), j && j(i.origUrl, h, g), y[i.url] = 2;
            })));
        }
        function h(a, b) {
            function c(a, c) {
                if (a)
                    if (e(a))
                        c || (j = function () {
                            var a = [].slice.call(arguments);
                            k.apply(this, a), l();
                        }), g(a, j, b, 0, h);
                    else {
                        if (Object(a) === a)
                            for (n in m = function () {
                                    var b = 0, c;
                                    for (c in a)
                                        a.hasOwnProperty(c) && b++;
                                    return b;
                                }(), a)
                                a.hasOwnProperty(n) && (!c && (!--m && (d(j) ? j = function () {
                                    var a = [].slice.call(arguments);
                                    k.apply(this, a), l();
                                } : j[n] = function (a) {
                                    return function () {
                                        var b = [].slice.call(arguments);
                                        a && a.apply(this, b), l();
                                    };
                                }(k[n]))), g(a[n], j, b, n, h));
                    }
                else
                    !c && l();
            }
            var h = !!a.test, i = a.load || a.both, j = a.callback || f, k = j, l = a.complete || f, m, n;
            c(h ? a.yep : a.nope, !!i), i && c(i);
        }
        var i, j, l = this.yepnope.loader;
        if (e(a))
            g(a, 0, l, 0);
        else if (w(a))
            for (i = 0; i < a.length; i++)
                j = a[i], e(j) ? g(j, 0, l, 0) : w(j) ? B(j) : Object(j) === j && h(j, l);
        else
            Object(a) === a && h(a, l);
    }, B.addPrefix = function (a, b) {
        z[a] = b;
    }, B.addFilter = function (a) {
        x.push(a);
    }, B.errorTimeout = 10000, null == b.readyState && (b.addEventListener && (b.readyState = 'loading', b.addEventListener('DOMContentLoaded', A = function () {
        b.removeEventListener('DOMContentLoaded', A, 0), b.readyState = 'complete';
    }, 0))), a.yepnope = k(), a.yepnope.executeStack = h, a.yepnope.injectJs = function (a, c, d, e, i, j) {
        var k = b.createElement('script'), l, o, e = e || B.errorTimeout;
        k.src = a;
        for (o in d)
            k.setAttribute(o, d[o]);
        c = j ? h : c || f, k.onreadystatechange = k.onload = function () {
            !l && (g(k.readyState) && (l = 1, c(), k.onload = k.onreadystatechange = null));
        }, m(function () {
            l || (l = 1, c(1));
        }, e), i ? k.onload() : n.parentNode.insertBefore(k, n);
    }, a.yepnope.injectCss = function (a, c, d, e, g, i) {
        var e = b.createElement('link'), j, c = i ? h : c || f;
        e.href = a, e.rel = 'stylesheet', e.type = 'text/css';
        for (j in d)
            e.setAttribute(j, d[j]);
        g || (n.parentNode.insertBefore(e, n), m(c, 0));
    };
}(this, document), Modernizr.load = function () {
    yepnope.apply(window, [].slice.call(arguments, 0));
};
define('modernizr', [], function () {
    return;
});

;
(function (window) {
    if (window.jQuery) {
        return;
    }
    var $ = function (selector, context) {
        return new $.fn.init(selector, context);
    };
    $.isWindow = function (obj) {
        return obj != null && obj == obj.window;
    };
    $.type = function (obj) {
        if (obj == null) {
            return obj + '';
        }
        return typeof obj === 'object' || typeof obj === 'function' ? class2type[toString.call(obj)] || 'object' : typeof obj;
    };
    $.isArray = Array.isArray || function (obj) {
        return $.type(obj) === 'array';
    };
    function isArraylike(obj) {
        var length = obj.length, type = $.type(obj);
        if (type === 'function' || $.isWindow(obj)) {
            return false;
        }
        if (obj.nodeType === 1 && length) {
            return true;
        }
        return type === 'array' || length === 0 || typeof length === 'number' && length > 0 && length - 1 in obj;
    }
    $.isPlainObject = function (obj) {
        var key;
        if (!obj || $.type(obj) !== 'object' || obj.nodeType || $.isWindow(obj)) {
            return false;
        }
        try {
            if (obj.constructor && !hasOwn.call(obj, 'constructor') && !hasOwn.call(obj.constructor.prototype, 'isPrototypeOf')) {
                return false;
            }
        } catch (e) {
            return false;
        }
        for (key in obj) {
        }
        return key === undefined || hasOwn.call(obj, key);
    };
    $.each = function (obj, callback, args) {
        var value, i = 0, length = obj.length, isArray = isArraylike(obj);
        if (args) {
            if (isArray) {
                for (; i < length; i++) {
                    value = callback.apply(obj[i], args);
                    if (value === false) {
                        break;
                    }
                }
            } else {
                for (i in obj) {
                    value = callback.apply(obj[i], args);
                    if (value === false) {
                        break;
                    }
                }
            }
        } else {
            if (isArray) {
                for (; i < length; i++) {
                    value = callback.call(obj[i], i, obj[i]);
                    if (value === false) {
                        break;
                    }
                }
            } else {
                for (i in obj) {
                    value = callback.call(obj[i], i, obj[i]);
                    if (value === false) {
                        break;
                    }
                }
            }
        }
        return obj;
    };
    $.data = function (node, key, value) {
        if (value === undefined) {
            var id = node[$.expando], store = id && cache[id];
            if (key === undefined) {
                return store;
            } else if (store) {
                if (key in store) {
                    return store[key];
                }
            }
        } else if (key !== undefined) {
            var id = node[$.expando] || (node[$.expando] = ++$.uuid);
            cache[id] = cache[id] || {};
            cache[id][key] = value;
            return value;
        }
    };
    $.removeData = function (node, keys) {
        var id = node[$.expando], store = id && cache[id];
        if (store) {
            $.each(keys, function (_, key) {
                delete store[key];
            });
        }
    };
    $.extend = function () {
        var src, copyIsArray, copy, name, options, clone, target = arguments[0] || {}, i = 1, length = arguments.length, deep = false;
        if (typeof target === 'boolean') {
            deep = target;
            target = arguments[i] || {};
            i++;
        }
        if (typeof target !== 'object' && $.type(target) !== 'function') {
            target = {};
        }
        if (i === length) {
            target = this;
            i--;
        }
        for (; i < length; i++) {
            if ((options = arguments[i]) != null) {
                for (name in options) {
                    src = target[name];
                    copy = options[name];
                    if (target === copy) {
                        continue;
                    }
                    if (deep && copy && ($.isPlainObject(copy) || (copyIsArray = $.isArray(copy)))) {
                        if (copyIsArray) {
                            copyIsArray = false;
                            clone = src && $.isArray(src) ? src : [];
                        } else {
                            clone = src && $.isPlainObject(src) ? src : {};
                        }
                        target[name] = $.extend(deep, clone, copy);
                    } else if (copy !== undefined) {
                        target[name] = copy;
                    }
                }
            }
        }
        return target;
    };
    $.queue = function (elem, type, data) {
        function $makeArray(arr, results) {
            var ret = results || [];
            if (arr != null) {
                if (isArraylike(Object(arr))) {
                    (function (first, second) {
                        var len = +second.length, j = 0, i = first.length;
                        while (j < len) {
                            first[i++] = second[j++];
                        }
                        if (len !== len) {
                            while (second[j] !== undefined) {
                                first[i++] = second[j++];
                            }
                        }
                        first.length = i;
                        return first;
                    }(ret, typeof arr === 'string' ? [arr] : arr));
                } else {
                    [].push.call(ret, arr);
                }
            }
            return ret;
        }
        if (!elem) {
            return;
        }
        type = (type || 'fx') + 'queue';
        var q = $.data(elem, type);
        if (!data) {
            return q || [];
        }
        if (!q || $.isArray(data)) {
            q = $.data(elem, type, $makeArray(data));
        } else {
            q.push(data);
        }
        return q;
    };
    $.dequeue = function (elems, type) {
        $.each(elems.nodeType ? [elems] : elems, function (i, elem) {
            type = type || 'fx';
            var queue = $.queue(elem, type), fn = queue.shift();
            if (fn === 'inprogress') {
                fn = queue.shift();
            }
            if (fn) {
                if (type === 'fx') {
                    queue.unshift('inprogress');
                }
                fn.call(elem, function () {
                    $.dequeue(elem, type);
                });
            }
        });
    };
    $.fn = $.prototype = {
        init: function (selector) {
            if (selector.nodeType) {
                this[0] = selector;
                return this;
            } else {
                throw new Error('Not a DOM node.');
            }
        },
        offset: function () {
            var box = this[0].getBoundingClientRect ? this[0].getBoundingClientRect() : {
                top: 0,
                left: 0
            };
            return {
                top: box.top + (window.pageYOffset || document.scrollTop || 0) - (document.clientTop || 0),
                left: box.left + (window.pageXOffset || document.scrollLeft || 0) - (document.clientLeft || 0)
            };
        },
        position: function () {
            function offsetParent() {
                var offsetParent = this.offsetParent || document;
                while (offsetParent && (!offsetParent.nodeType.toLowerCase === 'html' && offsetParent.style.position === 'static')) {
                    offsetParent = offsetParent.offsetParent;
                }
                return offsetParent || document;
            }
            var elem = this[0], offsetParent = offsetParent.apply(elem), offset = this.offset(), parentOffset = /^(?:body|html)$/i.test(offsetParent.nodeName) ? {
                    top: 0,
                    left: 0
                } : $(offsetParent).offset();
            offset.top -= parseFloat(elem.style.marginTop) || 0;
            offset.left -= parseFloat(elem.style.marginLeft) || 0;
            if (offsetParent.style) {
                parentOffset.top += parseFloat(offsetParent.style.borderTopWidth) || 0;
                parentOffset.left += parseFloat(offsetParent.style.borderLeftWidth) || 0;
            }
            return {
                top: offset.top - parentOffset.top,
                left: offset.left - parentOffset.left
            };
        }
    };
    var cache = {};
    $.expando = 'velocity' + new Date().getTime();
    $.uuid = 0;
    var class2type = {}, hasOwn = class2type.hasOwnProperty, toString = class2type.toString;
    var types = 'Boolean Number String Function Array Date RegExp Object Error'.split(' ');
    for (var i = 0; i < types.length; i++) {
        class2type['[object ' + types[i] + ']'] = types[i].toLowerCase();
    }
    $.fn.init.prototype = $.fn;
    window.Velocity = { Utilities: $ };
}(window));
;
(function (factory) {
    if (typeof module === 'object' && typeof module.exports === 'object') {
        module.exports = factory();
    } else if (typeof define === 'function' && define.amd) {
        define('velocity', [], factory);
    } else {
        factory();
    }
}(function () {
    return function (global, window, document, undefined) {
        var IE = function () {
            if (document.documentMode) {
                return document.documentMode;
            } else {
                for (var i = 7; i > 4; i--) {
                    var div = document.createElement('div');
                    div.innerHTML = '<!--[if IE ' + i + ']><span></span><![endif]-->';
                    if (div.getElementsByTagName('span').length) {
                        div = null;
                        return i;
                    }
                }
            }
            return undefined;
        }();
        var rAFShim = function () {
            var timeLast = 0;
            return window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function (callback) {
                var timeCurrent = new Date().getTime(), timeDelta;
                timeDelta = Math.max(0, 16 - (timeCurrent - timeLast));
                timeLast = timeCurrent + timeDelta;
                return setTimeout(function () {
                    callback(timeCurrent + timeDelta);
                }, timeDelta);
            };
        }();
        function compactSparseArray(array) {
            var index = -1, length = array ? array.length : 0, result = [];
            while (++index < length) {
                var value = array[index];
                if (value) {
                    result.push(value);
                }
            }
            return result;
        }
        function sanitizeElements(elements) {
            if (Type.isWrapped(elements)) {
                elements = [].slice.call(elements);
            } else if (Type.isNode(elements)) {
                elements = [elements];
            }
            return elements;
        }
        var Type = {
            isString: function (variable) {
                return typeof variable === 'string';
            },
            isArray: Array.isArray || function (variable) {
                return Object.prototype.toString.call(variable) === '[object Array]';
            },
            isFunction: function (variable) {
                return Object.prototype.toString.call(variable) === '[object Function]';
            },
            isNode: function (variable) {
                return variable && variable.nodeType;
            },
            isNodeList: function (variable) {
                return typeof variable === 'object' && /^\[object (HTMLCollection|NodeList|Object)\]$/.test(Object.prototype.toString.call(variable)) && variable.length !== undefined && (variable.length === 0 || typeof variable[0] === 'object' && variable[0].nodeType > 0);
            },
            isWrapped: function (variable) {
                return variable && (variable.jquery || window.Zepto && window.Zepto.zepto.isZ(variable));
            },
            isSVG: function (variable) {
                return window.SVGElement && variable instanceof window.SVGElement;
            },
            isEmptyObject: function (variable) {
                for (var name in variable) {
                    return false;
                }
                return true;
            }
        };
        var $, isJQuery = false;
        if (global.fn && global.fn.jquery) {
            $ = global;
            isJQuery = true;
        } else {
            $ = window.Velocity.Utilities;
        }
        if (IE <= 8 && !isJQuery) {
            throw new Error('Velocity: IE8 and below require jQuery to be loaded before Velocity.');
        } else if (IE <= 7) {
            jQuery.fn.velocity = jQuery.fn.animate;
            return;
        }
        var DURATION_DEFAULT = 400, EASING_DEFAULT = 'swing';
        var Velocity = {
            State: {
                isMobile: /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent),
                isAndroid: /Android/i.test(navigator.userAgent),
                isGingerbread: /Android 2\.3\.[3-7]/i.test(navigator.userAgent),
                isChrome: window.chrome,
                isFirefox: /Firefox/i.test(navigator.userAgent),
                prefixElement: document.createElement('div'),
                prefixMatches: {},
                scrollAnchor: null,
                scrollPropertyLeft: null,
                scrollPropertyTop: null,
                isTicking: false,
                calls: []
            },
            CSS: {},
            Utilities: $,
            Redirects: {},
            Easings: {},
            Promise: window.Promise,
            defaults: {
                queue: '',
                duration: DURATION_DEFAULT,
                easing: EASING_DEFAULT,
                begin: undefined,
                complete: undefined,
                progress: undefined,
                display: undefined,
                visibility: undefined,
                loop: false,
                delay: false,
                mobileHA: true,
                _cacheValues: true
            },
            init: function (element) {
                $.data(element, 'velocity', {
                    isSVG: Type.isSVG(element),
                    isAnimating: false,
                    computedStyle: null,
                    tweensContainer: null,
                    rootPropertyValueCache: {},
                    transformCache: {}
                });
            },
            hook: null,
            mock: false,
            version: {
                major: 1,
                minor: 1,
                patch: 0
            },
            debug: false
        };
        if (window.pageYOffset !== undefined) {
            Velocity.State.scrollAnchor = window;
            Velocity.State.scrollPropertyLeft = 'pageXOffset';
            Velocity.State.scrollPropertyTop = 'pageYOffset';
        } else {
            Velocity.State.scrollAnchor = document.documentElement || document.body.parentNode || document.body;
            Velocity.State.scrollPropertyLeft = 'scrollLeft';
            Velocity.State.scrollPropertyTop = 'scrollTop';
        }
        function Data(element) {
            var response = $.data(element, 'velocity');
            return response === null ? undefined : response;
        }
        ;
        function generateStep(steps) {
            return function (p) {
                return Math.round(p * steps) * (1 / steps);
            };
        }
        function generateBezier(mX1, mY1, mX2, mY2) {
            var NEWTON_ITERATIONS = 4, NEWTON_MIN_SLOPE = 0.001, SUBDIVISION_PRECISION = 1e-7, SUBDIVISION_MAX_ITERATIONS = 10, kSplineTableSize = 11, kSampleStepSize = 1 / (kSplineTableSize - 1), float32ArraySupported = 'Float32Array' in window;
            if (arguments.length !== 4) {
                return false;
            }
            for (var i = 0; i < 4; ++i) {
                if (typeof arguments[i] !== 'number' || isNaN(arguments[i]) || !isFinite(arguments[i])) {
                    return false;
                }
            }
            mX1 = Math.min(mX1, 1);
            mX2 = Math.min(mX2, 1);
            mX1 = Math.max(mX1, 0);
            mX2 = Math.max(mX2, 0);
            var mSampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);
            function A(aA1, aA2) {
                return 1 - 3 * aA2 + 3 * aA1;
            }
            function B(aA1, aA2) {
                return 3 * aA2 - 6 * aA1;
            }
            function C(aA1) {
                return 3 * aA1;
            }
            function calcBezier(aT, aA1, aA2) {
                return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT;
            }
            function getSlope(aT, aA1, aA2) {
                return 3 * A(aA1, aA2) * aT * aT + 2 * B(aA1, aA2) * aT + C(aA1);
            }
            function newtonRaphsonIterate(aX, aGuessT) {
                for (var i = 0; i < NEWTON_ITERATIONS; ++i) {
                    var currentSlope = getSlope(aGuessT, mX1, mX2);
                    if (currentSlope === 0)
                        return aGuessT;
                    var currentX = calcBezier(aGuessT, mX1, mX2) - aX;
                    aGuessT -= currentX / currentSlope;
                }
                return aGuessT;
            }
            function calcSampleValues() {
                for (var i = 0; i < kSplineTableSize; ++i) {
                    mSampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);
                }
            }
            function binarySubdivide(aX, aA, aB) {
                var currentX, currentT, i = 0;
                do {
                    currentT = aA + (aB - aA) / 2;
                    currentX = calcBezier(currentT, mX1, mX2) - aX;
                    if (currentX > 0) {
                        aB = currentT;
                    } else {
                        aA = currentT;
                    }
                } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);
                return currentT;
            }
            function getTForX(aX) {
                var intervalStart = 0, currentSample = 1, lastSample = kSplineTableSize - 1;
                for (; currentSample != lastSample && mSampleValues[currentSample] <= aX; ++currentSample) {
                    intervalStart += kSampleStepSize;
                }
                --currentSample;
                var dist = (aX - mSampleValues[currentSample]) / (mSampleValues[currentSample + 1] - mSampleValues[currentSample]), guessForT = intervalStart + dist * kSampleStepSize, initialSlope = getSlope(guessForT, mX1, mX2);
                if (initialSlope >= NEWTON_MIN_SLOPE) {
                    return newtonRaphsonIterate(aX, guessForT);
                } else if (initialSlope == 0) {
                    return guessForT;
                } else {
                    return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize);
                }
            }
            var _precomputed = false;
            function precompute() {
                _precomputed = true;
                if (mX1 != mY1 || mX2 != mY2)
                    calcSampleValues();
            }
            var f = function (aX) {
                if (!_precomputed)
                    precompute();
                if (mX1 === mY1 && mX2 === mY2)
                    return aX;
                if (aX === 0)
                    return 0;
                if (aX === 1)
                    return 1;
                return calcBezier(getTForX(aX), mY1, mY2);
            };
            f.getControlPoints = function () {
                return [
                    {
                        x: mX1,
                        y: mY1
                    },
                    {
                        x: mX2,
                        y: mY2
                    }
                ];
            };
            var str = 'generateBezier(' + [
                mX1,
                mY1,
                mX2,
                mY2
            ] + ')';
            f.toString = function () {
                return str;
            };
            return f;
        }
        var generateSpringRK4 = function () {
            function springAccelerationForState(state) {
                return -state.tension * state.x - state.friction * state.v;
            }
            function springEvaluateStateWithDerivative(initialState, dt, derivative) {
                var state = {
                    x: initialState.x + derivative.dx * dt,
                    v: initialState.v + derivative.dv * dt,
                    tension: initialState.tension,
                    friction: initialState.friction
                };
                return {
                    dx: state.v,
                    dv: springAccelerationForState(state)
                };
            }
            function springIntegrateState(state, dt) {
                var a = {
                        dx: state.v,
                        dv: springAccelerationForState(state)
                    }, b = springEvaluateStateWithDerivative(state, dt * 0.5, a), c = springEvaluateStateWithDerivative(state, dt * 0.5, b), d = springEvaluateStateWithDerivative(state, dt, c), dxdt = 1 / 6 * (a.dx + 2 * (b.dx + c.dx) + d.dx), dvdt = 1 / 6 * (a.dv + 2 * (b.dv + c.dv) + d.dv);
                state.x = state.x + dxdt * dt;
                state.v = state.v + dvdt * dt;
                return state;
            }
            return function springRK4Factory(tension, friction, duration) {
                var initState = {
                        x: -1,
                        v: 0,
                        tension: null,
                        friction: null
                    }, path = [0], time_lapsed = 0, tolerance = 1 / 10000, DT = 16 / 1000, have_duration, dt, last_state;
                tension = parseFloat(tension) || 500;
                friction = parseFloat(friction) || 20;
                duration = duration || null;
                initState.tension = tension;
                initState.friction = friction;
                have_duration = duration !== null;
                if (have_duration) {
                    time_lapsed = springRK4Factory(tension, friction);
                    dt = time_lapsed / duration * DT;
                } else {
                    dt = DT;
                }
                while (true) {
                    last_state = springIntegrateState(last_state || initState, dt);
                    path.push(1 + last_state.x);
                    time_lapsed += 16;
                    if (!(Math.abs(last_state.x) > tolerance && Math.abs(last_state.v) > tolerance)) {
                        break;
                    }
                }
                return !have_duration ? time_lapsed : function (percentComplete) {
                    return path[percentComplete * (path.length - 1) | 0];
                };
            };
        }();
        Velocity.Easings = {
            linear: function (p) {
                return p;
            },
            swing: function (p) {
                return 0.5 - Math.cos(p * Math.PI) / 2;
            },
            spring: function (p) {
                return 1 - Math.cos(p * 4.5 * Math.PI) * Math.exp(-p * 6);
            }
        };
        $.each([
            [
                'ease',
                [
                    0.25,
                    0.1,
                    0.25,
                    1
                ]
            ],
            [
                'ease-in',
                [
                    0.42,
                    0,
                    1,
                    1
                ]
            ],
            [
                'ease-out',
                [
                    0,
                    0,
                    0.58,
                    1
                ]
            ],
            [
                'ease-in-out',
                [
                    0.42,
                    0,
                    0.58,
                    1
                ]
            ],
            [
                'easeInSine',
                [
                    0.47,
                    0,
                    0.745,
                    0.715
                ]
            ],
            [
                'easeOutSine',
                [
                    0.39,
                    0.575,
                    0.565,
                    1
                ]
            ],
            [
                'easeInOutSine',
                [
                    0.445,
                    0.05,
                    0.55,
                    0.95
                ]
            ],
            [
                'easeInQuad',
                [
                    0.55,
                    0.085,
                    0.68,
                    0.53
                ]
            ],
            [
                'easeOutQuad',
                [
                    0.25,
                    0.46,
                    0.45,
                    0.94
                ]
            ],
            [
                'easeInOutQuad',
                [
                    0.455,
                    0.03,
                    0.515,
                    0.955
                ]
            ],
            [
                'easeInCubic',
                [
                    0.55,
                    0.055,
                    0.675,
                    0.19
                ]
            ],
            [
                'easeOutCubic',
                [
                    0.215,
                    0.61,
                    0.355,
                    1
                ]
            ],
            [
                'easeInOutCubic',
                [
                    0.645,
                    0.045,
                    0.355,
                    1
                ]
            ],
            [
                'easeInQuart',
                [
                    0.895,
                    0.03,
                    0.685,
                    0.22
                ]
            ],
            [
                'easeOutQuart',
                [
                    0.165,
                    0.84,
                    0.44,
                    1
                ]
            ],
            [
                'easeInOutQuart',
                [
                    0.77,
                    0,
                    0.175,
                    1
                ]
            ],
            [
                'easeInQuint',
                [
                    0.755,
                    0.05,
                    0.855,
                    0.06
                ]
            ],
            [
                'easeOutQuint',
                [
                    0.23,
                    1,
                    0.32,
                    1
                ]
            ],
            [
                'easeInOutQuint',
                [
                    0.86,
                    0,
                    0.07,
                    1
                ]
            ],
            [
                'easeInExpo',
                [
                    0.95,
                    0.05,
                    0.795,
                    0.035
                ]
            ],
            [
                'easeOutExpo',
                [
                    0.19,
                    1,
                    0.22,
                    1
                ]
            ],
            [
                'easeInOutExpo',
                [
                    1,
                    0,
                    0,
                    1
                ]
            ],
            [
                'easeInCirc',
                [
                    0.6,
                    0.04,
                    0.98,
                    0.335
                ]
            ],
            [
                'easeOutCirc',
                [
                    0.075,
                    0.82,
                    0.165,
                    1
                ]
            ],
            [
                'easeInOutCirc',
                [
                    0.785,
                    0.135,
                    0.15,
                    0.86
                ]
            ]
        ], function (i, easingArray) {
            Velocity.Easings[easingArray[0]] = generateBezier.apply(null, easingArray[1]);
        });
        function getEasing(value, duration) {
            var easing = value;
            if (Type.isString(value)) {
                if (!Velocity.Easings[value]) {
                    easing = false;
                }
            } else if (Type.isArray(value) && value.length === 1) {
                easing = generateStep.apply(null, value);
            } else if (Type.isArray(value) && value.length === 2) {
                easing = generateSpringRK4.apply(null, value.concat([duration]));
            } else if (Type.isArray(value) && value.length === 4) {
                easing = generateBezier.apply(null, value);
            } else {
                easing = false;
            }
            if (easing === false) {
                if (Velocity.Easings[Velocity.defaults.easing]) {
                    easing = Velocity.defaults.easing;
                } else {
                    easing = EASING_DEFAULT;
                }
            }
            return easing;
        }
        var CSS = Velocity.CSS = {
            RegEx: {
                isHex: /^#([A-f\d]{3}){1,2}$/i,
                valueUnwrap: /^[A-z]+\((.*)\)$/i,
                wrappedValueAlreadyExtracted: /[0-9.]+ [0-9.]+ [0-9.]+( [0-9.]+)?/,
                valueSplit: /([A-z]+\(.+\))|(([A-z0-9#-.]+?)(?=\s|$))/gi
            },
            Lists: {
                colors: [
                    'fill',
                    'stroke',
                    'stopColor',
                    'color',
                    'backgroundColor',
                    'borderColor',
                    'borderTopColor',
                    'borderRightColor',
                    'borderBottomColor',
                    'borderLeftColor',
                    'outlineColor'
                ],
                transformsBase: [
                    'translateX',
                    'translateY',
                    'scale',
                    'scaleX',
                    'scaleY',
                    'skewX',
                    'skewY',
                    'rotateZ'
                ],
                transforms3D: [
                    'transformPerspective',
                    'translateZ',
                    'scaleZ',
                    'rotateX',
                    'rotateY'
                ]
            },
            Hooks: {
                templates: {
                    'textShadow': [
                        'Color X Y Blur',
                        'black 0px 0px 0px'
                    ],
                    'boxShadow': [
                        'Color X Y Blur Spread',
                        'black 0px 0px 0px 0px'
                    ],
                    'clip': [
                        'Top Right Bottom Left',
                        '0px 0px 0px 0px'
                    ],
                    'backgroundPosition': [
                        'X Y',
                        '0% 0%'
                    ],
                    'transformOrigin': [
                        'X Y Z',
                        '50% 50% 0px'
                    ],
                    'perspectiveOrigin': [
                        'X Y',
                        '50% 50%'
                    ]
                },
                registered: {},
                register: function () {
                    for (var i = 0; i < CSS.Lists.colors.length; i++) {
                        var rgbComponents = CSS.Lists.colors[i] === 'color' ? '0 0 0 1' : '255 255 255 1';
                        CSS.Hooks.templates[CSS.Lists.colors[i]] = [
                            'Red Green Blue Alpha',
                            rgbComponents
                        ];
                    }
                    var rootProperty, hookTemplate, hookNames;
                    if (IE) {
                        for (rootProperty in CSS.Hooks.templates) {
                            hookTemplate = CSS.Hooks.templates[rootProperty];
                            hookNames = hookTemplate[0].split(' ');
                            var defaultValues = hookTemplate[1].match(CSS.RegEx.valueSplit);
                            if (hookNames[0] === 'Color') {
                                hookNames.push(hookNames.shift());
                                defaultValues.push(defaultValues.shift());
                                CSS.Hooks.templates[rootProperty] = [
                                    hookNames.join(' '),
                                    defaultValues.join(' ')
                                ];
                            }
                        }
                    }
                    for (rootProperty in CSS.Hooks.templates) {
                        hookTemplate = CSS.Hooks.templates[rootProperty];
                        hookNames = hookTemplate[0].split(' ');
                        for (var i in hookNames) {
                            var fullHookName = rootProperty + hookNames[i], hookPosition = i;
                            CSS.Hooks.registered[fullHookName] = [
                                rootProperty,
                                hookPosition
                            ];
                        }
                    }
                },
                getRoot: function (property) {
                    var hookData = CSS.Hooks.registered[property];
                    if (hookData) {
                        return hookData[0];
                    } else {
                        return property;
                    }
                },
                cleanRootPropertyValue: function (rootProperty, rootPropertyValue) {
                    if (CSS.RegEx.valueUnwrap.test(rootPropertyValue)) {
                        rootPropertyValue = rootPropertyValue.match(CSS.RegEx.valueUnwrap)[1];
                    }
                    if (CSS.Values.isCSSNullValue(rootPropertyValue)) {
                        rootPropertyValue = CSS.Hooks.templates[rootProperty][1];
                    }
                    return rootPropertyValue;
                },
                extractValue: function (fullHookName, rootPropertyValue) {
                    var hookData = CSS.Hooks.registered[fullHookName];
                    if (hookData) {
                        var hookRoot = hookData[0], hookPosition = hookData[1];
                        rootPropertyValue = CSS.Hooks.cleanRootPropertyValue(hookRoot, rootPropertyValue);
                        return rootPropertyValue.toString().match(CSS.RegEx.valueSplit)[hookPosition];
                    } else {
                        return rootPropertyValue;
                    }
                },
                injectValue: function (fullHookName, hookValue, rootPropertyValue) {
                    var hookData = CSS.Hooks.registered[fullHookName];
                    if (hookData) {
                        var hookRoot = hookData[0], hookPosition = hookData[1], rootPropertyValueParts, rootPropertyValueUpdated;
                        rootPropertyValue = CSS.Hooks.cleanRootPropertyValue(hookRoot, rootPropertyValue);
                        rootPropertyValueParts = rootPropertyValue.toString().match(CSS.RegEx.valueSplit);
                        rootPropertyValueParts[hookPosition] = hookValue;
                        rootPropertyValueUpdated = rootPropertyValueParts.join(' ');
                        return rootPropertyValueUpdated;
                    } else {
                        return rootPropertyValue;
                    }
                }
            },
            Normalizations: {
                registered: {
                    clip: function (type, element, propertyValue) {
                        switch (type) {
                        case 'name':
                            return 'clip';
                        case 'extract':
                            var extracted;
                            if (CSS.RegEx.wrappedValueAlreadyExtracted.test(propertyValue)) {
                                extracted = propertyValue;
                            } else {
                                extracted = propertyValue.toString().match(CSS.RegEx.valueUnwrap);
                                extracted = extracted ? extracted[1].replace(/,(\s+)?/g, ' ') : propertyValue;
                            }
                            return extracted;
                        case 'inject':
                            return 'rect(' + propertyValue + ')';
                        }
                    },
                    blur: function (type, element, propertyValue) {
                        switch (type) {
                        case 'name':
                            return '-webkit-filter';
                        case 'extract':
                            var extracted = parseFloat(propertyValue);
                            if (!(extracted || extracted === 0)) {
                                var blurComponent = propertyValue.toString().match(/blur\(([0-9]+[A-z]+)\)/i);
                                if (blurComponent) {
                                    extracted = blurComponent[1];
                                } else {
                                    extracted = 0;
                                }
                            }
                            return extracted;
                        case 'inject':
                            if (!parseFloat(propertyValue)) {
                                return 'none';
                            } else {
                                return 'blur(' + propertyValue + ')';
                            }
                        }
                    },
                    opacity: function (type, element, propertyValue) {
                        if (IE <= 8) {
                            switch (type) {
                            case 'name':
                                return 'filter';
                            case 'extract':
                                var extracted = propertyValue.toString().match(/alpha\(opacity=(.*)\)/i);
                                if (extracted) {
                                    propertyValue = extracted[1] / 100;
                                } else {
                                    propertyValue = 1;
                                }
                                return propertyValue;
                            case 'inject':
                                element.style.zoom = 1;
                                if (parseFloat(propertyValue) >= 1) {
                                    return '';
                                } else {
                                    return 'alpha(opacity=' + parseInt(parseFloat(propertyValue) * 100, 10) + ')';
                                }
                            }
                        } else {
                            switch (type) {
                            case 'name':
                                return 'opacity';
                            case 'extract':
                                return propertyValue;
                            case 'inject':
                                return propertyValue;
                            }
                        }
                    }
                },
                register: function () {
                    if (!(IE <= 9) && !Velocity.State.isGingerbread) {
                        CSS.Lists.transformsBase = CSS.Lists.transformsBase.concat(CSS.Lists.transforms3D);
                    }
                    for (var i = 0; i < CSS.Lists.transformsBase.length; i++) {
                        (function () {
                            var transformName = CSS.Lists.transformsBase[i];
                            CSS.Normalizations.registered[transformName] = function (type, element, propertyValue) {
                                switch (type) {
                                case 'name':
                                    return 'transform';
                                case 'extract':
                                    if (Data(element) === undefined || Data(element).transformCache[transformName] === undefined) {
                                        return /^scale/i.test(transformName) ? 1 : 0;
                                    } else {
                                        return Data(element).transformCache[transformName].replace(/[()]/g, '');
                                    }
                                case 'inject':
                                    var invalid = false;
                                    switch (transformName.substr(0, transformName.length - 1)) {
                                    case 'translate':
                                        invalid = !/(%|px|em|rem|vw|vh|\d)$/i.test(propertyValue);
                                        break;
                                    case 'scal':
                                    case 'scale':
                                        if (Velocity.State.isAndroid && Data(element).transformCache[transformName] === undefined && propertyValue < 1) {
                                            propertyValue = 1;
                                        }
                                        invalid = !/(\d)$/i.test(propertyValue);
                                        break;
                                    case 'skew':
                                        invalid = !/(deg|\d)$/i.test(propertyValue);
                                        break;
                                    case 'rotate':
                                        invalid = !/(deg|\d)$/i.test(propertyValue);
                                        break;
                                    }
                                    if (!invalid) {
                                        Data(element).transformCache[transformName] = '(' + propertyValue + ')';
                                    }
                                    return Data(element).transformCache[transformName];
                                }
                            };
                        }());
                    }
                    for (var i = 0; i < CSS.Lists.colors.length; i++) {
                        (function () {
                            var colorName = CSS.Lists.colors[i];
                            CSS.Normalizations.registered[colorName] = function (type, element, propertyValue) {
                                switch (type) {
                                case 'name':
                                    return colorName;
                                case 'extract':
                                    var extracted;
                                    if (CSS.RegEx.wrappedValueAlreadyExtracted.test(propertyValue)) {
                                        extracted = propertyValue;
                                    } else {
                                        var converted, colorNames = {
                                                black: 'rgb(0, 0, 0)',
                                                blue: 'rgb(0, 0, 255)',
                                                gray: 'rgb(128, 128, 128)',
                                                green: 'rgb(0, 128, 0)',
                                                red: 'rgb(255, 0, 0)',
                                                white: 'rgb(255, 255, 255)'
                                            };
                                        if (/^[A-z]+$/i.test(propertyValue)) {
                                            if (colorNames[propertyValue] !== undefined) {
                                                converted = colorNames[propertyValue];
                                            } else {
                                                converted = colorNames.black;
                                            }
                                        } else if (CSS.RegEx.isHex.test(propertyValue)) {
                                            converted = 'rgb(' + CSS.Values.hexToRgb(propertyValue).join(' ') + ')';
                                        } else if (!/^rgba?\(/i.test(propertyValue)) {
                                            converted = colorNames.black;
                                        }
                                        extracted = (converted || propertyValue).toString().match(CSS.RegEx.valueUnwrap)[1].replace(/,(\s+)?/g, ' ');
                                    }
                                    if (!(IE <= 8) && extracted.split(' ').length === 3) {
                                        extracted += ' 1';
                                    }
                                    return extracted;
                                case 'inject':
                                    if (IE <= 8) {
                                        if (propertyValue.split(' ').length === 4) {
                                            propertyValue = propertyValue.split(/\s+/).slice(0, 3).join(' ');
                                        }
                                    } else if (propertyValue.split(' ').length === 3) {
                                        propertyValue += ' 1';
                                    }
                                    return (IE <= 8 ? 'rgb' : 'rgba') + '(' + propertyValue.replace(/\s+/g, ',').replace(/\.(\d)+(?=,)/g, '') + ')';
                                }
                            };
                        }());
                    }
                }
            },
            Names: {
                camelCase: function (property) {
                    return property.replace(/-(\w)/g, function (match, subMatch) {
                        return subMatch.toUpperCase();
                    });
                },
                SVGAttribute: function (property) {
                    var SVGAttributes = 'width|height|x|y|cx|cy|r|rx|ry|x1|x2|y1|y2';
                    if (IE || Velocity.State.isAndroid && !Velocity.State.isChrome) {
                        SVGAttributes += '|transform';
                    }
                    return new RegExp('^(' + SVGAttributes + ')$', 'i').test(property);
                },
                prefixCheck: function (property) {
                    if (Velocity.State.prefixMatches[property]) {
                        return [
                            Velocity.State.prefixMatches[property],
                            true
                        ];
                    } else {
                        var vendors = [
                            '',
                            'Webkit',
                            'Moz',
                            'ms',
                            'O'
                        ];
                        for (var i = 0, vendorsLength = vendors.length; i < vendorsLength; i++) {
                            var propertyPrefixed;
                            if (i === 0) {
                                propertyPrefixed = property;
                            } else {
                                propertyPrefixed = vendors[i] + property.replace(/^\w/, function (match) {
                                    return match.toUpperCase();
                                });
                            }
                            if (Type.isString(Velocity.State.prefixElement.style[propertyPrefixed])) {
                                Velocity.State.prefixMatches[property] = propertyPrefixed;
                                return [
                                    propertyPrefixed,
                                    true
                                ];
                            }
                        }
                        return [
                            property,
                            false
                        ];
                    }
                }
            },
            Values: {
                hexToRgb: function (hex) {
                    var shortformRegex = /^#?([a-f\d])([a-f\d])([a-f\d])$/i, longformRegex = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i, rgbParts;
                    hex = hex.replace(shortformRegex, function (m, r, g, b) {
                        return r + r + g + g + b + b;
                    });
                    rgbParts = longformRegex.exec(hex);
                    return rgbParts ? [
                        parseInt(rgbParts[1], 16),
                        parseInt(rgbParts[2], 16),
                        parseInt(rgbParts[3], 16)
                    ] : [
                        0,
                        0,
                        0
                    ];
                },
                isCSSNullValue: function (value) {
                    return value == 0 || /^(none|auto|transparent|(rgba\(0, ?0, ?0, ?0\)))$/i.test(value);
                },
                getUnitType: function (property) {
                    if (/^(rotate|skew)/i.test(property)) {
                        return 'deg';
                    } else if (/(^(scale|scaleX|scaleY|scaleZ|alpha|flexGrow|flexHeight|zIndex|fontWeight)$)|((opacity|red|green|blue|alpha)$)/i.test(property)) {
                        return '';
                    } else {
                        return 'px';
                    }
                },
                getDisplayType: function (element) {
                    var tagName = element && element.tagName.toString().toLowerCase();
                    if (/^(b|big|i|small|tt|abbr|acronym|cite|code|dfn|em|kbd|strong|samp|var|a|bdo|br|img|map|object|q|script|span|sub|sup|button|input|label|select|textarea)$/i.test(tagName)) {
                        return 'inline';
                    } else if (/^(li)$/i.test(tagName)) {
                        return 'list-item';
                    } else if (/^(tr)$/i.test(tagName)) {
                        return 'table-row';
                    } else {
                        return 'block';
                    }
                },
                addClass: function (element, className) {
                    if (element.classList) {
                        element.classList.add(className);
                    } else {
                        element.className += (element.className.length ? ' ' : '') + className;
                    }
                },
                removeClass: function (element, className) {
                    if (element.classList) {
                        element.classList.remove(className);
                    } else {
                        element.className = element.className.toString().replace(new RegExp('(^|\\s)' + className.split(' ').join('|') + '(\\s|$)', 'gi'), ' ');
                    }
                }
            },
            getPropertyValue: function (element, property, rootPropertyValue, forceStyleLookup) {
                function computePropertyValue(element, property) {
                    var computedValue = 0;
                    if (IE <= 8) {
                        computedValue = $.css(element, property);
                    } else {
                        var toggleDisplay = false;
                        if (/^(width|height)$/.test(property) && CSS.getPropertyValue(element, 'display') === 0) {
                            toggleDisplay = true;
                            CSS.setPropertyValue(element, 'display', CSS.Values.getDisplayType(element));
                        }
                        function revertDisplay() {
                            if (toggleDisplay) {
                                CSS.setPropertyValue(element, 'display', 'none');
                            }
                        }
                        if (!forceStyleLookup) {
                            if (property === 'height' && CSS.getPropertyValue(element, 'boxSizing').toString().toLowerCase() !== 'border-box') {
                                var contentBoxHeight = element.offsetHeight - (parseFloat(CSS.getPropertyValue(element, 'borderTopWidth')) || 0) - (parseFloat(CSS.getPropertyValue(element, 'borderBottomWidth')) || 0) - (parseFloat(CSS.getPropertyValue(element, 'paddingTop')) || 0) - (parseFloat(CSS.getPropertyValue(element, 'paddingBottom')) || 0);
                                revertDisplay();
                                return contentBoxHeight;
                            } else if (property === 'width' && CSS.getPropertyValue(element, 'boxSizing').toString().toLowerCase() !== 'border-box') {
                                var contentBoxWidth = element.offsetWidth - (parseFloat(CSS.getPropertyValue(element, 'borderLeftWidth')) || 0) - (parseFloat(CSS.getPropertyValue(element, 'borderRightWidth')) || 0) - (parseFloat(CSS.getPropertyValue(element, 'paddingLeft')) || 0) - (parseFloat(CSS.getPropertyValue(element, 'paddingRight')) || 0);
                                revertDisplay();
                                return contentBoxWidth;
                            }
                        }
                        var computedStyle;
                        if (Data(element) === undefined) {
                            computedStyle = window.getComputedStyle(element, null);
                        } else if (!Data(element).computedStyle) {
                            computedStyle = Data(element).computedStyle = window.getComputedStyle(element, null);
                        } else {
                            computedStyle = Data(element).computedStyle;
                        }
                        if ((IE || Velocity.State.isFirefox) && property === 'borderColor') {
                            property = 'borderTopColor';
                        }
                        if (IE === 9 && property === 'filter') {
                            computedValue = computedStyle.getPropertyValue(property);
                        } else {
                            computedValue = computedStyle[property];
                        }
                        if (computedValue === '' || computedValue === null) {
                            computedValue = element.style[property];
                        }
                        revertDisplay();
                    }
                    if (computedValue === 'auto' && /^(top|right|bottom|left)$/i.test(property)) {
                        var position = computePropertyValue(element, 'position');
                        if (position === 'fixed' || position === 'absolute' && /top|left/i.test(property)) {
                            computedValue = $(element).position()[property] + 'px';
                        }
                    }
                    return computedValue;
                }
                var propertyValue;
                if (CSS.Hooks.registered[property]) {
                    var hook = property, hookRoot = CSS.Hooks.getRoot(hook);
                    if (rootPropertyValue === undefined) {
                        rootPropertyValue = CSS.getPropertyValue(element, CSS.Names.prefixCheck(hookRoot)[0]);
                    }
                    if (CSS.Normalizations.registered[hookRoot]) {
                        rootPropertyValue = CSS.Normalizations.registered[hookRoot]('extract', element, rootPropertyValue);
                    }
                    propertyValue = CSS.Hooks.extractValue(hook, rootPropertyValue);
                } else if (CSS.Normalizations.registered[property]) {
                    var normalizedPropertyName, normalizedPropertyValue;
                    normalizedPropertyName = CSS.Normalizations.registered[property]('name', element);
                    if (normalizedPropertyName !== 'transform') {
                        normalizedPropertyValue = computePropertyValue(element, CSS.Names.prefixCheck(normalizedPropertyName)[0]);
                        if (CSS.Values.isCSSNullValue(normalizedPropertyValue) && CSS.Hooks.templates[property]) {
                            normalizedPropertyValue = CSS.Hooks.templates[property][1];
                        }
                    }
                    propertyValue = CSS.Normalizations.registered[property]('extract', element, normalizedPropertyValue);
                }
                if (!/^[\d-]/.test(propertyValue)) {
                    if (Data(element) && Data(element).isSVG && CSS.Names.SVGAttribute(property)) {
                        if (/^(height|width)$/i.test(property)) {
                            propertyValue = element.getBBox()[property];
                        } else {
                            propertyValue = element.getAttribute(property);
                        }
                    } else {
                        propertyValue = computePropertyValue(element, CSS.Names.prefixCheck(property)[0]);
                    }
                }
                if (CSS.Values.isCSSNullValue(propertyValue)) {
                    propertyValue = 0;
                }
                if (Velocity.debug >= 2)
                    console.log('Get ' + property + ': ' + propertyValue);
                return propertyValue;
            },
            setPropertyValue: function (element, property, propertyValue, rootPropertyValue, scrollData) {
                var propertyName = property;
                if (property === 'scroll') {
                    if (scrollData.container) {
                        scrollData.container['scroll' + scrollData.direction] = propertyValue;
                    } else {
                        if (scrollData.direction === 'Left') {
                            window.scrollTo(propertyValue, scrollData.alternateValue);
                        } else {
                            window.scrollTo(scrollData.alternateValue, propertyValue);
                        }
                    }
                } else {
                    if (CSS.Normalizations.registered[property] && CSS.Normalizations.registered[property]('name', element) === 'transform') {
                        CSS.Normalizations.registered[property]('inject', element, propertyValue);
                        propertyName = 'transform';
                        propertyValue = Data(element).transformCache[property];
                    } else {
                        if (CSS.Hooks.registered[property]) {
                            var hookName = property, hookRoot = CSS.Hooks.getRoot(property);
                            rootPropertyValue = rootPropertyValue || CSS.getPropertyValue(element, hookRoot);
                            propertyValue = CSS.Hooks.injectValue(hookName, propertyValue, rootPropertyValue);
                            property = hookRoot;
                        }
                        if (CSS.Normalizations.registered[property]) {
                            propertyValue = CSS.Normalizations.registered[property]('inject', element, propertyValue);
                            property = CSS.Normalizations.registered[property]('name', element);
                        }
                        propertyName = CSS.Names.prefixCheck(property)[0];
                        if (IE <= 8) {
                            try {
                                element.style[propertyName] = propertyValue;
                            } catch (error) {
                                if (Velocity.debug)
                                    console.log('Browser does not support [' + propertyValue + '] for [' + propertyName + ']');
                            }
                        } else if (Data(element) && Data(element).isSVG && CSS.Names.SVGAttribute(property)) {
                            element.setAttribute(property, propertyValue);
                        } else {
                            element.style[propertyName] = propertyValue;
                        }
                        if (Velocity.debug >= 2)
                            console.log('Set ' + property + ' (' + propertyName + '): ' + propertyValue);
                    }
                }
                return [
                    propertyName,
                    propertyValue
                ];
            },
            flushTransformCache: function (element) {
                var transformString = '';
                if ((IE || Velocity.State.isAndroid && !Velocity.State.isChrome) && Data(element).isSVG) {
                    function getTransformFloat(transformProperty) {
                        return parseFloat(CSS.getPropertyValue(element, transformProperty));
                    }
                    var SVGTransforms = {
                        translate: [
                            getTransformFloat('translateX'),
                            getTransformFloat('translateY')
                        ],
                        skewX: [getTransformFloat('skewX')],
                        skewY: [getTransformFloat('skewY')],
                        scale: getTransformFloat('scale') !== 1 ? [
                            getTransformFloat('scale'),
                            getTransformFloat('scale')
                        ] : [
                            getTransformFloat('scaleX'),
                            getTransformFloat('scaleY')
                        ],
                        rotate: [
                            getTransformFloat('rotateZ'),
                            0,
                            0
                        ]
                    };
                    $.each(Data(element).transformCache, function (transformName) {
                        if (/^translate/i.test(transformName)) {
                            transformName = 'translate';
                        } else if (/^scale/i.test(transformName)) {
                            transformName = 'scale';
                        } else if (/^rotate/i.test(transformName)) {
                            transformName = 'rotate';
                        }
                        if (SVGTransforms[transformName]) {
                            transformString += transformName + '(' + SVGTransforms[transformName].join(' ') + ')' + ' ';
                            delete SVGTransforms[transformName];
                        }
                    });
                } else {
                    var transformValue, perspective;
                    $.each(Data(element).transformCache, function (transformName) {
                        transformValue = Data(element).transformCache[transformName];
                        if (transformName === 'transformPerspective') {
                            perspective = transformValue;
                            return true;
                        }
                        if (IE === 9 && transformName === 'rotateZ') {
                            transformName = 'rotate';
                        }
                        transformString += transformName + transformValue + ' ';
                    });
                    if (perspective) {
                        transformString = 'perspective' + perspective + ' ' + transformString;
                    }
                }
                CSS.setPropertyValue(element, 'transform', transformString);
            }
        };
        CSS.Hooks.register();
        CSS.Normalizations.register();
        Velocity.hook = function (elements, arg2, arg3) {
            var value = undefined;
            elements = sanitizeElements(elements);
            $.each(elements, function (i, element) {
                if (Data(element) === undefined) {
                    Velocity.init(element);
                }
                if (arg3 === undefined) {
                    if (value === undefined) {
                        value = Velocity.CSS.getPropertyValue(element, arg2);
                    }
                } else {
                    var adjustedSet = Velocity.CSS.setPropertyValue(element, arg2, arg3);
                    if (adjustedSet[0] === 'transform') {
                        Velocity.CSS.flushTransformCache(element);
                    }
                    value = adjustedSet;
                }
            });
            return value;
        };
        var animate = function () {
            function getChain() {
                if (isUtility) {
                    return promiseData.promise || null;
                } else {
                    return elementsWrapped;
                }
            }
            var syntacticSugar = arguments[0] && ($.isPlainObject(arguments[0].properties) && !arguments[0].properties.names || Type.isString(arguments[0].properties)), isUtility, elementsWrapped, argumentIndex;
            var elements, propertiesMap, options;
            if (Type.isWrapped(this)) {
                isUtility = false;
                argumentIndex = 0;
                elements = this;
                elementsWrapped = this;
            } else {
                isUtility = true;
                argumentIndex = 1;
                elements = syntacticSugar ? arguments[0].elements : arguments[0];
            }
            elements = sanitizeElements(elements);
            if (!elements) {
                return;
            }
            if (syntacticSugar) {
                propertiesMap = arguments[0].properties;
                options = arguments[0].options;
            } else {
                propertiesMap = arguments[argumentIndex];
                options = arguments[argumentIndex + 1];
            }
            var elementsLength = elements.length, elementsIndex = 0;
            if (propertiesMap !== 'stop' && !$.isPlainObject(options)) {
                var startingArgumentPosition = argumentIndex + 1;
                options = {};
                for (var i = startingArgumentPosition; i < arguments.length; i++) {
                    if (!Type.isArray(arguments[i]) && (/^(fast|normal|slow)$/i.test(arguments[i]) || /^\d/.test(arguments[i]))) {
                        options.duration = arguments[i];
                    } else if (Type.isString(arguments[i]) || Type.isArray(arguments[i])) {
                        options.easing = arguments[i];
                    } else if (Type.isFunction(arguments[i])) {
                        options.complete = arguments[i];
                    }
                }
            }
            var promiseData = {
                promise: null,
                resolver: null,
                rejecter: null
            };
            if (isUtility && Velocity.Promise) {
                promiseData.promise = new Velocity.Promise(function (resolve, reject) {
                    promiseData.resolver = resolve;
                    promiseData.rejecter = reject;
                });
            }
            var action;
            switch (propertiesMap) {
            case 'scroll':
                action = 'scroll';
                break;
            case 'reverse':
                action = 'reverse';
                break;
            case 'stop':
                $.each(elements, function (i, element) {
                    if (Data(element) && Data(element).delayTimer) {
                        clearTimeout(Data(element).delayTimer.setTimeout);
                        if (Data(element).delayTimer.next) {
                            Data(element).delayTimer.next();
                        }
                        delete Data(element).delayTimer;
                    }
                });
                var callsToStop = [];
                $.each(Velocity.State.calls, function (i, activeCall) {
                    if (activeCall) {
                        $.each(activeCall[1], function (k, activeElement) {
                            var queueName = Type.isString(options) ? options : '';
                            if (options !== undefined && activeCall[2].queue !== queueName) {
                                return true;
                            }
                            $.each(elements, function (l, element) {
                                if (element === activeElement) {
                                    if (options !== undefined) {
                                        $.each($.queue(element, queueName), function (_, item) {
                                            if (Type.isFunction(item)) {
                                                item(null, true);
                                            }
                                        });
                                        $.queue(element, queueName, []);
                                    }
                                    if (Data(element) && queueName === '') {
                                        $.each(Data(element).tweensContainer, function (m, activeTween) {
                                            activeTween.endValue = activeTween.currentValue;
                                        });
                                    }
                                    callsToStop.push(i);
                                }
                            });
                        });
                    }
                });
                $.each(callsToStop, function (i, j) {
                    completeCall(j, true);
                });
                if (promiseData.promise) {
                    promiseData.resolver(elements);
                }
                return getChain();
            default:
                if ($.isPlainObject(propertiesMap) && !Type.isEmptyObject(propertiesMap)) {
                    action = 'start';
                } else if (Type.isString(propertiesMap) && Velocity.Redirects[propertiesMap]) {
                    var opts = $.extend({}, options), durationOriginal = opts.duration, delayOriginal = opts.delay || 0;
                    if (opts.backwards === true) {
                        elements = $.extend(true, [], elements).reverse();
                    }
                    $.each(elements, function (elementIndex, element) {
                        if (parseFloat(opts.stagger)) {
                            opts.delay = delayOriginal + parseFloat(opts.stagger) * elementIndex;
                        } else if (Type.isFunction(opts.stagger)) {
                            opts.delay = delayOriginal + opts.stagger.call(element, elementIndex, elementsLength);
                        }
                        if (opts.drag) {
                            opts.duration = parseFloat(durationOriginal) || (/^(callout|transition)/.test(propertiesMap) ? 1000 : DURATION_DEFAULT);
                            opts.duration = Math.max(opts.duration * (opts.backwards ? 1 - elementIndex / elementsLength : (elementIndex + 1) / elementsLength), opts.duration * 0.75, 200);
                        }
                        Velocity.Redirects[propertiesMap].call(element, element, opts || {}, elementIndex, elementsLength, elements, promiseData.promise ? promiseData : undefined);
                    });
                    return getChain();
                } else {
                    var abortError = 'Velocity: First argument (' + propertiesMap + ') was not a property map, a known action, or a registered redirect. Aborting.';
                    if (promiseData.promise) {
                        promiseData.rejecter(new Error(abortError));
                    } else {
                        console.log(abortError);
                    }
                    return getChain();
                }
            }
            var callUnitConversionData = {
                lastParent: null,
                lastPosition: null,
                lastFontSize: null,
                lastPercentToPxWidth: null,
                lastPercentToPxHeight: null,
                lastEmToPx: null,
                remToPx: null,
                vwToPx: null,
                vhToPx: null
            };
            var call = [];
            function processElement() {
                var element = this, opts = $.extend({}, Velocity.defaults, options), tweensContainer = {}, elementUnitConversionData;
                if (Data(element) === undefined) {
                    Velocity.init(element);
                }
                if (parseFloat(opts.delay) && opts.queue !== false) {
                    $.queue(element, opts.queue, function (next) {
                        Velocity.velocityQueueEntryFlag = true;
                        Data(element).delayTimer = {
                            setTimeout: setTimeout(next, parseFloat(opts.delay)),
                            next: next
                        };
                    });
                }
                switch (opts.duration.toString().toLowerCase()) {
                case 'fast':
                    opts.duration = 200;
                    break;
                case 'normal':
                    opts.duration = DURATION_DEFAULT;
                    break;
                case 'slow':
                    opts.duration = 600;
                    break;
                default:
                    opts.duration = parseFloat(opts.duration) || 1;
                }
                if (Velocity.mock !== false) {
                    if (Velocity.mock === true) {
                        opts.duration = opts.delay = 1;
                    } else {
                        opts.duration *= parseFloat(Velocity.mock) || 1;
                        opts.delay *= parseFloat(Velocity.mock) || 1;
                    }
                }
                opts.easing = getEasing(opts.easing, opts.duration);
                if (opts.begin && !Type.isFunction(opts.begin)) {
                    opts.begin = null;
                }
                if (opts.progress && !Type.isFunction(opts.progress)) {
                    opts.progress = null;
                }
                if (opts.complete && !Type.isFunction(opts.complete)) {
                    opts.complete = null;
                }
                if (opts.display !== undefined && opts.display !== null) {
                    opts.display = opts.display.toString().toLowerCase();
                    if (opts.display === 'auto') {
                        opts.display = Velocity.CSS.Values.getDisplayType(element);
                    }
                }
                if (opts.visibility !== undefined && opts.visibility !== null) {
                    opts.visibility = opts.visibility.toString().toLowerCase();
                }
                opts.mobileHA = opts.mobileHA && Velocity.State.isMobile && !Velocity.State.isGingerbread;
                function buildQueue(next) {
                    if (opts.begin && elementsIndex === 0) {
                        try {
                            opts.begin.call(elements, elements);
                        } catch (error) {
                            setTimeout(function () {
                                throw error;
                            }, 1);
                        }
                    }
                    if (action === 'scroll') {
                        var scrollDirection = /^x$/i.test(opts.axis) ? 'Left' : 'Top', scrollOffset = parseFloat(opts.offset) || 0, scrollPositionCurrent, scrollPositionCurrentAlternate, scrollPositionEnd;
                        if (opts.container) {
                            if (Type.isWrapped(opts.container) || Type.isNode(opts.container)) {
                                opts.container = opts.container[0] || opts.container;
                                scrollPositionCurrent = opts.container['scroll' + scrollDirection];
                                scrollPositionEnd = scrollPositionCurrent + $(element).position()[scrollDirection.toLowerCase()] + scrollOffset;
                            } else {
                                opts.container = null;
                            }
                        } else {
                            scrollPositionCurrent = Velocity.State.scrollAnchor[Velocity.State['scrollProperty' + scrollDirection]];
                            scrollPositionCurrentAlternate = Velocity.State.scrollAnchor[Velocity.State['scrollProperty' + (scrollDirection === 'Left' ? 'Top' : 'Left')]];
                            scrollPositionEnd = $(element).offset()[scrollDirection.toLowerCase()] + scrollOffset;
                        }
                        tweensContainer = {
                            scroll: {
                                rootPropertyValue: false,
                                startValue: scrollPositionCurrent,
                                currentValue: scrollPositionCurrent,
                                endValue: scrollPositionEnd,
                                unitType: '',
                                easing: opts.easing,
                                scrollData: {
                                    container: opts.container,
                                    direction: scrollDirection,
                                    alternateValue: scrollPositionCurrentAlternate
                                }
                            },
                            element: element
                        };
                        if (Velocity.debug)
                            console.log('tweensContainer (scroll): ', tweensContainer.scroll, element);
                    } else if (action === 'reverse') {
                        if (!Data(element).tweensContainer) {
                            $.dequeue(element, opts.queue);
                            return;
                        } else {
                            if (Data(element).opts.display === 'none') {
                                Data(element).opts.display = 'auto';
                            }
                            if (Data(element).opts.visibility === 'hidden') {
                                Data(element).opts.visibility = 'visible';
                            }
                            Data(element).opts.loop = false;
                            Data(element).opts.begin = null;
                            Data(element).opts.complete = null;
                            if (!options.easing) {
                                delete opts.easing;
                            }
                            if (!options.duration) {
                                delete opts.duration;
                            }
                            opts = $.extend({}, Data(element).opts, opts);
                            var lastTweensContainer = $.extend(true, {}, Data(element).tweensContainer);
                            for (var lastTween in lastTweensContainer) {
                                if (lastTween !== 'element') {
                                    var lastStartValue = lastTweensContainer[lastTween].startValue;
                                    lastTweensContainer[lastTween].startValue = lastTweensContainer[lastTween].currentValue = lastTweensContainer[lastTween].endValue;
                                    lastTweensContainer[lastTween].endValue = lastStartValue;
                                    if (!Type.isEmptyObject(options)) {
                                        lastTweensContainer[lastTween].easing = opts.easing;
                                    }
                                    if (Velocity.debug)
                                        console.log('reverse tweensContainer (' + lastTween + '): ' + JSON.stringify(lastTweensContainer[lastTween]), element);
                                }
                            }
                            tweensContainer = lastTweensContainer;
                        }
                    } else if (action === 'start') {
                        var lastTweensContainer;
                        if (Data(element).tweensContainer && Data(element).isAnimating === true) {
                            lastTweensContainer = Data(element).tweensContainer;
                        }
                        function parsePropertyValue(valueData, skipResolvingEasing) {
                            var endValue = undefined, easing = undefined, startValue = undefined;
                            if (Type.isArray(valueData)) {
                                endValue = valueData[0];
                                if (!Type.isArray(valueData[1]) && /^[\d-]/.test(valueData[1]) || Type.isFunction(valueData[1]) || CSS.RegEx.isHex.test(valueData[1])) {
                                    startValue = valueData[1];
                                } else if (Type.isString(valueData[1]) && !CSS.RegEx.isHex.test(valueData[1]) || Type.isArray(valueData[1])) {
                                    easing = skipResolvingEasing ? valueData[1] : getEasing(valueData[1], opts.duration);
                                    if (valueData[2] !== undefined) {
                                        startValue = valueData[2];
                                    }
                                }
                            } else {
                                endValue = valueData;
                            }
                            if (!skipResolvingEasing) {
                                easing = easing || opts.easing;
                            }
                            if (Type.isFunction(endValue)) {
                                endValue = endValue.call(element, elementsIndex, elementsLength);
                            }
                            if (Type.isFunction(startValue)) {
                                startValue = startValue.call(element, elementsIndex, elementsLength);
                            }
                            return [
                                endValue || 0,
                                easing,
                                startValue
                            ];
                        }
                        $.each(propertiesMap, function (property, value) {
                            if (RegExp('^' + CSS.Lists.colors.join('$|^') + '$').test(property)) {
                                var valueData = parsePropertyValue(value, true), endValue = valueData[0], easing = valueData[1], startValue = valueData[2];
                                if (CSS.RegEx.isHex.test(endValue)) {
                                    var colorComponents = [
                                            'Red',
                                            'Green',
                                            'Blue'
                                        ], endValueRGB = CSS.Values.hexToRgb(endValue), startValueRGB = startValue ? CSS.Values.hexToRgb(startValue) : undefined;
                                    for (var i = 0; i < colorComponents.length; i++) {
                                        var dataArray = [endValueRGB[i]];
                                        if (easing) {
                                            dataArray.push(easing);
                                        }
                                        if (startValueRGB !== undefined) {
                                            dataArray.push(startValueRGB[i]);
                                        }
                                        propertiesMap[property + colorComponents[i]] = dataArray;
                                    }
                                    delete propertiesMap[property];
                                }
                            }
                        });
                        for (var property in propertiesMap) {
                            var valueData = parsePropertyValue(propertiesMap[property]), endValue = valueData[0], easing = valueData[1], startValue = valueData[2];
                            property = CSS.Names.camelCase(property);
                            var rootProperty = CSS.Hooks.getRoot(property), rootPropertyValue = false;
                            if (!Data(element).isSVG && CSS.Names.prefixCheck(rootProperty)[1] === false && CSS.Normalizations.registered[rootProperty] === undefined) {
                                if (Velocity.debug)
                                    console.log('Skipping [' + rootProperty + '] due to a lack of browser support.');
                                continue;
                            }
                            if ((opts.display !== undefined && opts.display !== null && opts.display !== 'none' || opts.visibility !== undefined && opts.visibility !== 'hidden') && /opacity|filter/.test(property) && !startValue && endValue !== 0) {
                                startValue = 0;
                            }
                            if (opts._cacheValues && lastTweensContainer && lastTweensContainer[property]) {
                                if (startValue === undefined) {
                                    startValue = lastTweensContainer[property].endValue + lastTweensContainer[property].unitType;
                                }
                                rootPropertyValue = Data(element).rootPropertyValueCache[rootProperty];
                            } else {
                                if (CSS.Hooks.registered[property]) {
                                    if (startValue === undefined) {
                                        rootPropertyValue = CSS.getPropertyValue(element, rootProperty);
                                        startValue = CSS.getPropertyValue(element, property, rootPropertyValue);
                                    } else {
                                        rootPropertyValue = CSS.Hooks.templates[rootProperty][1];
                                    }
                                } else if (startValue === undefined) {
                                    startValue = CSS.getPropertyValue(element, property);
                                }
                            }
                            var separatedValue, endValueUnitType, startValueUnitType, operator = false;
                            function separateValue(property, value) {
                                var unitType, numericValue;
                                numericValue = (value || '0').toString().toLowerCase().replace(/[%A-z]+$/, function (match) {
                                    unitType = match;
                                    return '';
                                });
                                if (!unitType) {
                                    unitType = CSS.Values.getUnitType(property);
                                }
                                return [
                                    numericValue,
                                    unitType
                                ];
                            }
                            separatedValue = separateValue(property, startValue);
                            startValue = separatedValue[0];
                            startValueUnitType = separatedValue[1];
                            separatedValue = separateValue(property, endValue);
                            endValue = separatedValue[0].replace(/^([+-\/*])=/, function (match, subMatch) {
                                operator = subMatch;
                                return '';
                            });
                            endValueUnitType = separatedValue[1];
                            startValue = parseFloat(startValue) || 0;
                            endValue = parseFloat(endValue) || 0;
                            if (endValueUnitType === '%') {
                                if (/^(fontSize|lineHeight)$/.test(property)) {
                                    endValue = endValue / 100;
                                    endValueUnitType = 'em';
                                } else if (/^scale/.test(property)) {
                                    endValue = endValue / 100;
                                    endValueUnitType = '';
                                } else if (/(Red|Green|Blue)$/i.test(property)) {
                                    endValue = endValue / 100 * 255;
                                    endValueUnitType = '';
                                }
                            }
                            function calculateUnitRatios() {
                                var sameRatioIndicators = {
                                        myParent: element.parentNode || document.body,
                                        position: CSS.getPropertyValue(element, 'position'),
                                        fontSize: CSS.getPropertyValue(element, 'fontSize')
                                    }, samePercentRatio = sameRatioIndicators.position === callUnitConversionData.lastPosition && sameRatioIndicators.myParent === callUnitConversionData.lastParent, sameEmRatio = sameRatioIndicators.fontSize === callUnitConversionData.lastFontSize;
                                callUnitConversionData.lastParent = sameRatioIndicators.myParent;
                                callUnitConversionData.lastPosition = sameRatioIndicators.position;
                                callUnitConversionData.lastFontSize = sameRatioIndicators.fontSize;
                                var measurement = 100, unitRatios = {};
                                if (!sameEmRatio || !samePercentRatio) {
                                    var dummy = Data(element).isSVG ? document.createElementNS('http://www.w3.org/2000/svg', 'rect') : document.createElement('div');
                                    Velocity.init(dummy);
                                    sameRatioIndicators.myParent.appendChild(dummy);
                                    $.each([
                                        'overflow',
                                        'overflowX',
                                        'overflowY'
                                    ], function (i, property) {
                                        Velocity.CSS.setPropertyValue(dummy, property, 'hidden');
                                    });
                                    Velocity.CSS.setPropertyValue(dummy, 'position', sameRatioIndicators.position);
                                    Velocity.CSS.setPropertyValue(dummy, 'fontSize', sameRatioIndicators.fontSize);
                                    Velocity.CSS.setPropertyValue(dummy, 'boxSizing', 'content-box');
                                    $.each([
                                        'minWidth',
                                        'maxWidth',
                                        'width',
                                        'minHeight',
                                        'maxHeight',
                                        'height'
                                    ], function (i, property) {
                                        Velocity.CSS.setPropertyValue(dummy, property, measurement + '%');
                                    });
                                    Velocity.CSS.setPropertyValue(dummy, 'paddingLeft', measurement + 'em');
                                    unitRatios.percentToPxWidth = callUnitConversionData.lastPercentToPxWidth = (parseFloat(CSS.getPropertyValue(dummy, 'width', null, true)) || 1) / measurement;
                                    unitRatios.percentToPxHeight = callUnitConversionData.lastPercentToPxHeight = (parseFloat(CSS.getPropertyValue(dummy, 'height', null, true)) || 1) / measurement;
                                    unitRatios.emToPx = callUnitConversionData.lastEmToPx = (parseFloat(CSS.getPropertyValue(dummy, 'paddingLeft')) || 1) / measurement;
                                    sameRatioIndicators.myParent.removeChild(dummy);
                                } else {
                                    unitRatios.emToPx = callUnitConversionData.lastEmToPx;
                                    unitRatios.percentToPxWidth = callUnitConversionData.lastPercentToPxWidth;
                                    unitRatios.percentToPxHeight = callUnitConversionData.lastPercentToPxHeight;
                                }
                                if (callUnitConversionData.remToPx === null) {
                                    callUnitConversionData.remToPx = parseFloat(CSS.getPropertyValue(document.body, 'fontSize')) || 16;
                                }
                                if (callUnitConversionData.vwToPx === null) {
                                    callUnitConversionData.vwToPx = parseFloat(window.innerWidth) / 100;
                                    callUnitConversionData.vhToPx = parseFloat(window.innerHeight) / 100;
                                }
                                unitRatios.remToPx = callUnitConversionData.remToPx;
                                unitRatios.vwToPx = callUnitConversionData.vwToPx;
                                unitRatios.vhToPx = callUnitConversionData.vhToPx;
                                if (Velocity.debug >= 1)
                                    console.log('Unit ratios: ' + JSON.stringify(unitRatios), element);
                                return unitRatios;
                            }
                            if (/[\/*]/.test(operator)) {
                                endValueUnitType = startValueUnitType;
                            } else if (startValueUnitType !== endValueUnitType && startValue !== 0) {
                                if (endValue === 0) {
                                    endValueUnitType = startValueUnitType;
                                } else {
                                    elementUnitConversionData = elementUnitConversionData || calculateUnitRatios();
                                    var axis = /margin|padding|left|right|width|text|word|letter/i.test(property) || /X$/.test(property) || property === 'x' ? 'x' : 'y';
                                    switch (startValueUnitType) {
                                    case '%':
                                        startValue *= axis === 'x' ? elementUnitConversionData.percentToPxWidth : elementUnitConversionData.percentToPxHeight;
                                        break;
                                    case 'px':
                                        break;
                                    default:
                                        startValue *= elementUnitConversionData[startValueUnitType + 'ToPx'];
                                    }
                                    switch (endValueUnitType) {
                                    case '%':
                                        startValue *= 1 / (axis === 'x' ? elementUnitConversionData.percentToPxWidth : elementUnitConversionData.percentToPxHeight);
                                        break;
                                    case 'px':
                                        break;
                                    default:
                                        startValue *= 1 / elementUnitConversionData[endValueUnitType + 'ToPx'];
                                    }
                                }
                            }
                            switch (operator) {
                            case '+':
                                endValue = startValue + endValue;
                                break;
                            case '-':
                                endValue = startValue - endValue;
                                break;
                            case '*':
                                endValue = startValue * endValue;
                                break;
                            case '/':
                                endValue = startValue / endValue;
                                break;
                            }
                            tweensContainer[property] = {
                                rootPropertyValue: rootPropertyValue,
                                startValue: startValue,
                                currentValue: startValue,
                                endValue: endValue,
                                unitType: endValueUnitType,
                                easing: easing
                            };
                            if (Velocity.debug)
                                console.log('tweensContainer (' + property + '): ' + JSON.stringify(tweensContainer[property]), element);
                        }
                        tweensContainer.element = element;
                    }
                    if (tweensContainer.element) {
                        CSS.Values.addClass(element, 'velocity-animating');
                        call.push(tweensContainer);
                        if (opts.queue === '') {
                            Data(element).tweensContainer = tweensContainer;
                            Data(element).opts = opts;
                        }
                        Data(element).isAnimating = true;
                        if (elementsIndex === elementsLength - 1) {
                            if (Velocity.State.calls.length > 10000) {
                                Velocity.State.calls = compactSparseArray(Velocity.State.calls);
                            }
                            Velocity.State.calls.push([
                                call,
                                elements,
                                opts,
                                null,
                                promiseData.resolver
                            ]);
                            if (Velocity.State.isTicking === false) {
                                Velocity.State.isTicking = true;
                                tick();
                            }
                        } else {
                            elementsIndex++;
                        }
                    }
                }
                if (opts.queue === false) {
                    if (opts.delay) {
                        setTimeout(buildQueue, opts.delay);
                    } else {
                        buildQueue();
                    }
                } else {
                    $.queue(element, opts.queue, function (next, clearQueue) {
                        if (clearQueue === true) {
                            if (promiseData.promise) {
                                promiseData.resolver(elements);
                            }
                            return true;
                        }
                        Velocity.velocityQueueEntryFlag = true;
                        buildQueue(next);
                    });
                }
                if ((opts.queue === '' || opts.queue === 'fx') && $.queue(element)[0] !== 'inprogress') {
                    $.dequeue(element);
                }
            }
            $.each(elements, function (i, element) {
                if (Type.isNode(element)) {
                    processElement.call(element);
                }
            });
            var opts = $.extend({}, Velocity.defaults, options), reverseCallsCount;
            opts.loop = parseInt(opts.loop);
            reverseCallsCount = opts.loop * 2 - 1;
            if (opts.loop) {
                for (var x = 0; x < reverseCallsCount; x++) {
                    var reverseOptions = {
                        delay: opts.delay,
                        progress: opts.progress
                    };
                    if (x === reverseCallsCount - 1) {
                        reverseOptions.display = opts.display;
                        reverseOptions.visibility = opts.visibility;
                        reverseOptions.complete = opts.complete;
                    }
                    animate(elements, 'reverse', reverseOptions);
                }
            }
            return getChain();
        };
        Velocity = $.extend(animate, Velocity);
        Velocity.animate = animate;
        var ticker = window.requestAnimationFrame || rAFShim;
        if (!Velocity.State.isMobile && document.hidden !== undefined) {
            document.addEventListener('visibilitychange', function () {
                if (document.hidden) {
                    ticker = function (callback) {
                        return setTimeout(function () {
                            callback(true);
                        }, 16);
                    };
                    tick();
                } else {
                    ticker = window.requestAnimationFrame || rAFShim;
                }
            });
        }
        function tick(timestamp) {
            if (timestamp) {
                var timeCurrent = new Date().getTime();
                for (var i = 0, callsLength = Velocity.State.calls.length; i < callsLength; i++) {
                    if (!Velocity.State.calls[i]) {
                        continue;
                    }
                    var callContainer = Velocity.State.calls[i], call = callContainer[0], opts = callContainer[2], timeStart = callContainer[3], firstTick = !!timeStart;
                    if (!timeStart) {
                        timeStart = Velocity.State.calls[i][3] = timeCurrent - 16;
                    }
                    var percentComplete = Math.min((timeCurrent - timeStart) / opts.duration, 1);
                    for (var j = 0, callLength = call.length; j < callLength; j++) {
                        var tweensContainer = call[j], element = tweensContainer.element;
                        if (!Data(element)) {
                            continue;
                        }
                        var transformPropertyExists = false;
                        if (opts.display !== undefined && opts.display !== null && opts.display !== 'none') {
                            if (opts.display === 'flex') {
                                var flexValues = [
                                    '-webkit-box',
                                    '-moz-box',
                                    '-ms-flexbox',
                                    '-webkit-flex'
                                ];
                                $.each(flexValues, function (i, flexValue) {
                                    CSS.setPropertyValue(element, 'display', flexValue);
                                });
                            }
                            CSS.setPropertyValue(element, 'display', opts.display);
                        }
                        if (opts.visibility !== undefined && opts.visibility !== 'hidden') {
                            CSS.setPropertyValue(element, 'visibility', opts.visibility);
                        }
                        for (var property in tweensContainer) {
                            if (property !== 'element') {
                                var tween = tweensContainer[property], currentValue, easing = Type.isString(tween.easing) ? Velocity.Easings[tween.easing] : tween.easing;
                                if (percentComplete === 1) {
                                    currentValue = tween.endValue;
                                } else {
                                    currentValue = tween.startValue + (tween.endValue - tween.startValue) * easing(percentComplete);
                                    if (!firstTick && currentValue === tween.currentValue) {
                                        continue;
                                    }
                                }
                                tween.currentValue = currentValue;
                                if (CSS.Hooks.registered[property]) {
                                    var hookRoot = CSS.Hooks.getRoot(property), rootPropertyValueCache = Data(element).rootPropertyValueCache[hookRoot];
                                    if (rootPropertyValueCache) {
                                        tween.rootPropertyValue = rootPropertyValueCache;
                                    }
                                }
                                var adjustedSetData = CSS.setPropertyValue(element, property, tween.currentValue + (parseFloat(currentValue) === 0 ? '' : tween.unitType), tween.rootPropertyValue, tween.scrollData);
                                if (CSS.Hooks.registered[property]) {
                                    if (CSS.Normalizations.registered[hookRoot]) {
                                        Data(element).rootPropertyValueCache[hookRoot] = CSS.Normalizations.registered[hookRoot]('extract', null, adjustedSetData[1]);
                                    } else {
                                        Data(element).rootPropertyValueCache[hookRoot] = adjustedSetData[1];
                                    }
                                }
                                if (adjustedSetData[0] === 'transform') {
                                    transformPropertyExists = true;
                                }
                            }
                        }
                        if (opts.mobileHA) {
                            if (Data(element).transformCache.translate3d === undefined) {
                                Data(element).transformCache.translate3d = '(0px, 0px, 0px)';
                                transformPropertyExists = true;
                            }
                        }
                        if (transformPropertyExists) {
                            CSS.flushTransformCache(element);
                        }
                    }
                    if (opts.display !== undefined && opts.display !== 'none') {
                        Velocity.State.calls[i][2].display = false;
                    }
                    if (opts.visibility !== undefined && opts.visibility !== 'hidden') {
                        Velocity.State.calls[i][2].visibility = false;
                    }
                    if (opts.progress) {
                        opts.progress.call(callContainer[1], callContainer[1], percentComplete, Math.max(0, timeStart + opts.duration - timeCurrent), timeStart);
                    }
                    if (percentComplete === 1) {
                        completeCall(i);
                    }
                }
            }
            if (Velocity.State.isTicking) {
                ticker(tick);
            }
        }
        function completeCall(callIndex, isStopped) {
            if (!Velocity.State.calls[callIndex]) {
                return false;
            }
            var call = Velocity.State.calls[callIndex][0], elements = Velocity.State.calls[callIndex][1], opts = Velocity.State.calls[callIndex][2], resolver = Velocity.State.calls[callIndex][4];
            var remainingCallsExist = false;
            for (var i = 0, callLength = call.length; i < callLength; i++) {
                var element = call[i].element;
                if (!isStopped && !opts.loop) {
                    if (opts.display === 'none') {
                        CSS.setPropertyValue(element, 'display', opts.display);
                    }
                    if (opts.visibility === 'hidden') {
                        CSS.setPropertyValue(element, 'visibility', opts.visibility);
                    }
                }
                if (opts.loop !== true && ($.queue(element)[1] === undefined || !/\.velocityQueueEntryFlag/i.test($.queue(element)[1]))) {
                    if (Data(element)) {
                        Data(element).isAnimating = false;
                        Data(element).rootPropertyValueCache = {};
                        var transformHAPropertyExists = false;
                        $.each(CSS.Lists.transforms3D, function (i, transformName) {
                            var defaultValue = /^scale/.test(transformName) ? 1 : 0, currentValue = Data(element).transformCache[transformName];
                            if (Data(element).transformCache[transformName] !== undefined && new RegExp('^\\(' + defaultValue + '[^.]').test(currentValue)) {
                                transformHAPropertyExists = true;
                                delete Data(element).transformCache[transformName];
                            }
                        });
                        if (opts.mobileHA) {
                            transformHAPropertyExists = true;
                            delete Data(element).transformCache.translate3d;
                        }
                        if (transformHAPropertyExists) {
                            CSS.flushTransformCache(element);
                        }
                        CSS.Values.removeClass(element, 'velocity-animating');
                    }
                }
                if (!isStopped && opts.complete && !opts.loop && i === callLength - 1) {
                    try {
                        opts.complete.call(elements, elements);
                    } catch (error) {
                        setTimeout(function () {
                            throw error;
                        }, 1);
                    }
                }
                if (resolver && opts.loop !== true) {
                    resolver(elements);
                }
                if (opts.loop === true && !isStopped) {
                    $.each(Data(element).tweensContainer, function (propertyName, tweenContainer) {
                        if (/^rotate/.test(propertyName) && parseFloat(tweenContainer.endValue) === 360) {
                            tweenContainer.endValue = 0;
                            tweenContainer.startValue = 360;
                        }
                    });
                    Velocity(element, 'reverse', {
                        loop: true,
                        delay: opts.delay
                    });
                }
                if (opts.queue !== false) {
                    $.dequeue(element, opts.queue);
                }
            }
            Velocity.State.calls[callIndex] = false;
            for (var j = 0, callsLength = Velocity.State.calls.length; j < callsLength; j++) {
                if (Velocity.State.calls[j] !== false) {
                    remainingCallsExist = true;
                    break;
                }
            }
            if (remainingCallsExist === false) {
                Velocity.State.isTicking = false;
                delete Velocity.State.calls;
                Velocity.State.calls = [];
            }
        }
        global.Velocity = Velocity;
        if (global !== window) {
            global.fn.velocity = animate;
            global.fn.velocity.defaults = Velocity.defaults;
        }
        $.each([
            'Down',
            'Up'
        ], function (i, direction) {
            Velocity.Redirects['slide' + direction] = function (element, options, elementsIndex, elementsSize, elements, promiseData) {
                var opts = $.extend({}, options), begin = opts.begin, complete = opts.complete, computedValues = {
                        height: '',
                        marginTop: '',
                        marginBottom: '',
                        paddingTop: '',
                        paddingBottom: ''
                    }, inlineValues = {};
                if (opts.display === undefined) {
                    opts.display = direction === 'Down' ? Velocity.CSS.Values.getDisplayType(element) === 'inline' ? 'inline-block' : 'block' : 'none';
                }
                opts.begin = function () {
                    begin && begin.call(elements, elements);
                    for (var property in computedValues) {
                        inlineValues[property] = element.style[property];
                        var propertyValue = Velocity.CSS.getPropertyValue(element, property);
                        computedValues[property] = direction === 'Down' ? [
                            propertyValue,
                            0
                        ] : [
                            0,
                            propertyValue
                        ];
                    }
                    inlineValues.overflow = element.style.overflow;
                    element.style.overflow = 'hidden';
                };
                opts.complete = function () {
                    for (var property in inlineValues) {
                        element.style[property] = inlineValues[property];
                    }
                    complete && complete.call(elements, elements);
                    promiseData && promiseData.resolver(elements);
                };
                Velocity(element, computedValues, opts);
            };
        });
        $.each([
            'In',
            'Out'
        ], function (i, direction) {
            Velocity.Redirects['fade' + direction] = function (element, options, elementsIndex, elementsSize, elements, promiseData) {
                var opts = $.extend({}, options), propertiesMap = { opacity: direction === 'In' ? 1 : 0 }, originalComplete = opts.complete;
                if (elementsIndex !== elementsSize - 1) {
                    opts.complete = opts.begin = null;
                } else {
                    opts.complete = function () {
                        if (originalComplete) {
                            originalComplete.call(elements, elements);
                        }
                        promiseData && promiseData.resolver(elements);
                    };
                }
                if (opts.display === undefined) {
                    opts.display = direction === 'In' ? 'auto' : 'none';
                }
                Velocity(this, propertiesMap, opts);
            };
        });
        return Velocity;
    }(window.jQuery || window.Zepto || window, window, document);
}));

(function ($) {
    var h = $.scrollTo = function (a, b, c) {
        $(window).scrollTo(a, b, c);
    };
    h.defaults = {
        axis: 'xy',
        duration: parseFloat($.fn.jquery) >= 1.3 ? 0 : 1,
        limit: true
    };
    h.window = function (a) {
        return $(window)._scrollable();
    };
    $.fn._scrollable = function () {
        return this.map(function () {
            var a = this, isWin = !a.nodeName || $.inArray(a.nodeName.toLowerCase(), [
                    'iframe',
                    '#document',
                    'html',
                    'body'
                ]) != -1;
            if (!isWin)
                return a;
            var b = (a.contentWindow || a).document || (a.ownerDocument || a);
            return /webkit/i.test(navigator.userAgent) || b.compatMode == 'BackCompat' ? b.body : b.documentElement;
        });
    };
    $.fn.scrollTo = function (e, f, g) {
        if (typeof f == 'object') {
            g = f;
            f = 0;
        }
        if (typeof g == 'function')
            g = { onAfter: g };
        if (e == 'max')
            e = 9000000000;
        g = $.extend({}, h.defaults, g);
        f = f || g.duration;
        g.queue = g.queue && g.axis.length > 1;
        if (g.queue)
            f /= 2;
        g.offset = both(g.offset);
        g.over = both(g.over);
        return this._scrollable().each(function () {
            if (e == null)
                return;
            var d = this, $elem = $(d), targ = e, toff, attr = {}, win = $elem.is('html,body');
            switch (typeof targ) {
            case 'number':
            case 'string':
                if (/^([+-]=)?\d+(\.\d+)?(px|%)?$/.test(targ)) {
                    targ = both(targ);
                    break;
                }
                targ = $(targ, this);
                if (!targ.length)
                    return;
            case 'object':
                if (targ.is || targ.style)
                    toff = (targ = $(targ)).offset();
            }
            $.each(g.axis.split(''), function (i, a) {
                var b = a == 'x' ? 'Left' : 'Top', pos = b.toLowerCase(), key = 'scroll' + b, old = d[key], max = h.max(d, a);
                if (toff) {
                    attr[key] = toff[pos] + (win ? 0 : old - $elem.offset()[pos]);
                    if (g.margin) {
                        attr[key] -= parseInt(targ.css('margin' + b)) || 0;
                        attr[key] -= parseInt(targ.css('border' + b + 'Width')) || 0;
                    }
                    attr[key] += g.offset[pos] || 0;
                    if (g.over[pos])
                        attr[key] += targ[a == 'x' ? 'width' : 'height']() * g.over[pos];
                } else {
                    var c = targ[pos];
                    attr[key] = c.slice && c.slice(-1) == '%' ? parseFloat(c) / 100 * max : c;
                }
                if (g.limit && /^\d+$/.test(attr[key]))
                    attr[key] = attr[key] <= 0 ? 0 : Math.min(attr[key], max);
                if (!i && g.queue) {
                    if (old != attr[key])
                        animate(g.onAfterFirst);
                    delete attr[key];
                }
            });
            animate(g.onAfter);
            function animate(a) {
                $elem.animate(attr, f, g.easing, a && function () {
                    a.call(this, e, g);
                });
            }
        }).end();
    };
    h.max = function (a, b) {
        var c = b == 'x' ? 'Width' : 'Height', scroll = 'scroll' + c;
        if (!$(a).is('html,body'))
            return a[scroll] - $(a)[c.toLowerCase()]();
        var d = 'client' + c, html = a.ownerDocument.documentElement, body = a.ownerDocument.body;
        return Math.max(html[scroll], body[scroll]) - Math.min(html[d], body[d]);
    };
    function both(a) {
        return typeof a == 'object' ? a : {
            top: a,
            left: a
        };
    }
}(jQuery));
define('scrollTo', [], function () {
    return;
});

var swfobject = function () {
    var D = 'undefined', r = 'object', S = 'Shockwave Flash', W = 'ShockwaveFlash.ShockwaveFlash', q = 'application/x-shockwave-flash', R = 'SWFObjectExprInst', x = 'onreadystatechange', O = window, j = document, t = navigator, T = false, U = [h], o = [], N = [], I = [], l, Q, E, B, J = false, a = false, n, G, m = true, M = function () {
            var aa = typeof j.getElementById != D && (typeof j.getElementsByTagName != D && typeof j.createElement != D), ah = t.userAgent.toLowerCase(), Y = t.platform.toLowerCase(), ae = Y ? /win/.test(Y) : /win/.test(ah), ac = Y ? /mac/.test(Y) : /mac/.test(ah), af = /webkit/.test(ah) ? parseFloat(ah.replace(/^.*webkit\/(\d+(\.\d+)?).*$/, '$1')) : false, X = !+'\x0B1', ag = [
                    0,
                    0,
                    0
                ], ab = null;
            if (typeof t.plugins != D && typeof t.plugins[S] == r) {
                ab = t.plugins[S].description;
                if (ab && !(typeof t.mimeTypes != D && (t.mimeTypes[q] && !t.mimeTypes[q].enabledPlugin))) {
                    T = true;
                    X = false;
                    ab = ab.replace(/^.*\s+(\S+\s+\S+$)/, '$1');
                    ag[0] = parseInt(ab.replace(/^(.*)\..*$/, '$1'), 10);
                    ag[1] = parseInt(ab.replace(/^.*\.(.*)\s.*$/, '$1'), 10);
                    ag[2] = /[a-zA-Z]/.test(ab) ? parseInt(ab.replace(/^.*[a-zA-Z]+(.*)$/, '$1'), 10) : 0;
                }
            } else if (typeof O.ActiveXObject != D)
                try {
                    var ad = new ActiveXObject(W);
                    if (ad) {
                        ab = ad.GetVariable('$version');
                        if (ab) {
                            X = true;
                            ab = ab.split(' ')[1].split(',');
                            ag = [
                                parseInt(ab[0], 10),
                                parseInt(ab[1], 10),
                                parseInt(ab[2], 10)
                            ];
                        }
                    }
                } catch (Z) {
                }
            return {
                w3: aa,
                pv: ag,
                wk: af,
                ie: X,
                win: ae,
                mac: ac
            };
        }(), k = function () {
            if (!M.w3)
                return;
            if (typeof j.readyState != D && j.readyState == 'complete' || typeof j.readyState == D && (j.getElementsByTagName('body')[0] || j.body))
                f();
            if (!J) {
                if (typeof j.addEventListener != D)
                    j.addEventListener('DOMContentLoaded', f, false);
                if (M.ie && M.win) {
                    j.attachEvent(x, function () {
                        if (j.readyState == 'complete') {
                            j.detachEvent(x, arguments.callee);
                            f();
                        }
                    });
                    if (O == top)
                        (function () {
                            if (J)
                                return;
                            try {
                                j.documentElement.doScroll('left');
                            } catch (X) {
                                setTimeout(arguments.callee, 0);
                                return;
                            }
                            f();
                        }());
                }
                if (M.wk)
                    (function () {
                        if (J)
                            return;
                        if (!/loaded|complete/.test(j.readyState)) {
                            setTimeout(arguments.callee, 0);
                            return;
                        }
                        f();
                    }());
                s(f);
            }
        }();
    function f() {
        if (J)
            return;
        try {
            var Z = j.getElementsByTagName('body')[0].appendChild(C('span'));
            Z.parentNode.removeChild(Z);
        } catch (aa) {
            return;
        }
        J = true;
        var X = U.length;
        for (var Y = 0; Y < X; Y++)
            U[Y]();
    }
    function K(X) {
        if (J)
            X();
        else
            U[U.length] = X;
    }
    function s(Y) {
        if (typeof O.addEventListener != D)
            O.addEventListener('load', Y, false);
        else if (typeof j.addEventListener != D)
            j.addEventListener('load', Y, false);
        else if (typeof O.attachEvent != D)
            i(O, 'onload', Y);
        else if (typeof O.onload == 'function') {
            var X = O.onload;
            O.onload = function () {
                X();
                Y();
            };
        } else
            O.onload = Y;
    }
    function h() {
        if (T)
            V();
        else
            H();
    }
    function V() {
        var X = j.getElementsByTagName('body')[0];
        var aa = C(r);
        aa.setAttribute('type', q);
        var Z = X.appendChild(aa);
        if (Z) {
            var Y = 0;
            (function () {
                if (typeof Z.GetVariable != D) {
                    var ab = Z.GetVariable('$version');
                    if (ab) {
                        ab = ab.split(' ')[1].split(',');
                        M.pv = [
                            parseInt(ab[0], 10),
                            parseInt(ab[1], 10),
                            parseInt(ab[2], 10)
                        ];
                    }
                } else if (Y < 10) {
                    Y++;
                    setTimeout(arguments.callee, 10);
                    return;
                }
                X.removeChild(aa);
                Z = null;
                H();
            }());
        } else
            H();
    }
    function H() {
        var ag = o.length;
        if (ag > 0)
            for (var af = 0; af < ag; af++) {
                var Y = o[af].id;
                var ab = o[af].callbackFn;
                var aa = {
                    success: false,
                    id: Y
                };
                if (M.pv[0] > 0) {
                    var ae = c(Y);
                    if (ae)
                        if (F(o[af].swfVersion) && !(M.wk && M.wk < 312)) {
                            w(Y, true);
                            if (ab) {
                                aa.success = true;
                                aa.ref = z(Y);
                                ab(aa);
                            }
                        } else if (o[af].expressInstall && A()) {
                            var ai = {};
                            ai.data = o[af].expressInstall;
                            ai.width = ae.getAttribute('width') || '0';
                            ai.height = ae.getAttribute('height') || '0';
                            if (ae.getAttribute('class'))
                                ai.styleclass = ae.getAttribute('class');
                            if (ae.getAttribute('align'))
                                ai.align = ae.getAttribute('align');
                            var ah = {};
                            var X = ae.getElementsByTagName('param');
                            var ac = X.length;
                            for (var ad = 0; ad < ac; ad++)
                                if (X[ad].getAttribute('name').toLowerCase() != 'movie')
                                    ah[X[ad].getAttribute('name')] = X[ad].getAttribute('value');
                            P(ai, ah, Y, ab);
                        } else {
                            p(ae);
                            if (ab)
                                ab(aa);
                        }
                } else {
                    w(Y, true);
                    if (ab) {
                        var Z = z(Y);
                        if (Z && typeof Z.SetVariable != D) {
                            aa.success = true;
                            aa.ref = Z;
                        }
                        ab(aa);
                    }
                }
            }
    }
    function z(aa) {
        var X = null;
        var Y = c(aa);
        if (Y && Y.nodeName == 'OBJECT')
            if (typeof Y.SetVariable != D)
                X = Y;
            else {
                var Z = Y.getElementsByTagName(r)[0];
                if (Z)
                    X = Z;
            }
        return X;
    }
    function A() {
        return !a && (F('6.0.65') && ((M.win || M.mac) && !(M.wk && M.wk < 312)));
    }
    function P(aa, ab, X, Z) {
        a = true;
        E = Z || null;
        B = {
            success: false,
            id: X
        };
        var ae = c(X);
        if (ae) {
            if (ae.nodeName == 'OBJECT') {
                l = g(ae);
                Q = null;
            } else {
                l = ae;
                Q = X;
            }
            aa.id = R;
            if (typeof aa.width == D || !/%$/.test(aa.width) && parseInt(aa.width, 10) < 310)
                aa.width = '310';
            if (typeof aa.height == D || !/%$/.test(aa.height) && parseInt(aa.height, 10) < 137)
                aa.height = '137';
            j.title = j.title.slice(0, 47) + ' - Flash Player Installation';
            var ad = M.ie && M.win ? 'ActiveX' : 'PlugIn', ac = 'MMredirectURL=' + O.location.toString().replace(/&/g, '%26') + '&MMplayerType=' + ad + '&MMdoctitle=' + j.title;
            if (typeof ab.flashvars != D)
                ab.flashvars += '&' + ac;
            else
                ab.flashvars = ac;
            if (M.ie && (M.win && ae.readyState != 4)) {
                var Y = C('div');
                X += 'SWFObjectNew';
                Y.setAttribute('id', X);
                ae.parentNode.insertBefore(Y, ae);
                ae.style.display = 'none';
                (function () {
                    if (ae.readyState == 4)
                        ae.parentNode.removeChild(ae);
                    else
                        setTimeout(arguments.callee, 10);
                }());
            }
            u(aa, ab, X);
        }
    }
    function p(Y) {
        if (M.ie && (M.win && Y.readyState != 4)) {
            var X = C('div');
            Y.parentNode.insertBefore(X, Y);
            X.parentNode.replaceChild(g(Y), X);
            Y.style.display = 'none';
            (function () {
                if (Y.readyState == 4)
                    Y.parentNode.removeChild(Y);
                else
                    setTimeout(arguments.callee, 10);
            }());
        } else
            Y.parentNode.replaceChild(g(Y), Y);
    }
    function g(ab) {
        var aa = C('div');
        if (M.win && M.ie)
            aa.innerHTML = ab.innerHTML;
        else {
            var Y = ab.getElementsByTagName(r)[0];
            if (Y) {
                var ad = Y.childNodes;
                if (ad) {
                    var X = ad.length;
                    for (var Z = 0; Z < X; Z++)
                        if (!(ad[Z].nodeType == 1 && ad[Z].nodeName == 'PARAM') && !(ad[Z].nodeType == 8))
                            aa.appendChild(ad[Z].cloneNode(true));
                }
            }
        }
        return aa;
    }
    function u(ai, ag, Y) {
        var X, aa = c(Y);
        if (M.wk && M.wk < 312)
            return X;
        if (aa) {
            if (typeof ai.id == D)
                ai.id = Y;
            if (M.ie && M.win) {
                var ah = '';
                for (var ae in ai)
                    if (ai[ae] != Object.prototype[ae])
                        if (ae.toLowerCase() == 'data')
                            ag.movie = ai[ae];
                        else if (ae.toLowerCase() == 'styleclass')
                            ah += ' class="' + ai[ae] + '"';
                        else if (ae.toLowerCase() != 'classid')
                            ah += ' ' + ae + '="' + ai[ae] + '"';
                var af = '';
                for (var ad in ag)
                    if (ag[ad] != Object.prototype[ad])
                        af += '<param name="' + ad + '" value="' + ag[ad] + '" />';
                aa.outerHTML = '<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"' + ah + '>' + af + '</object>';
                N[N.length] = ai.id;
                X = c(ai.id);
            } else {
                var Z = C(r);
                Z.setAttribute('type', q);
                for (var ac in ai)
                    if (ai[ac] != Object.prototype[ac])
                        if (ac.toLowerCase() == 'styleclass')
                            Z.setAttribute('class', ai[ac]);
                        else if (ac.toLowerCase() != 'classid')
                            Z.setAttribute(ac, ai[ac]);
                for (var ab in ag)
                    if (ag[ab] != Object.prototype[ab] && ab.toLowerCase() != 'movie')
                        e(Z, ab, ag[ab]);
                aa.parentNode.replaceChild(Z, aa);
                X = Z;
            }
        }
        return X;
    }
    function e(Z, X, Y) {
        var aa = C('param');
        aa.setAttribute('name', X);
        aa.setAttribute('value', Y);
        Z.appendChild(aa);
    }
    function y(Y) {
        var X = c(Y);
        if (X && X.nodeName == 'OBJECT')
            if (M.ie && M.win) {
                X.style.display = 'none';
                (function () {
                    if (X.readyState == 4)
                        b(Y);
                    else
                        setTimeout(arguments.callee, 10);
                }());
            } else
                X.parentNode.removeChild(X);
    }
    function b(Z) {
        var Y = c(Z);
        if (Y) {
            for (var X in Y)
                if (typeof Y[X] == 'function')
                    Y[X] = null;
            Y.parentNode.removeChild(Y);
        }
    }
    function c(Z) {
        var X = null;
        try {
            X = j.getElementById(Z);
        } catch (Y) {
        }
        return X;
    }
    function C(X) {
        return j.createElement(X);
    }
    function i(Z, X, Y) {
        Z.attachEvent(X, Y);
        I[I.length] = [
            Z,
            X,
            Y
        ];
    }
    function F(Z) {
        var Y = M.pv, X = Z.split('.');
        X[0] = parseInt(X[0], 10);
        X[1] = parseInt(X[1], 10) || 0;
        X[2] = parseInt(X[2], 10) || 0;
        return Y[0] > X[0] || (Y[0] == X[0] && Y[1] > X[1] || Y[0] == X[0] && (Y[1] == X[1] && Y[2] >= X[2])) ? true : false;
    }
    function v(ac, Y, ad, ab) {
        if (M.ie && M.mac)
            return;
        var aa = j.getElementsByTagName('head')[0];
        if (!aa)
            return;
        var X = ad && typeof ad == 'string' ? ad : 'screen';
        if (ab) {
            n = null;
            G = null;
        }
        if (!n || G != X) {
            var Z = C('style');
            Z.setAttribute('type', 'text/css');
            Z.setAttribute('media', X);
            n = aa.appendChild(Z);
            if (M.ie && (M.win && (typeof j.styleSheets != D && j.styleSheets.length > 0)))
                n = j.styleSheets[j.styleSheets.length - 1];
            G = X;
        }
        if (M.ie && M.win) {
            if (n && typeof n.addRule == r)
                n.addRule(ac, Y);
        } else if (n && typeof j.createTextNode != D)
            n.appendChild(j.createTextNode(ac + ' {' + Y + '}'));
    }
    function w(Z, X) {
        if (!m)
            return;
        var Y = X ? 'visible' : 'hidden';
        if (J && c(Z))
            c(Z).style.visibility = Y;
        else
            v('#' + Z, 'visibility:' + Y);
    }
    function L(Y) {
        var Z = /[\\\"<>\.;]/;
        var X = Z.exec(Y) != null;
        return X && typeof encodeURIComponent != D ? encodeURIComponent(Y) : Y;
    }
    var d = function () {
        if (M.ie && M.win)
            window.attachEvent('onunload', function () {
                var ac = I.length;
                for (var ab = 0; ab < ac; ab++)
                    I[ab][0].detachEvent(I[ab][1], I[ab][2]);
                var Z = N.length;
                for (var aa = 0; aa < Z; aa++)
                    y(N[aa]);
                for (var Y in M)
                    M[Y] = null;
                M = null;
                for (var X in swfobject)
                    swfobject[X] = null;
                swfobject = null;
            });
    }();
    return {
        registerObject: function (ab, X, aa, Z) {
            if (M.w3 && (ab && X)) {
                var Y = {};
                Y.id = ab;
                Y.swfVersion = X;
                Y.expressInstall = aa;
                Y.callbackFn = Z;
                o[o.length] = Y;
                w(ab, false);
            } else if (Z)
                Z({
                    success: false,
                    id: ab
                });
        },
        getObjectById: function (X) {
            if (M.w3)
                return z(X);
        },
        embedSWF: function (ab, ah, ae, ag, Y, aa, Z, ad, af, ac) {
            var X = {
                success: false,
                id: ah
            };
            if (M.w3 && (!(M.wk && M.wk < 312) && (ab && (ah && (ae && (ag && Y)))))) {
                w(ah, false);
                K(function () {
                    ae += '';
                    ag += '';
                    var aj = {};
                    if (af && typeof af === r)
                        for (var al in af)
                            aj[al] = af[al];
                    aj.data = ab;
                    aj.width = ae;
                    aj.height = ag;
                    var am = {};
                    if (ad && typeof ad === r)
                        for (var ak in ad)
                            am[ak] = ad[ak];
                    if (Z && typeof Z === r)
                        for (var ai in Z)
                            if (typeof am.flashvars != D)
                                am.flashvars += '&' + ai + '=' + Z[ai];
                            else
                                am.flashvars = ai + '=' + Z[ai];
                    if (F(Y)) {
                        var an = u(aj, am, ah);
                        if (aj.id == ah)
                            w(ah, true);
                        X.success = true;
                        X.ref = an;
                    } else if (aa && A()) {
                        aj.data = aa;
                        P(aj, am, ah, ac);
                        return;
                    } else
                        w(ah, true);
                    if (ac)
                        ac(X);
                });
            } else if (ac)
                ac(X);
        },
        switchOffAutoHideShow: function () {
            m = false;
        },
        ua: M,
        getFlashPlayerVersion: function () {
            return {
                major: M.pv[0],
                minor: M.pv[1],
                release: M.pv[2]
            };
        },
        hasFlashPlayerVersion: F,
        createSWF: function (Z, Y, X) {
            if (M.w3)
                return u(Z, Y, X);
            else
                return undefined;
        },
        showExpressInstall: function (Z, aa, X, Y) {
            if (M.w3 && A())
                P(Z, aa, X, Y);
        },
        removeSWF: function (X) {
            if (M.w3)
                y(X);
        },
        createCSS: function (aa, Z, Y, X) {
            if (M.w3)
                v(aa, Z, Y, X);
        },
        addDomLoadEvent: K,
        addLoadEvent: s,
        getQueryParamValue: function (aa) {
            var Z = j.location.search || j.location.hash;
            if (Z) {
                if (/\?/.test(Z))
                    Z = Z.split('?')[1];
                if (aa == null)
                    return L(Z);
                var Y = Z.split('&');
                for (var X = 0; X < Y.length; X++)
                    if (Y[X].substring(0, Y[X].indexOf('=')) == aa)
                        return L(Y[X].substring(Y[X].indexOf('=') + 1));
            }
            return '';
        },
        expressInstallCallback: function () {
            if (a) {
                var X = c(R);
                if (X && l) {
                    X.parentNode.replaceChild(l, X);
                    if (Q) {
                        w(Q, true);
                        if (M.ie && M.win)
                            l.style.display = 'block';
                    }
                    if (E)
                        E(B);
                }
                a = false;
            }
        }
    };
}();
define('swfObject', [], function () {
    return;
});

(function ($) {
    var inviewObjects = {}, viewportSize, viewportOffset, d = document, w = window, documentElement = d.documentElement, expando = $.expando, timer;
    $.event.special.inview = {
        add: function (data) {
            inviewObjects[data.guid + '-' + this[expando]] = {
                data: data,
                $element: $(this)
            };
            if (!timer && !$.isEmptyObject(inviewObjects)) {
                timer = setInterval(checkInView, 250);
            }
        },
        remove: function (data) {
            try {
                delete inviewObjects[data.guid + '-' + this[expando]];
            } catch (e) {
            }
            if ($.isEmptyObject(inviewObjects)) {
                clearInterval(timer);
                timer = null;
            }
        }
    };
    function getViewportSize() {
        var mode, domObject, size = {
                height: w.innerHeight,
                width: w.innerWidth
            };
        if (!size.height) {
            mode = d.compatMode;
            if (mode || !$.support.boxModel) {
                domObject = mode === 'CSS1Compat' ? documentElement : d.body;
                size = {
                    height: domObject.clientHeight,
                    width: domObject.clientWidth
                };
            }
        }
        return size;
    }
    function getViewportOffset() {
        return {
            top: w.pageYOffset || documentElement.scrollTop || d.body.scrollTop,
            left: w.pageXOffset || documentElement.scrollLeft || d.body.scrollLeft
        };
    }
    function checkInView() {
        var navigationOffset = $('.navigation').height();
        var $elements = $(), elementsLength, i = 0;
        $.each(inviewObjects, function (i, inviewObject) {
            var selector = inviewObject.data.selector, $element = inviewObject.$element, inviewElement = selector ? $element.find(selector) : $element;
            inviewElement.inviewOffset = inviewObject.data.data ? inviewObject.data.data.offset : 0;
            $elements = $elements.add(inviewElement);
        });
        elementsLength = $elements.length;
        if (elementsLength) {
            viewportSize = viewportSize || getViewportSize();
            viewportOffset = viewportOffset || getViewportOffset();
            for (; i < elementsLength; i++) {
                if (!$.contains(documentElement, $elements[i])) {
                    continue;
                }
                var $element = $($elements[i]), elementSize = {
                        height: $element.height(),
                        width: $element.width()
                    }, elementOffset = $element.offset(), inView = $element.data('inview'), visiblePartX, visiblePartY, visiblePartsMerged;
                if (!viewportOffset || !viewportSize) {
                    return;
                }
                elementOffset.top = elementOffset.top - navigationOffset;
                if (elementOffset.top + elementSize.height > viewportOffset.top && elementOffset.top < viewportOffset.top + viewportSize.height && elementOffset.left + elementSize.width > viewportOffset.left && elementOffset.left < viewportOffset.left + viewportSize.width) {
                    visiblePartX = viewportOffset.left > elementOffset.left ? 'right' : viewportOffset.left + viewportSize.width < elementOffset.left + elementSize.width ? 'left' : 'both';
                    visiblePartY = viewportOffset.top > elementOffset.top ? 'bottom' : viewportOffset.top + viewportSize.height < elementOffset.top + elementSize.height ? 'top' : 'both';
                    visiblePartsMerged = visiblePartX + '-' + visiblePartY;
                    if (!inView || inView !== visiblePartsMerged) {
                        $element.data('inview', visiblePartsMerged).trigger('inview', [
                            true,
                            visiblePartX,
                            visiblePartY
                        ]);
                    }
                } else if (inView) {
                    $element.data('inview', false).trigger('inview', [false]);
                }
            }
        }
    }
    $(w).bind('scroll resize', function () {
        viewportSize = viewportOffset = null;
    });
    if (!documentElement.addEventListener && documentElement.attachEvent) {
        documentElement.attachEvent('onfocusin', function () {
            viewportOffset = null;
        });
    }
}(jQuery));
define('inview', [], function () {
    return;
});

(function ($) {
    $.fn.imageready = function (callback, userSettings) {
        var options = $.extend({}, $.fn.imageready.defaults, userSettings), $images = this.find('img').add(this.filter('img')), unloadedImages = $images.length;
        function loaded() {
            unloadedImages--;
            !unloadedImages && callback();
        }
        function bindLoad() {
            this.one('load', loaded);
            if (navigator.userAgent.toLowerCase().match('msie')) {
                var src = this.attr('src'), param = src.match(/\?/) ? '&' : '?';
                param += options.cachePrefix + '=' + new Date().getTime();
                this.attr('src', src + param);
            }
        }
        return $images.each(function () {
            var $this = $(this);
            if (!$this.attr('src')) {
                loaded();
                return;
            }
            this.complete || this.readyState === 4 ? loaded() : bindLoad.call($this);
        });
    };
    $.fn.imageready.defaults = { cachePrefix: 'random' };
}(jQuery));
define('imageReady', [], function () {
    return;
});

'use strict';
function f() {
    return function () {
    };
}
(function () {
    function c(a, l, b) {
        var c = Array.prototype.slice.call(arguments, 2);
        return function () {
            var b = c.concat(Array.prototype.slice.call(arguments, 0));
            a.apply(l, b);
        };
    }
    window.console || (window.console = {});
    var a = window.console;
    if (!a.log)
        if (window.log4javascript) {
            var b = log4javascript.getDefaultLogger();
            a.log = c(b.info, b);
            a.debug = c(b.debug, b);
            a.info = c(b.info, b);
            a.warn = c(b.warn, b);
            a.error = c(b.error, b);
        } else
            a.log = f();
    a.debug || (a.debug = a.log);
    a.info || (a.info = a.log);
    a.warn || (a.warn = a.log);
    a.error || (a.error = a.log);
    if (null != window.__consoleShimTest__ || eval('/*@cc_on @_jscript_version <= 9@*/'))
        b = function (d) {
            var b, e, c;
            d = Array.prototype.slice.call(arguments, 0);
            c = d.shift();
            e = d.length;
            if (1 < e && !1 !== window.__consoleShimTest__) {
                'string' != typeof d[0] && (d.unshift('%o'), e += 1);
                for (b = (b = d[0].match(/%[a-z]/g)) ? b.length + 1 : 1; b < e; b += 1)
                    d[0] += ' %o';
            }
            Function.apply.call(c, a, d);
        }, a.log = c(b, window, a.log), a.debug = c(b, window, a.debug), a.info = c(b, window, a.info), a.warn = c(b, window, a.warn), a.error = c(b, window, a.error);
    a.assert || (a.assert = function () {
        var d = Array.prototype.slice.call(arguments, 0);
        d.shift() || (d[0] = 'Assertion failed: ' + d[0], a.error.apply(a, d));
    });
    a.dir || (a.dir = a.log);
    a.dirxml || (a.dirxml = a.log);
    a.exception || (a.exception = a.error);
    if (!a.time || !a.timeEnd) {
        var g = {};
        a.time = function (a) {
            g[a] = new Date().getTime();
        };
        a.timeEnd = function (b) {
            var c = g[b];
            c && (a.log(b + ': ' + (new Date().getTime() - c) + 'ms'), delete g[b]);
        };
    }
    a.table || (a.table = function (b, c) {
        var e, g, j, h, k;
        if (b && b instanceof Array && b.length) {
            if (!c || !(c instanceof Array))
                for (e in c = [], b[0])
                    b[0].hasOwnProperty(e) && c.push(e);
            e = 0;
            for (g = b.length; e < g; e += 1) {
                j = [];
                h = 0;
                for (k = c.length; h < k; h += 1)
                    j.push(b[e][c[h]]);
                Function.apply.call(a.log, a, j);
            }
        }
    });
    a.clear || (a.clear = f());
    a.trace || (a.trace = f());
    a.group || (a.group = f());
    a.groupCollapsed || (a.groupCollapsed = f());
    a.groupEnd || (a.groupEnd = f());
    a.timeStamp || (a.timeStamp = f());
    a.profile || (a.profile = f());
    a.profileEnd || (a.profileEnd = f());
    a.count || (a.count = f());
}());
define('consoles', [], function () {
    return;
});

!function (e, t) {
    typeof module != 'undefined' && module.exports ? module.exports.browser = t() : typeof define == 'function' ? define('bowser', [], t) : this[e] = t();
}('bowser', function () {
    function t(t) {
        function n(e) {
            var n = t.match(e);
            return n && n.length > 1 && n[1] || '';
        }
        var r = n(/(ipod|iphone|ipad)/i).toLowerCase(), i = /like android/i.test(t), s = !i && /android/i.test(t), o = n(/version\/(\d+(\.\d+)?)/i), u = /tablet/i.test(t), a = !u && /[^-]mobi/i.test(t), f;
        /opera|opr/i.test(t) ? f = {
            name: 'Opera',
            opera: e,
            version: o || n(/(?:opera|opr)[\s\/](\d+(\.\d+)?)/i)
        } : /windows phone/i.test(t) ? f = {
            name: 'Windows Phone',
            windowsphone: e,
            msie: e,
            version: n(/iemobile\/(\d+(\.\d+)?)/i)
        } : /msie|trident/i.test(t) ? f = {
            name: 'Internet Explorer',
            msie: e,
            version: n(/(?:msie |rv:)(\d+(\.\d+)?)/i)
        } : /chrome|crios|crmo/i.test(t) ? f = {
            name: 'Chrome',
            chrome: e,
            version: n(/(?:chrome|crios|crmo)\/(\d+(\.\d+)?)/i)
        } : r ? (f = { name: r == 'iphone' ? 'iPhone' : r == 'ipad' ? 'iPad' : 'iPod' }, o && (f.version = o)) : /sailfish/i.test(t) ? f = {
            name: 'Sailfish',
            sailfish: e,
            version: n(/sailfish\s?browser\/(\d+(\.\d+)?)/i)
        } : /seamonkey\//i.test(t) ? f = {
            name: 'SeaMonkey',
            seamonkey: e,
            version: n(/seamonkey\/(\d+(\.\d+)?)/i)
        } : /firefox|iceweasel/i.test(t) ? (f = {
            name: 'Firefox',
            firefox: e,
            version: n(/(?:firefox|iceweasel)[ \/](\d+(\.\d+)?)/i)
        }, /\((mobile|tablet);[^\)]*rv:[\d\.]+\)/i.test(t) && (f.firefoxos = e)) : /silk/i.test(t) ? f = {
            name: 'Amazon Silk',
            silk: e,
            version: n(/silk\/(\d+(\.\d+)?)/i)
        } : s ? f = {
            name: 'Android',
            version: o
        } : /phantom/i.test(t) ? f = {
            name: 'PhantomJS',
            phantom: e,
            version: n(/phantomjs\/(\d+(\.\d+)?)/i)
        } : /blackberry|\bbb\d+/i.test(t) || /rim\stablet/i.test(t) ? f = {
            name: 'BlackBerry',
            blackberry: e,
            version: o || n(/blackberry[\d]+\/(\d+(\.\d+)?)/i)
        } : /(web|hpw)os/i.test(t) ? (f = {
            name: 'WebOS',
            webos: e,
            version: o || n(/w(?:eb)?osbrowser\/(\d+(\.\d+)?)/i)
        }, /touchpad\//i.test(t) && (f.touchpad = e)) : /bada/i.test(t) ? f = {
            name: 'Bada',
            bada: e,
            version: n(/dolfin\/(\d+(\.\d+)?)/i)
        } : /tizen/i.test(t) ? f = {
            name: 'Tizen',
            tizen: e,
            version: n(/(?:tizen\s?)?browser\/(\d+(\.\d+)?)/i) || o
        } : /safari/i.test(t) ? f = {
            name: 'Safari',
            safari: e,
            version: o
        } : f = {}, /(apple)?webkit/i.test(t) ? (f.name = f.name || 'Webkit', f.webkit = e, !f.version && o && (f.version = o)) : !f.opera && /gecko\//i.test(t) && (f.name = f.name || 'Gecko', f.gecko = e, f.version = f.version || n(/gecko\/(\d+(\.\d+)?)/i)), s || f.silk ? f.android = e : r && (f[r] = e, f.ios = e);
        var l = '';
        r ? (l = n(/os (\d+([_\s]\d+)*) like mac os x/i), l = l.replace(/[_\s]/g, '.')) : s ? l = n(/android[ \/-](\d+(\.\d+)*)/i) : f.windowsphone ? l = n(/windows phone (?:os)?\s?(\d+(\.\d+)*)/i) : f.webos ? l = n(/(?:web|hpw)os\/(\d+(\.\d+)*)/i) : f.blackberry ? l = n(/rim\stablet\sos\s(\d+(\.\d+)*)/i) : f.bada ? l = n(/bada\/(\d+(\.\d+)*)/i) : f.tizen && (l = n(/tizen[\/\s](\d+(\.\d+)*)/i)), l && (f.osversion = l);
        var c = l.split('.')[0];
        if (u || r == 'ipad' || s && (c == 3 || c == 4 && !a) || f.silk)
            f.tablet = e;
        else if (a || r == 'iphone' || r == 'ipod' || s || f.blackberry || f.webos || f.bada)
            f.mobile = e;
        return f.msie && f.version >= 10 || f.chrome && f.version >= 20 || f.firefox && f.version >= 20 || f.safari && f.version >= 6 || f.opera && f.version >= 10 || f.ios && f.osversion && f.osversion.split('.')[0] >= 6 ? f.a = e : f.msie && f.version < 10 || f.chrome && f.version < 20 || f.firefox && f.version < 20 || f.safari && f.version < 6 || f.opera && f.version < 10 || f.ios && f.osversion && f.osversion.split('.')[0] < 6 ? f.c = e : f.x = e, f;
    }
    var e = !0, n = t(typeof navigator != 'undefined' ? navigator.userAgent : '');
    return n._detect = t, n;
});

define('core', [
    'handlebars',
    'underscore',
    'backbone',
    'jquery',
    'modernizr',
    'velocity',
    'scrollTo',
    'swfObject',
    'inview',
    'imageReady',
    'consoles',
    'bowser'
], function () {
    console.log('core');
});

//# sourceMappingURL=../adapt/js/core.min.js.map